# NLS_ENCODING=UNICODE
# NLS_MESSAGEFORMAT_VAR

# name keys/values
opl.samples.name.examplessuite = [\u8868\u7af9\uff5eExamples Suite~~~~~~~ja]
opl.samples.name.lagrangianrelaxation = [\u8868\u7af9\uff5eLagrangian Relaxation~~~~~~~~~~ja]
opl.samples.name.ppp = [\u8868\u7af9\uff5ePPPja]
opl.samples.name.blending = [\u8868\u7af9\uff5eBlending~~~ja]
opl.samples.name.color = [\u8868\u7af9\uff5ecolor~ja]
opl.samples.name.config = [\u8868\u7af9\uff5econfig~~ja]
opl.samples.name.conflictiterator = [\u8868\u7af9\uff5econflict iterator~~~~~~~~ja]
opl.samples.name.convert_example = [\u8868\u7af9\uff5econvert_example~~~~~~~ja]
opl.samples.name.covering = [\u8868\u7af9\uff5ecovering~~~ja]
opl.samples.name.customdatasource = [\u8868\u7af9\uff5ecustom datasource~~~~~~~~ja]
opl.samples.name.cutstock = [\u8868\u7af9\uff5ecutstock~~~ja]
opl.samples.name.euler = [\u8868\u7af9\uff5eeuler~ja]
opl.samples.name.fixed = [\u8868\u7af9\uff5efixed~ja]
opl.samples.name.floatexpr = [\u8868\u7af9\uff5efloatexpr~~~ja]
opl.samples.name.foodmanufact = [\u8868\u7af9\uff5efoodmanufact~~~~~ja]
opl.samples.name.gas = [\u8868\u7af9\uff5egasja]
opl.samples.name.iterators = [\u8868\u7af9\uff5eiterators~~~ja]
opl.samples.name.knapsack = [\u8868\u7af9\uff5eknapsack~~~ja]
opl.samples.name.lifegameip = [\u8868\u7af9\uff5elifegameip~~~ja]
opl.samples.name.miqpex1 = [\u8868\u7af9\uff5emiqpex1~~~ja]
opl.samples.name.mulprod = [\u8868\u7af9\uff5emulprod~~~ja]
opl.samples.name.nurses = [\u8868\u7af9\uff5enurses~~ja]
opl.samples.name.oil = [\u8868\u7af9\uff5eoilja]
opl.samples.name.pmedian = [\u8868\u7af9\uff5epmedian~~~ja]
opl.samples.name.prodmilp = [\u8868\u7af9\uff5eprodmilp~~~ja]
opl.samples.name.production = [\u8868\u7af9\uff5eproduction~~~ja]
opl.samples.name.profiler = [\u8868\u7af9\uff5eprofiler~~~ja]
opl.samples.name.schedulingtutorial = [\u8868\u7af9\uff5eScheduling tutorial~~~~~~~~~ja]
opl.samples.name.qcpex1 = [\u8868\u7af9\uff5eqcpex1~~ja]
opl.samples.name.qpex1 = [\u8868\u7af9\uff5eqpex1~ja]
opl.samples.name.quadassign = [\u8868\u7af9\uff5equadassign~~~ja]
opl.samples.name.relaxationiterator = [\u8868\u7af9\uff5erelaxation iterator~~~~~~~~~ja]
opl.samples.name.sailco = [\u8868\u7af9\uff5esailco~~ja]
opl.samples.name.sched_alloc = [\u8868\u7af9\uff5esched_alloc~~~~ja]
opl.samples.name.sched_bridge = [\u8868\u7af9\uff5esched_bridge~~~~~ja]
opl.samples.name.sched_bridgebr = [\u8868\u7af9\uff5esched_bridgebr~~~~~~~ja]
opl.samples.name.sched_calendar = [\u8868\u7af9\uff5esched_calendar~~~~~~~ja]
opl.samples.name.sched_cumul = [\u8868\u7af9\uff5esched_cumul~~~~ja]
opl.samples.name.sched_flowshop = [\u8868\u7af9\uff5esched_flowshop~~~~~~~ja]
opl.samples.name.sched_intro = [\u8868\u7af9\uff5esched_intro~~~~ja]
opl.samples.name.sched_jobshop = [\u8868\u7af9\uff5esched_jobshop~~~~~~ja]
opl.samples.name.sched_jobshopflex = [\u8868\u7af9\uff5esched_jobshopflex~~~~~~~~ja]
opl.samples.name.sched_openshop = [\u8868\u7af9\uff5esched_openshop~~~~~~~ja]
opl.samples.name.sched_optional = [\u8868\u7af9\uff5esched_optional~~~~~~~ja]
opl.samples.name.sched_pflowshop = [\u8868\u7af9\uff5esched_pflowshop~~~~~~~ja]
opl.samples.name.sched_production = [\u8868\u7af9\uff5esched_production~~~~~~~~ja]
opl.samples.name.sched_rcpsp = [\u8868\u7af9\uff5esched_rcpsp~~~~ja]
opl.samples.name.sched_rcpspmm = [\u8868\u7af9\uff5esched_rcpspmm~~~~~~ja]
opl.samples.name.sched_sequence = [\u8868\u7af9\uff5esched_sequence~~~~~~~ja]
opl.samples.name.sched_setup = [\u8868\u7af9\uff5esched_setup~~~~ja]
opl.samples.name.sched_shipload = [\u8868\u7af9\uff5esched_shipload~~~~~~~ja]
opl.samples.name.sched_square = [\u8868\u7af9\uff5esched_square~~~~~ja]
opl.samples.name.sched_state = [\u8868\u7af9\uff5esched_state~~~~ja]
opl.samples.name.sched_tcost = [\u8868\u7af9\uff5esched_tcost~~~~ja]
opl.samples.name.sched_time = [\u8868\u7af9\uff5esched_time~~~ja]
opl.samples.name.sched_trolley1 = [\u8868\u7af9\uff5esched_trolley1~~~~~~~ja]
opl.samples.name.sched_trolley2 = [\u8868\u7af9\uff5esched_trolley2~~~~~~~ja]
opl.samples.name.sports = [\u8868\u7af9\uff5esports~~ja]
opl.samples.name.steelmill = [\u8868\u7af9\uff5esteelmill~~~ja]
opl.samples.name.talent = [\u8868\u7af9\uff5etalent~~ja]
opl.samples.name.teambuilding = [\u8868\u7af9\uff5eteambuilding~~~~~ja]
opl.samples.name.schoolclassscheduling = [\u8868\u7af9\uff5eSchool class scheduling~~~~~~~~~~~ja]
opl.samples.name.transp = [\u8868\u7af9\uff5etransp~~ja]
opl.samples.name.vellino = [\u8868\u7af9\uff5evellino~~~ja]
opl.samples.name.volsay = [\u8868\u7af9\uff5evolsay~~ja]
opl.samples.name.warehouse = [\u8868\u7af9\uff5ewarehouse~~~ja]
opl.samples.name.warmstart = [\u8868\u7af9\uff5ewarmstart~~~ja]
opl.samples.name.xsteel = [\u8868\u7af9\uff5exsteel~~ja]
opl.samples.name.assemblysequencing = [\u8868\u7af9\uff5eAssembly Sequencing~~~~~~~~~ja]
opl.samples.name.basketballscheduling = [\u8868\u7af9\uff5eBasketball Scheduling~~~~~~~~~~ja]
opl.samples.name.bidselection = [\u8868\u7af9\uff5eBid Selection~~~~~~ja]
opl.samples.name.blendingmulti-period = [\u8868\u7af9\uff5eBlending Multi-period~~~~~~~~~~ja]
opl.samples.name.capitalbudgeting = [\u8868\u7af9\uff5eCapital budgeting~~~~~~~~ja]
opl.samples.name.callroute = [\u8868\u7af9\uff5eCall route~~~ja]
opl.samples.name.calltrafficoptimization = [\u8868\u7af9\uff5eCall Traffic Optimization~~~~~~~~~~~~ja]
opl.samples.name.car = [\u8868\u7af9\uff5eCarja]
opl.samples.name.crewscheduling = [\u8868\u7af9\uff5eCrew scheduling~~~~~~~ja]
opl.samples.name.decentralization = [\u8868\u7af9\uff5eDecentralization~~~~~~~~ja]
opl.samples.name.productdeployment = [\u8868\u7af9\uff5eProduct deployment~~~~~~~~~ja]
opl.samples.name.economicplanning = [\u8868\u7af9\uff5eEconomic planning~~~~~~~~ja]
opl.samples.name.factoryplanning = [\u8868\u7af9\uff5eFactory planning~~~~~~~~ja]
opl.samples.name.farmplanning = [\u8868\u7af9\uff5eFarm planning~~~~~~ja]
opl.samples.name.fleetassignment = [\u8868\u7af9\uff5eFleet Assignment~~~~~~~~ja]
opl.samples.name.foodmanufacture1 = [\u8868\u7af9\uff5eFood manufacture 1~~~~~~~~~ja]
opl.samples.name.manpowerplanning = [\u8868\u7af9\uff5eManpower planning~~~~~~~~ja]
opl.samples.name.mineplanning = [\u8868\u7af9\uff5eMine planning~~~~~~ja]
opl.samples.name.networkflows = [\u8868\u7af9\uff5eNetwork flows~~~~~~ja]
opl.samples.name.noughtsandcrosses = [\u8868\u7af9\uff5eNoughts and crosses~~~~~~~~~ja]
opl.samples.name.opencastmining = [\u8868\u7af9\uff5eOpencast mining~~~~~~~ja]
opl.samples.name.outsourcing = [\u8868\u7af9\uff5eOutsourcing~~~~ja]
opl.samples.name.portfoliooptimization = [\u8868\u7af9\uff5ePortfolio optimization~~~~~~~~~~~ja]
opl.samples.name.productionplanning = [\u8868\u7af9\uff5eProduction planning~~~~~~~~~ja]
opl.samples.name.refineryplanning = [\u8868\u7af9\uff5eRefinery planning~~~~~~~~ja]
opl.samples.name.airtrafficflowmanagement = [\u8868\u7af9\uff5eAir traffic flow management~~~~~~~~~~~~ja]
opl.samples.name.flowshopscheduling = [\u8868\u7af9\uff5eFlow-shop scheduling~~~~~~~~~~ja]
opl.samples.name.multimachineassignmentschedulingproblem = [\u8868\u7af9\uff5eMulti-machine assignment scheduling problem~~~~~~~~~~~~~~ja]
opl.samples.name.taskscheduling = [\u8868\u7af9\uff5eTask scheduling~~~~~~~ja]
opl.samples.name.woodcuttingproblem = [\u8868\u7af9\uff5eWood cutting problem~~~~~~~~~~ja]
opl.samples.name.staffassignment = [\u8868\u7af9\uff5eStaff assignment~~~~~~~~ja]
opl.samples.name.steelproduction = [\u8868\u7af9\uff5eSteel production~~~~~~~~ja]
opl.samples.name.multistagesupplychain = [\u8868\u7af9\uff5eMulti-stage supply chain~~~~~~~~~~~ja]
opl.samples.name.travelingsalesmanproblem = [\u8868\u7af9\uff5eTraveling Salesman Problem~~~~~~~~~~~~ja]
opl.samples.name.trucking = [\u8868\u7af9\uff5eTrucking~~~ja]
opl.samples.name.airlineyieldmanagement = [\u8868\u7af9\uff5eAirline yield management~~~~~~~~~~~ja]
opl.samples.name.yieldmanagement = [\u8868\u7af9\uff5eYield Management~~~~~~~~ja]
opl.samples.name.wellmining = [\u8868\u7af9\uff5eWell mining~~~~ja]

# description keys/values
opl.samples.description.examplessuite = [\u8868\u7af9\uff5eScript that executes several examples consecutively~~~~~~~~~~~~~~ja]
opl.samples.description.lagrangianrelaxation = [\u8868\u7af9\uff5eLagrangian relaxation for a location-transportation problem~~~~~~~~~~~~~~~ja]
opl.samples.description.ppp = [\u8868\u7af9\uff5eProgressive party problem~~~~~~~~~~~~ja]
opl.samples.description.blending = [\u8868\u7af9\uff5eA simple metal blending problem~~~~~~~~~~~~ja]
opl.samples.description.color = [\u8868\u7af9\uff5eA color matching problem~~~~~~~~~~~ja]
opl.samples.description.config = [\u8868\u7af9\uff5eA configuration problem~~~~~~~~~~~ja]
opl.samples.description.conflictiterator = [\u8868\u7af9\uff5eA simple infeasible model to illustrate the use of the class IloOplConflictIterator~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.convert_example = [\u8868\u7af9\uff5eAn example to illustrate how to convert integer variables to floating-point values and unconvert them again, in the context of relaxation~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.covering = [\u8868\u7af9\uff5eA covering problem on building a house~~~~~~~~~~~~~~ja]
opl.samples.description.customdatasource = [\u8868\u7af9\uff5eExample used in the interface examples to illustrate custom datasource~~~~~~~~~~~~~~~~ja]
opl.samples.description.cutstock = [\u8868\u7af9\uff5eCutting stock problem~~~~~~~~~~ja]
opl.samples.description.euler = [\u8868\u7af9\uff5eEuler problem~~~~~~ja]
opl.samples.description.fixed = [\u8868\u7af9\uff5eA simple fixed charge model~~~~~~~~~~~~ja]
opl.samples.description.floatexpr = [\u8868\u7af9\uff5eA simple model using float dexpr~~~~~~~~~~~~ja]
opl.samples.description.foodmanufact = [\u8868\u7af9\uff5eA food manufacturing problem~~~~~~~~~~~~ja]
opl.samples.description.gas = [\u8868\u7af9\uff5eA simple gas production problem~~~~~~~~~~~~ja]
opl.samples.description.iterators = [\u8868\u7af9\uff5eA basic example used with interface examples to show how to iterate through some OPL elements~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.knapsack = [\u8868\u7af9\uff5eA simple knapsack model~~~~~~~~~~~ja]
opl.samples.description.lifegameip = [\u8868\u7af9\uff5eLife game from Robert Bosch and Michael Trick~~~~~~~~~~~~~~ja]
opl.samples.description.miqpex1 = [\u8868\u7af9\uff5eA simple MIQP problem~~~~~~~~~~ja]
opl.samples.description.mulprod = [\u8868\u7af9\uff5eA multi-period production planning problem~~~~~~~~~~~~~~ja]
opl.samples.description.nurses = [\u8868\u7af9\uff5eNurses scheduling model~~~~~~~~~~~ja]
opl.samples.description.oil = [\u8868\u7af9\uff5eAn oil blending problem~~~~~~~~~~~ja]
opl.samples.description.pmedian = [\u8868\u7af9\uff5eThe P-Median problem~~~~~~~~~~ja]
opl.samples.description.prodmilp = [\u8868\u7af9\uff5eA fixed charge production model~~~~~~~~~~~~ja]
opl.samples.description.production = [\u8868\u7af9\uff5eA simple production model~~~~~~~~~~~~ja]
opl.samples.description.profiler = [\u8868\u7af9\uff5eExample used in the profiler tutorial~~~~~~~~~~~~~ja]
opl.samples.description.schedulingtutorial = [\u8868\u7af9\uff5eExamples used in the scheduling tutorial~~~~~~~~~~~~~~ja]
opl.samples.description.qcpex1 = [\u8868\u7af9\uff5eA quadratically constrained problem~~~~~~~~~~~~~ja]
opl.samples.description.qpex1 = [\u8868\u7af9\uff5eA quadratic programming problem~~~~~~~~~~~~ja]
opl.samples.description.quadassign = [\u8868\u7af9\uff5eA quadratic assignment problem~~~~~~~~~~~~ja]
opl.samples.description.relaxationiterator = [\u8868\u7af9\uff5eA simple infeasible model to illustrate the use of the class IloOplRelaxationIterator~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.sailco = [\u8868\u7af9\uff5eA simple inventory problem~~~~~~~~~~~~ja]
opl.samples.description.sched_alloc = [\u8868\u7af9\uff5eResource allocation for house building~~~~~~~~~~~~~~ja]
opl.samples.description.sched_bridge = [\u8868\u7af9\uff5eSchedule the construction of a five-segment bridge~~~~~~~~~~~~~~ja]
opl.samples.description.sched_bridgebr = [\u8868\u7af9\uff5eSchedule bridge construction with resource breaks~~~~~~~~~~~~~~ja]
opl.samples.description.sched_calendar = [\u8868\u7af9\uff5eAdding calendars to the house building problem~~~~~~~~~~~~~~ja]
opl.samples.description.sched_cumul = [\u8868\u7af9\uff5eA model that use cumulative functions in the house building problem~~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_flowshop = [\u8868\u7af9\uff5eClassical flow-shop scheduling problem~~~~~~~~~~~~~~ja]
opl.samples.description.sched_intro = [\u8868\u7af9\uff5eHouse building introductory problem~~~~~~~~~~~~~ja]
opl.samples.description.sched_jobshop = [\u8868\u7af9\uff5eClassical job-shop scheduling problem~~~~~~~~~~~~~ja]
opl.samples.description.sched_jobshopflex = [\u8868\u7af9\uff5eFlexible job-shop scheduling problem~~~~~~~~~~~~~ja]
opl.samples.description.sched_openshop = [\u8868\u7af9\uff5eClassical Open-shop scheduling problem~~~~~~~~~~~~~~ja]
opl.samples.description.sched_optional = [\u8868\u7af9\uff5eA house building model with worker skills~~~~~~~~~~~~~~ja]
opl.samples.description.sched_pflowshop = [\u8868\u7af9\uff5eFlow-shop scheduling problem~~~~~~~~~~~~ja]
opl.samples.description.sched_production = [\u8868\u7af9\uff5eProduction scheduling~~~~~~~~~~ja]
opl.samples.description.sched_rcpsp = [\u8868\u7af9\uff5eClassical resource-constrained project scheduling problem~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_rcpspmm = [\u8868\u7af9\uff5eClassical resource-constrained project scheduling problem with multiple modes~~~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_sequence = [\u8868\u7af9\uff5eA house building model with two workers~~~~~~~~~~~~~~ja]
opl.samples.description.sched_setup = [\u8868\u7af9\uff5eA scheduling problem on two alternative heterogeneous machines~~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_shipload = [\u8868\u7af9\uff5eScheduling the loading of a ship~~~~~~~~~~~~ja]
opl.samples.description.sched_square = [\u8868\u7af9\uff5ePlace small squares of different sizes into a large square~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_state = [\u8868\u7af9\uff5eA house building problem with state incompatibilities~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_tcost = [\u8868\u7af9\uff5eA problem to schedule a set of tasks on two alternative machines with different setup times~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_time = [\u8868\u7af9\uff5eA house building problem with earliness/tardiness costs~~~~~~~~~~~~~~~ja]
opl.samples.description.sched_trolley1 = [\u8868\u7af9\uff5eShop scheduling with trolley~~~~~~~~~~~~ja]
opl.samples.description.sched_trolley2 = [\u8868\u7af9\uff5eShop scheduling with trolley~~~~~~~~~~~~ja]
opl.samples.description.sports = [\u8868\u7af9\uff5eFinding a schedule for a sports league~~~~~~~~~~~~~~ja]
opl.samples.description.steelmill = [\u8868\u7af9\uff5eAn inventory matching problem~~~~~~~~~~~~ja]
opl.samples.description.talent = [\u8868\u7af9\uff5eAn audition scheduling problem~~~~~~~~~~~~ja]
opl.samples.description.teambuilding = [\u8868\u7af9\uff5eA team building problem~~~~~~~~~~~ja]
opl.samples.description.schoolclassscheduling = [\u8868\u7af9\uff5eA school class scheduling problem~~~~~~~~~~~~~ja]
opl.samples.description.transp = [\u8868\u7af9\uff5eA transportation model~~~~~~~~~~~ja]
opl.samples.description.vellino = [\u8868\u7af9\uff5eColumn Generation model~~~~~~~~~~~ja]
opl.samples.description.volsay = [\u8868\u7af9\uff5eA simple chemical mix problem~~~~~~~~~~~~ja]
opl.samples.description.warehouse = [\u8868\u7af9\uff5eA warehouse location model~~~~~~~~~~~~ja]
opl.samples.description.warmstart = [\u8868\u7af9\uff5eA script that illustrates how to use warmstart~~~~~~~~~~~~~~ja]
opl.samples.description.xsteel = [\u8868\u7af9\uff5eA production planning model with data loaded from a spreadsheet~~~~~~~~~~~~~~~~ja]
opl.samples.description.assemblysequencing = [\u8868\u7af9\uff5eThis model is to determine the order of a set of custom computers to be processed on an assembly line~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.basketballscheduling = [\u8868\u7af9\uff5eThis example uses constraint programming to schedule the ACC basketball conference~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.bidselection = [\u8868\u7af9\uff5eSeveral bidders are bidding for a large contract~~~~~~~~~~~~~~ja]
opl.samples.description.blendingmulti-period = [\u8868\u7af9\uff5eThis is a multiperiod blending problem~~~~~~~~~~~~~~ja]
opl.samples.description.capitalbudgeting = [\u8868\u7af9\uff5eThe purpose of this OPL model is to help a firm invest on a set of proposed projects over time~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.callroute = [\u8868\u7af9\uff5eThis model is used to construct a route from a set of end-to-end paths so that the collection of paths satisfies the blocking criterion, and at a minimum cost~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.calltrafficoptimization = [\u8868\u7af9\uff5eThis script is used to balance the call volume throughout the network. Additionally, we want to limit the number of "hops", the number of links a packet must travel to reach its destination. Because the more hops a call takes, the worse is its quality~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.car = [\u8868\u7af9\uff5eIn this model cars in production are placed on an assembly line moving through various units that install options such as air conditioning and radios~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.crewscheduling = [\u8868\u7af9\uff5eThis model considers an airline crew scheduling problem~~~~~~~~~~~~~~~ja]
opl.samples.description.decentralization = [\u8868\u7af9\uff5eThis model answers the question: where should each department be located so as to minimize overall yearly cost?~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.productdeployment = [\u8868\u7af9\uff5eThis model plans multi-product deployment processes in a single period~~~~~~~~~~~~~~~~ja]
opl.samples.description.economicplanning = [\u8868\u7af9\uff5eThis model investigates different possible growth patterns for the economy over the next years~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.factoryplanning = [\u8868\u7af9\uff5eThis is a multi-period product mix~~~~~~~~~~~~~ja]
opl.samples.description.farmplanning = [\u8868\u7af9\uff5eThis model calculates how a farmer should operate over the next five years to maximize profit~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.fleetassignment = [\u8868\u7af9\uff5eThe fleet assignment problem consists of assigning aircraft (fleets) to flights in order to maximize net profit~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.foodmanufacture1 = [\u8868\u7af9\uff5eThis model describes the Food Manufacturing model from "Model Building in Mathematical Programming", by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.manpowerplanning = [\u8868\u7af9\uff5eThis model finds a plan for recruiting, training, staffing, overtime, and redundancy declaration, in order to meet the staffing requirements for a facility over the next years~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.mineplanning = [\u8868\u7af9\uff5eThis model describes problem 7 from "Model Building in Mathematical Programming", by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.networkflows = [\u8868\u7af9\uff5eThe purpose of this model is to solve a standard minimum-cost network-flow problem with a single commodity~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.noughtsandcrosses = [\u8868\u7af9\uff5eThis model describes the three-dimensional Noughts And Crosses (Tic Tac Toe) problem 17 from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.opencastmining = [\u8868\u7af9\uff5eThis model describes the opencast mining problem from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.outsourcing = [\u8868\u7af9\uff5eIn this model, a manufacturer selects a set of suppliers for the components of his products~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.portfoliooptimization = [\u8868\u7af9\uff5eThis OPL model is a tool for investment portfolio optimization~~~~~~~~~~~~~~~~ja]
opl.samples.description.productionplanning = [\u8868\u7af9\uff5eThis model describes production planning for a computer assembly plant~~~~~~~~~~~~~~~~ja]
opl.samples.description.refineryplanning = [\u8868\u7af9\uff5eThis model describes problem 6 from Model Building in Mathematical Programming by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.airtrafficflowmanagement = [\u8868\u7af9\uff5eThe objective of this scheduling problem is to minimize the total sum of flight delays~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.flowshopscheduling = [\u8868\u7af9\uff5eThis model involves flowshop scheduling for a computer assembly plant~~~~~~~~~~~~~~~~ja]
opl.samples.description.multimachineassignmentschedulingproblem = [\u8868\u7af9\uff5eThe problem is to carry out all the tasks at the least possible cost~~~~~~~~~~~~~~~~ja]
opl.samples.description.taskscheduling = [\u8868\u7af9\uff5eThis example involves assigning dates and workers to tasks~~~~~~~~~~~~~~~ja]
opl.samples.description.woodcuttingproblem = [\u8868\u7af9\uff5eThe objective is to minimize the total cost of operating and delay of a wood factory while meeting the system constraints ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.staffassignment = [\u8868\u7af9\uff5eThe objective is to find a balanced assignment of workers to shifts that minimizes the total number of unfilled slots~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.steelproduction = [\u8868\u7af9\uff5eThis is a production and inventory model with backlogging~~~~~~~~~~~~~~~ja]
opl.samples.description.multistagesupplychain = [\u8868\u7af9\uff5eThis model describes a three-echelon supply chain~~~~~~~~~~~~~~ja]
opl.samples.description.travelingsalesmanproblem = [\u8868\u7af9\uff5eSymmetric Traveling Salesman Problem~~~~~~~~~~~~~ja]
opl.samples.description.trucking = [\u8868\u7af9\uff5eThis model is to assign the right number of trucks to each route in order to minimize the cost of transshipment and meet the volume requirements~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.airlineyieldmanagement = [\u8868\u7af9\uff5eThis model is a tool for OD-based airline yield management(&D)~~~~~~~~~~~~ja]
opl.samples.description.yieldmanagement = [\u8868\u7af9\uff5eThis model implements the example of Yield Management from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]
opl.samples.description.wellmining = [\u8868\u7af9\uff5eThe objective is sequencing the operations and the workover operations in order to minimize the whole completion time~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ja]

# attribute keys/values
opl.samples.attribute.industry = [\u8868\u7af9\uff5eIndustry~~~ja]
opl.samples.attribute.industry.energy = [\u8868\u7af9\uff5eEnergy~~ja]
opl.samples.attribute.industry.finance = [\u8868\u7af9\uff5eFinance~~~ja]
opl.samples.attribute.industry.manufacturing = [\u8868\u7af9\uff5eManufacturing~~~~~~ja]
opl.samples.attribute.industry.mathematicalgames = [\u8868\u7af9\uff5eMathematical Games~~~~~~~~~ja]
opl.samples.attribute.industry.mining = [\u8868\u7af9\uff5eMining~~ja]
opl.samples.attribute.industry.supplychain = [\u8868\u7af9\uff5eSupply Chain~~~~~ja]
opl.samples.attribute.industry.telecommunications = [\u8868\u7af9\uff5eTelecommunications~~~~~~~~~ja]
opl.samples.attribute.industry.timetabling = [\u8868\u7af9\uff5eTimetabling~~~~ja]
opl.samples.attribute.industry.transportation = [\u8868\u7af9\uff5eTransportation~~~~~~~ja]

opl.samples.attribute.feature = [\u8868\u7af9\uff5eFeature~~~ja]
opl.samples.attribute.feature.oplmodel = [\u8868\u7af9\uff5eOPL Standalone Model~~~~~~~~~~ja]
opl.samples.attribute.feature.oplscript = [\u8868\u7af9\uff5eOPL Flow Constrol Script~~~~~~~~~~~ja]

opl.samples.attribute.technique = [\u8868\u7af9\uff5eTechnique~~~ja]
opl.samples.attribute.technique.cp = [\u8868\u7af9\uff5eConstraint Programming~~~~~~~~~~~ja]
opl.samples.attribute.technique.cpscheduling = [\u8868\u7af9\uff5eConstraint Programming Scheduling~~~~~~~~~~~~~ja]
opl.samples.attribute.technique.decomposition = [\u8868\u7af9\uff5eDecomposition~~~~~~ja]
opl.samples.attribute.technique.integerprogramming = [\u8868\u7af9\uff5eInteger Programming~~~~~~~~~ja]
opl.samples.attribute.technique.linearprogramming = [\u8868\u7af9\uff5eLinear Programming~~~~~~~~~ja]
opl.samples.attribute.technique.milp = [\u8868\u7af9\uff5eMixed Integer Linear Programming~~~~~~~~~~~~ja]
opl.samples.attribute.technique.miqp = [\u8868\u7af9\uff5eMixed Integer Quadratic Programming~~~~~~~~~~~~~ja]
opl.samples.attribute.technique.qp = [\u8868\u7af9\uff5eQuadratic Programming~~~~~~~~~~ja]
opl.samples.attribute.technique.stochastic = [\u8868\u7af9\uff5eStochastic~~~ja]

opl.samples.attribute.complexity = [\u8868\u7af9\uff5eComplexity~~~ja]
opl.samples.attribute.complexity.basic = [\u8868\u7af9\uff5eBasic~ja]
opl.samples.attribute.complexity.intermediate = [\u8868\u7af9\uff5eIntermediate~~~~~ja]
opl.samples.attribute.complexity.advanced = [\u8868\u7af9\uff5eAdvanced~~~ja]
