# NLS_ENCODING=UNICODE
# NLS_MESSAGEFORMAT_VAR

# name keys/values
opl.samples.name.examplessuite = [\ud55c\uae00Examples Suite~~~~~~~~ko]
opl.samples.name.lagrangianrelaxation = [\ud55c\uae00Lagrangian Relaxation~~~~~~~~~~~ko]
opl.samples.name.ppp = [\ud55c\uae00PPPko]
opl.samples.name.blending = [\ud55c\uae00Blending~~~~ko]
opl.samples.name.color = [\ud55c\uae00color~~ko]
opl.samples.name.config = [\ud55c\uae00config~~~ko]
opl.samples.name.conflictiterator = [\ud55c\uae00conflict iterator~~~~~~~~~ko]
opl.samples.name.convert_example = [\ud55c\uae00convert_example~~~~~~~~ko]
opl.samples.name.covering = [\ud55c\uae00covering~~~~ko]
opl.samples.name.customdatasource = [\ud55c\uae00custom datasource~~~~~~~~~ko]
opl.samples.name.cutstock = [\ud55c\uae00cutstock~~~~ko]
opl.samples.name.euler = [\ud55c\uae00euler~~ko]
opl.samples.name.fixed = [\ud55c\uae00fixed~~ko]
opl.samples.name.floatexpr = [\ud55c\uae00floatexpr~~~~ko]
opl.samples.name.foodmanufact = [\ud55c\uae00foodmanufact~~~~~~ko]
opl.samples.name.gas = [\ud55c\uae00gasko]
opl.samples.name.iterators = [\ud55c\uae00iterators~~~~ko]
opl.samples.name.knapsack = [\ud55c\uae00knapsack~~~~ko]
opl.samples.name.lifegameip = [\ud55c\uae00lifegameip~~~~ko]
opl.samples.name.miqpex1 = [\ud55c\uae00miqpex1~~~~ko]
opl.samples.name.mulprod = [\ud55c\uae00mulprod~~~~ko]
opl.samples.name.nurses = [\ud55c\uae00nurses~~~ko]
opl.samples.name.oil = [\ud55c\uae00oilko]
opl.samples.name.pmedian = [\ud55c\uae00pmedian~~~~ko]
opl.samples.name.prodmilp = [\ud55c\uae00prodmilp~~~~ko]
opl.samples.name.production = [\ud55c\uae00production~~~~ko]
opl.samples.name.profiler = [\ud55c\uae00profiler~~~~ko]
opl.samples.name.schedulingtutorial = [\ud55c\uae00Scheduling tutorial~~~~~~~~~~ko]
opl.samples.name.qcpex1 = [\ud55c\uae00qcpex1~~~ko]
opl.samples.name.qpex1 = [\ud55c\uae00qpex1~~ko]
opl.samples.name.quadassign = [\ud55c\uae00quadassign~~~~ko]
opl.samples.name.relaxationiterator = [\ud55c\uae00relaxation iterator~~~~~~~~~~ko]
opl.samples.name.sailco = [\ud55c\uae00sailco~~~ko]
opl.samples.name.sched_alloc = [\ud55c\uae00sched_alloc~~~~~ko]
opl.samples.name.sched_bridge = [\ud55c\uae00sched_bridge~~~~~~ko]
opl.samples.name.sched_bridgebr = [\ud55c\uae00sched_bridgebr~~~~~~~~ko]
opl.samples.name.sched_calendar = [\ud55c\uae00sched_calendar~~~~~~~~ko]
opl.samples.name.sched_cumul = [\ud55c\uae00sched_cumul~~~~~ko]
opl.samples.name.sched_flowshop = [\ud55c\uae00sched_flowshop~~~~~~~~ko]
opl.samples.name.sched_intro = [\ud55c\uae00sched_intro~~~~~ko]
opl.samples.name.sched_jobshop = [\ud55c\uae00sched_jobshop~~~~~~~ko]
opl.samples.name.sched_jobshopflex = [\ud55c\uae00sched_jobshopflex~~~~~~~~~ko]
opl.samples.name.sched_openshop = [\ud55c\uae00sched_openshop~~~~~~~~ko]
opl.samples.name.sched_optional = [\ud55c\uae00sched_optional~~~~~~~~ko]
opl.samples.name.sched_pflowshop = [\ud55c\uae00sched_pflowshop~~~~~~~~ko]
opl.samples.name.sched_production = [\ud55c\uae00sched_production~~~~~~~~~ko]
opl.samples.name.sched_rcpsp = [\ud55c\uae00sched_rcpsp~~~~~ko]
opl.samples.name.sched_rcpspmm = [\ud55c\uae00sched_rcpspmm~~~~~~~ko]
opl.samples.name.sched_sequence = [\ud55c\uae00sched_sequence~~~~~~~~ko]
opl.samples.name.sched_setup = [\ud55c\uae00sched_setup~~~~~ko]
opl.samples.name.sched_shipload = [\ud55c\uae00sched_shipload~~~~~~~~ko]
opl.samples.name.sched_square = [\ud55c\uae00sched_square~~~~~~ko]
opl.samples.name.sched_state = [\ud55c\uae00sched_state~~~~~ko]
opl.samples.name.sched_tcost = [\ud55c\uae00sched_tcost~~~~~ko]
opl.samples.name.sched_time = [\ud55c\uae00sched_time~~~~ko]
opl.samples.name.sched_trolley1 = [\ud55c\uae00sched_trolley1~~~~~~~~ko]
opl.samples.name.sched_trolley2 = [\ud55c\uae00sched_trolley2~~~~~~~~ko]
opl.samples.name.sports = [\ud55c\uae00sports~~~ko]
opl.samples.name.steelmill = [\ud55c\uae00steelmill~~~~ko]
opl.samples.name.talent = [\ud55c\uae00talent~~~ko]
opl.samples.name.teambuilding = [\ud55c\uae00teambuilding~~~~~~ko]
opl.samples.name.schoolclassscheduling = [\ud55c\uae00School class scheduling~~~~~~~~~~~~ko]
opl.samples.name.transp = [\ud55c\uae00transp~~~ko]
opl.samples.name.vellino = [\ud55c\uae00vellino~~~~ko]
opl.samples.name.volsay = [\ud55c\uae00volsay~~~ko]
opl.samples.name.warehouse = [\ud55c\uae00warehouse~~~~ko]
opl.samples.name.warmstart = [\ud55c\uae00warmstart~~~~ko]
opl.samples.name.xsteel = [\ud55c\uae00xsteel~~~ko]
opl.samples.name.assemblysequencing = [\ud55c\uae00Assembly Sequencing~~~~~~~~~~ko]
opl.samples.name.basketballscheduling = [\ud55c\uae00Basketball Scheduling~~~~~~~~~~~ko]
opl.samples.name.bidselection = [\ud55c\uae00Bid Selection~~~~~~~ko]
opl.samples.name.blendingmulti-period = [\ud55c\uae00Blending Multi-period~~~~~~~~~~~ko]
opl.samples.name.capitalbudgeting = [\ud55c\uae00Capital budgeting~~~~~~~~~ko]
opl.samples.name.callroute = [\ud55c\uae00Call route~~~~ko]
opl.samples.name.calltrafficoptimization = [\ud55c\uae00Call Traffic Optimization~~~~~~~~~~~~~ko]
opl.samples.name.car = [\ud55c\uae00Carko]
opl.samples.name.crewscheduling = [\ud55c\uae00Crew scheduling~~~~~~~~ko]
opl.samples.name.decentralization = [\ud55c\uae00Decentralization~~~~~~~~~ko]
opl.samples.name.productdeployment = [\ud55c\uae00Product deployment~~~~~~~~~~ko]
opl.samples.name.economicplanning = [\ud55c\uae00Economic planning~~~~~~~~~ko]
opl.samples.name.factoryplanning = [\ud55c\uae00Factory planning~~~~~~~~~ko]
opl.samples.name.farmplanning = [\ud55c\uae00Farm planning~~~~~~~ko]
opl.samples.name.fleetassignment = [\ud55c\uae00Fleet Assignment~~~~~~~~~ko]
opl.samples.name.foodmanufacture1 = [\ud55c\uae00Food manufacture 1~~~~~~~~~~ko]
opl.samples.name.manpowerplanning = [\ud55c\uae00Manpower planning~~~~~~~~~ko]
opl.samples.name.mineplanning = [\ud55c\uae00Mine planning~~~~~~~ko]
opl.samples.name.networkflows = [\ud55c\uae00Network flows~~~~~~~ko]
opl.samples.name.noughtsandcrosses = [\ud55c\uae00Noughts and crosses~~~~~~~~~~ko]
opl.samples.name.opencastmining = [\ud55c\uae00Opencast mining~~~~~~~~ko]
opl.samples.name.outsourcing = [\ud55c\uae00Outsourcing~~~~~ko]
opl.samples.name.portfoliooptimization = [\ud55c\uae00Portfolio optimization~~~~~~~~~~~~ko]
opl.samples.name.productionplanning = [\ud55c\uae00Production planning~~~~~~~~~~ko]
opl.samples.name.refineryplanning = [\ud55c\uae00Refinery planning~~~~~~~~~ko]
opl.samples.name.airtrafficflowmanagement = [\ud55c\uae00Air traffic flow management~~~~~~~~~~~~~ko]
opl.samples.name.flowshopscheduling = [\ud55c\uae00Flow-shop scheduling~~~~~~~~~~~ko]
opl.samples.name.multimachineassignmentschedulingproblem = [\ud55c\uae00Multi-machine assignment scheduling problem~~~~~~~~~~~~~~~ko]
opl.samples.name.taskscheduling = [\ud55c\uae00Task scheduling~~~~~~~~ko]
opl.samples.name.woodcuttingproblem = [\ud55c\uae00Wood cutting problem~~~~~~~~~~~ko]
opl.samples.name.staffassignment = [\ud55c\uae00Staff assignment~~~~~~~~~ko]
opl.samples.name.steelproduction = [\ud55c\uae00Steel production~~~~~~~~~ko]
opl.samples.name.multistagesupplychain = [\ud55c\uae00Multi-stage supply chain~~~~~~~~~~~~ko]
opl.samples.name.travelingsalesmanproblem = [\ud55c\uae00Traveling Salesman Problem~~~~~~~~~~~~~ko]
opl.samples.name.trucking = [\ud55c\uae00Trucking~~~~ko]
opl.samples.name.airlineyieldmanagement = [\ud55c\uae00Airline yield management~~~~~~~~~~~~ko]
opl.samples.name.yieldmanagement = [\ud55c\uae00Yield Management~~~~~~~~~ko]
opl.samples.name.wellmining = [\ud55c\uae00Well mining~~~~~ko]

# description keys/values
opl.samples.description.examplessuite = [\ud55c\uae00Script that executes several examples consecutively~~~~~~~~~~~~~~~ko]
opl.samples.description.lagrangianrelaxation = [\ud55c\uae00Lagrangian relaxation for a location-transportation problem~~~~~~~~~~~~~~~~ko]
opl.samples.description.ppp = [\ud55c\uae00Progressive party problem~~~~~~~~~~~~~ko]
opl.samples.description.blending = [\ud55c\uae00A simple metal blending problem~~~~~~~~~~~~~ko]
opl.samples.description.color = [\ud55c\uae00A color matching problem~~~~~~~~~~~~ko]
opl.samples.description.config = [\ud55c\uae00A configuration problem~~~~~~~~~~~~ko]
opl.samples.description.conflictiterator = [\ud55c\uae00A simple infeasible model to illustrate the use of the class IloOplConflictIterator~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.convert_example = [\ud55c\uae00An example to illustrate how to convert integer variables to floating-point values and unconvert them again, in the context of relaxation~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.covering = [\ud55c\uae00A covering problem on building a house~~~~~~~~~~~~~~~ko]
opl.samples.description.customdatasource = [\ud55c\uae00Example used in the interface examples to illustrate custom datasource~~~~~~~~~~~~~~~~~ko]
opl.samples.description.cutstock = [\ud55c\uae00Cutting stock problem~~~~~~~~~~~ko]
opl.samples.description.euler = [\ud55c\uae00Euler problem~~~~~~~ko]
opl.samples.description.fixed = [\ud55c\uae00A simple fixed charge model~~~~~~~~~~~~~ko]
opl.samples.description.floatexpr = [\ud55c\uae00A simple model using float dexpr~~~~~~~~~~~~~ko]
opl.samples.description.foodmanufact = [\ud55c\uae00A food manufacturing problem~~~~~~~~~~~~~ko]
opl.samples.description.gas = [\ud55c\uae00A simple gas production problem~~~~~~~~~~~~~ko]
opl.samples.description.iterators = [\ud55c\uae00A basic example used with interface examples to show how to iterate through some OPL elements~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.knapsack = [\ud55c\uae00A simple knapsack model~~~~~~~~~~~~ko]
opl.samples.description.lifegameip = [\ud55c\uae00Life game from Robert Bosch and Michael Trick~~~~~~~~~~~~~~~ko]
opl.samples.description.miqpex1 = [\ud55c\uae00A simple MIQP problem~~~~~~~~~~~ko]
opl.samples.description.mulprod = [\ud55c\uae00A multi-period production planning problem~~~~~~~~~~~~~~~ko]
opl.samples.description.nurses = [\ud55c\uae00Nurses scheduling model~~~~~~~~~~~~ko]
opl.samples.description.oil = [\ud55c\uae00An oil blending problem~~~~~~~~~~~~ko]
opl.samples.description.pmedian = [\ud55c\uae00The P-Median problem~~~~~~~~~~~ko]
opl.samples.description.prodmilp = [\ud55c\uae00A fixed charge production model~~~~~~~~~~~~~ko]
opl.samples.description.production = [\ud55c\uae00A simple production model~~~~~~~~~~~~~ko]
opl.samples.description.profiler = [\ud55c\uae00Example used in the profiler tutorial~~~~~~~~~~~~~~ko]
opl.samples.description.schedulingtutorial = [\ud55c\uae00Examples used in the scheduling tutorial~~~~~~~~~~~~~~~ko]
opl.samples.description.qcpex1 = [\ud55c\uae00A quadratically constrained problem~~~~~~~~~~~~~~ko]
opl.samples.description.qpex1 = [\ud55c\uae00A quadratic programming problem~~~~~~~~~~~~~ko]
opl.samples.description.quadassign = [\ud55c\uae00A quadratic assignment problem~~~~~~~~~~~~~ko]
opl.samples.description.relaxationiterator = [\ud55c\uae00A simple infeasible model to illustrate the use of the class IloOplRelaxationIterator~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.sailco = [\ud55c\uae00A simple inventory problem~~~~~~~~~~~~~ko]
opl.samples.description.sched_alloc = [\ud55c\uae00Resource allocation for house building~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_bridge = [\ud55c\uae00Schedule the construction of a five-segment bridge~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_bridgebr = [\ud55c\uae00Schedule bridge construction with resource breaks~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_calendar = [\ud55c\uae00Adding calendars to the house building problem~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_cumul = [\ud55c\uae00A model that use cumulative functions in the house building problem~~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_flowshop = [\ud55c\uae00Classical flow-shop scheduling problem~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_intro = [\ud55c\uae00House building introductory problem~~~~~~~~~~~~~~ko]
opl.samples.description.sched_jobshop = [\ud55c\uae00Classical job-shop scheduling problem~~~~~~~~~~~~~~ko]
opl.samples.description.sched_jobshopflex = [\ud55c\uae00Flexible job-shop scheduling problem~~~~~~~~~~~~~~ko]
opl.samples.description.sched_openshop = [\ud55c\uae00Classical Open-shop scheduling problem~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_optional = [\ud55c\uae00A house building model with worker skills~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_pflowshop = [\ud55c\uae00Flow-shop scheduling problem~~~~~~~~~~~~~ko]
opl.samples.description.sched_production = [\ud55c\uae00Production scheduling~~~~~~~~~~~ko]
opl.samples.description.sched_rcpsp = [\ud55c\uae00Classical resource-constrained project scheduling problem~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_rcpspmm = [\ud55c\uae00Classical resource-constrained project scheduling problem with multiple modes~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_sequence = [\ud55c\uae00A house building model with two workers~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_setup = [\ud55c\uae00A scheduling problem on two alternative heterogeneous machines~~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_shipload = [\ud55c\uae00Scheduling the loading of a ship~~~~~~~~~~~~~ko]
opl.samples.description.sched_square = [\ud55c\uae00Place small squares of different sizes into a large square~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_state = [\ud55c\uae00A house building problem with state incompatibilities~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_tcost = [\ud55c\uae00A problem to schedule a set of tasks on two alternative machines with different setup times~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_time = [\ud55c\uae00A house building problem with earliness/tardiness costs~~~~~~~~~~~~~~~~ko]
opl.samples.description.sched_trolley1 = [\ud55c\uae00Shop scheduling with trolley~~~~~~~~~~~~~ko]
opl.samples.description.sched_trolley2 = [\ud55c\uae00Shop scheduling with trolley~~~~~~~~~~~~~ko]
opl.samples.description.sports = [\ud55c\uae00Finding a schedule for a sports league~~~~~~~~~~~~~~~ko]
opl.samples.description.steelmill = [\ud55c\uae00An inventory matching problem~~~~~~~~~~~~~ko]
opl.samples.description.talent = [\ud55c\uae00An audition scheduling problem~~~~~~~~~~~~~ko]
opl.samples.description.teambuilding = [\ud55c\uae00A team building problem~~~~~~~~~~~~ko]
opl.samples.description.schoolclassscheduling = [\ud55c\uae00A school class scheduling problem~~~~~~~~~~~~~~ko]
opl.samples.description.transp = [\ud55c\uae00A transportation model~~~~~~~~~~~~ko]
opl.samples.description.vellino = [\ud55c\uae00Column Generation model~~~~~~~~~~~~ko]
opl.samples.description.volsay = [\ud55c\uae00A simple chemical mix problem~~~~~~~~~~~~~ko]
opl.samples.description.warehouse = [\ud55c\uae00A warehouse location model~~~~~~~~~~~~~ko]
opl.samples.description.warmstart = [\ud55c\uae00A script that illustrates how to use warmstart~~~~~~~~~~~~~~~ko]
opl.samples.description.xsteel = [\ud55c\uae00A production planning model with data loaded from a spreadsheet~~~~~~~~~~~~~~~~~ko]
opl.samples.description.assemblysequencing = [\ud55c\uae00This model is to determine the order of a set of custom computers to be processed on an assembly line~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.basketballscheduling = [\ud55c\uae00This example uses constraint programming to schedule the ACC basketball conference~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.bidselection = [\ud55c\uae00Several bidders are bidding for a large contract~~~~~~~~~~~~~~~ko]
opl.samples.description.blendingmulti-period = [\ud55c\uae00This is a multiperiod blending problem~~~~~~~~~~~~~~~ko]
opl.samples.description.capitalbudgeting = [\ud55c\uae00The purpose of this OPL model is to help a firm invest on a set of proposed projects over time~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.callroute = [\ud55c\uae00This model is used to construct a route from a set of end-to-end paths so that the collection of paths satisfies the blocking criterion, and at a minimum cost~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.calltrafficoptimization = [\ud55c\uae00This script is used to balance the call volume throughout the network. Additionally, we want to limit the number of "hops", the number of links a packet must travel to reach its destination. Because the more hops a call takes, the worse is its quality~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.car = [\ud55c\uae00In this model cars in production are placed on an assembly line moving through various units that install options such as air conditioning and radios~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.crewscheduling = [\ud55c\uae00This model considers an airline crew scheduling problem~~~~~~~~~~~~~~~~ko]
opl.samples.description.decentralization = [\ud55c\uae00This model answers the question: where should each department be located so as to minimize overall yearly cost?~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.productdeployment = [\ud55c\uae00This model plans multi-product deployment processes in a single period~~~~~~~~~~~~~~~~~ko]
opl.samples.description.economicplanning = [\ud55c\uae00This model investigates different possible growth patterns for the economy over the next years~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.factoryplanning = [\ud55c\uae00This is a multi-period product mix~~~~~~~~~~~~~~ko]
opl.samples.description.farmplanning = [\ud55c\uae00This model calculates how a farmer should operate over the next five years to maximize profit~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.fleetassignment = [\ud55c\uae00The fleet assignment problem consists of assigning aircraft (fleets) to flights in order to maximize net profit~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.foodmanufacture1 = [\ud55c\uae00This model describes the Food Manufacturing model from "Model Building in Mathematical Programming", by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.manpowerplanning = [\ud55c\uae00This model finds a plan for recruiting, training, staffing, overtime, and redundancy declaration, in order to meet the staffing requirements for a facility over the next years~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.mineplanning = [\ud55c\uae00This model describes problem 7 from "Model Building in Mathematical Programming", by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.networkflows = [\ud55c\uae00The purpose of this model is to solve a standard minimum-cost network-flow problem with a single commodity~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.noughtsandcrosses = [\ud55c\uae00This model describes the three-dimensional Noughts And Crosses (Tic Tac Toe) problem 17 from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.opencastmining = [\ud55c\uae00This model describes the opencast mining problem from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.outsourcing = [\ud55c\uae00In this model, a manufacturer selects a set of suppliers for the components of his products~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.portfoliooptimization = [\ud55c\uae00This OPL model is a tool for investment portfolio optimization~~~~~~~~~~~~~~~~~ko]
opl.samples.description.productionplanning = [\ud55c\uae00This model describes production planning for a computer assembly plant~~~~~~~~~~~~~~~~~ko]
opl.samples.description.refineryplanning = [\ud55c\uae00This model describes problem 6 from Model Building in Mathematical Programming by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.airtrafficflowmanagement = [\ud55c\uae00The objective of this scheduling problem is to minimize the total sum of flight delays~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.flowshopscheduling = [\ud55c\uae00This model involves flowshop scheduling for a computer assembly plant~~~~~~~~~~~~~~~~~ko]
opl.samples.description.multimachineassignmentschedulingproblem = [\ud55c\uae00The problem is to carry out all the tasks at the least possible cost~~~~~~~~~~~~~~~~~ko]
opl.samples.description.taskscheduling = [\ud55c\uae00This example involves assigning dates and workers to tasks~~~~~~~~~~~~~~~~ko]
opl.samples.description.woodcuttingproblem = [\ud55c\uae00The objective is to minimize the total cost of operating and delay of a wood factory while meeting the system constraints ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.staffassignment = [\ud55c\uae00The objective is to find a balanced assignment of workers to shifts that minimizes the total number of unfilled slots~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.steelproduction = [\ud55c\uae00This is a production and inventory model with backlogging~~~~~~~~~~~~~~~~ko]
opl.samples.description.multistagesupplychain = [\ud55c\uae00This model describes a three-echelon supply chain~~~~~~~~~~~~~~~ko]
opl.samples.description.travelingsalesmanproblem = [\ud55c\uae00Symmetric Traveling Salesman Problem~~~~~~~~~~~~~~ko]
opl.samples.description.trucking = [\ud55c\uae00This model is to assign the right number of trucks to each route in order to minimize the cost of transshipment and meet the volume requirements~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.airlineyieldmanagement = [\ud55c\uae00This model is a tool for O&D-based airline yield management~~~~~~~~~~~~~~~~ko]
opl.samples.description.yieldmanagement = [\ud55c\uae00This model implements the example of Yield Management from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]
opl.samples.description.wellmining = [\ud55c\uae00The objective is sequencing the operations and the workover operations in order to minimize the whole completion time~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ko]

# attribute keys/values
opl.samples.attribute.industry = [\ud55c\uae00Industry~~~~ko]
opl.samples.attribute.industry.energy = [\ud55c\uae00Energy~~~ko]
opl.samples.attribute.industry.finance = [\ud55c\uae00Finance~~~~ko]
opl.samples.attribute.industry.manufacturing = [\ud55c\uae00Manufacturing~~~~~~~ko]
opl.samples.attribute.industry.mathematicalgames = [\ud55c\uae00Mathematical Games~~~~~~~~~~ko]
opl.samples.attribute.industry.mining = [\ud55c\uae00Mining~~~ko]
opl.samples.attribute.industry.supplychain = [\ud55c\uae00Supply Chain~~~~~~ko]
opl.samples.attribute.industry.telecommunications = [\ud55c\uae00Telecommunications~~~~~~~~~~ko]
opl.samples.attribute.industry.timetabling = [\ud55c\uae00Timetabling~~~~~ko]
opl.samples.attribute.industry.transportation = [\ud55c\uae00Transportation~~~~~~~~ko]

opl.samples.attribute.feature = [\ud55c\uae00Feature~~~~ko]
opl.samples.attribute.feature.oplmodel = [\ud55c\uae00OPL Standalone Model~~~~~~~~~~~ko]
opl.samples.attribute.feature.oplscript = [\ud55c\uae00OPL Flow Constrol Script~~~~~~~~~~~~ko]

opl.samples.attribute.technique = [\ud55c\uae00Technique~~~~ko]
opl.samples.attribute.technique.cp = [\ud55c\uae00Constraint Programming~~~~~~~~~~~~ko]
opl.samples.attribute.technique.cpscheduling = [\ud55c\uae00Constraint Programming Scheduling~~~~~~~~~~~~~~ko]
opl.samples.attribute.technique.decomposition = [\ud55c\uae00Decomposition~~~~~~~ko]
opl.samples.attribute.technique.integerprogramming = [\ud55c\uae00Integer Programming~~~~~~~~~~ko]
opl.samples.attribute.technique.linearprogramming = [\ud55c\uae00Linear Programming~~~~~~~~~~ko]
opl.samples.attribute.technique.milp = [\ud55c\uae00Mixed Integer Linear Programming~~~~~~~~~~~~~ko]
opl.samples.attribute.technique.miqp = [\ud55c\uae00Mixed Integer Quadratic Programming~~~~~~~~~~~~~~ko]
opl.samples.attribute.technique.qp = [\ud55c\uae00Quadratic Programming~~~~~~~~~~~ko]
opl.samples.attribute.technique.stochastic = [\ud55c\uae00Stochastic~~~~ko]

opl.samples.attribute.complexity = [\ud55c\uae00Complexity~~~~ko]
opl.samples.attribute.complexity.basic = [\ud55c\uae00Basic~~ko]
opl.samples.attribute.complexity.intermediate = [\ud55c\uae00Intermediate~~~~~~ko]
opl.samples.attribute.complexity.advanced = [\ud55c\uae00Advanced~~~~ko]
