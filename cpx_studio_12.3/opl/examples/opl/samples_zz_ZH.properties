# NLS_ENCODING=UNICODE
# NLS_MESSAGEFORMAT_VAR

# name keys/values
opl.samples.name.examplessuite = [\u9ed2\u6192\u9055Examples Suite~~~~~~~zh]
opl.samples.name.lagrangianrelaxation = [\u9ed2\u6192\u9055Lagrangian Relaxation~~~~~~~~~~zh]
opl.samples.name.ppp = [\u9ed2\u6192\u9055PPPzh]
opl.samples.name.blending = [\u9ed2\u6192\u9055Blending~~~zh]
opl.samples.name.color = [\u9ed2\u6192\u9055color~zh]
opl.samples.name.config = [\u9ed2\u6192\u9055config~~zh]
opl.samples.name.conflictiterator = [\u9ed2\u6192\u9055conflict iterator~~~~~~~~zh]
opl.samples.name.convert_example = [\u9ed2\u6192\u9055convert_example~~~~~~~zh]
opl.samples.name.covering = [\u9ed2\u6192\u9055covering~~~zh]
opl.samples.name.customdatasource = [\u9ed2\u6192\u9055custom datasource~~~~~~~~zh]
opl.samples.name.cutstock = [\u9ed2\u6192\u9055cutstock~~~zh]
opl.samples.name.euler = [\u9ed2\u6192\u9055euler~zh]
opl.samples.name.fixed = [\u9ed2\u6192\u9055fixed~zh]
opl.samples.name.floatexpr = [\u9ed2\u6192\u9055floatexpr~~~zh]
opl.samples.name.foodmanufact = [\u9ed2\u6192\u9055foodmanufact~~~~~zh]
opl.samples.name.gas = [\u9ed2\u6192\u9055gaszh]
opl.samples.name.iterators = [\u9ed2\u6192\u9055iterators~~~zh]
opl.samples.name.knapsack = [\u9ed2\u6192\u9055knapsack~~~zh]
opl.samples.name.lifegameip = [\u9ed2\u6192\u9055lifegameip~~~zh]
opl.samples.name.miqpex1 = [\u9ed2\u6192\u9055miqpex1~~~zh]
opl.samples.name.mulprod = [\u9ed2\u6192\u9055mulprod~~~zh]
opl.samples.name.nurses = [\u9ed2\u6192\u9055nurses~~zh]
opl.samples.name.oil = [\u9ed2\u6192\u9055oilzh]
opl.samples.name.pmedian = [\u9ed2\u6192\u9055pmedian~~~zh]
opl.samples.name.prodmilp = [\u9ed2\u6192\u9055prodmilp~~~zh]
opl.samples.name.production = [\u9ed2\u6192\u9055production~~~zh]
opl.samples.name.profiler = [\u9ed2\u6192\u9055profiler~~~zh]
opl.samples.name.schedulingtutorial = [\u9ed2\u6192\u9055Scheduling tutorial~~~~~~~~~zh]
opl.samples.name.qcpex1 = [\u9ed2\u6192\u9055qcpex1~~zh]
opl.samples.name.qpex1 = [\u9ed2\u6192\u9055qpex1~zh]
opl.samples.name.quadassign = [\u9ed2\u6192\u9055quadassign~~~zh]
opl.samples.name.relaxationiterator = [\u9ed2\u6192\u9055relaxation iterator~~~~~~~~~zh]
opl.samples.name.sailco = [\u9ed2\u6192\u9055sailco~~zh]
opl.samples.name.sched_alloc = [\u9ed2\u6192\u9055sched_alloc~~~~zh]
opl.samples.name.sched_bridge = [\u9ed2\u6192\u9055sched_bridge~~~~~zh]
opl.samples.name.sched_bridgebr = [\u9ed2\u6192\u9055sched_bridgebr~~~~~~~zh]
opl.samples.name.sched_calendar = [\u9ed2\u6192\u9055sched_calendar~~~~~~~zh]
opl.samples.name.sched_cumul = [\u9ed2\u6192\u9055sched_cumul~~~~zh]
opl.samples.name.sched_flowshop = [\u9ed2\u6192\u9055sched_flowshop~~~~~~~zh]
opl.samples.name.sched_intro = [\u9ed2\u6192\u9055sched_intro~~~~zh]
opl.samples.name.sched_jobshop = [\u9ed2\u6192\u9055sched_jobshop~~~~~~zh]
opl.samples.name.sched_jobshopflex = [\u9ed2\u6192\u9055sched_jobshopflex~~~~~~~~zh]
opl.samples.name.sched_openshop = [\u9ed2\u6192\u9055sched_openshop~~~~~~~zh]
opl.samples.name.sched_optional = [\u9ed2\u6192\u9055sched_optional~~~~~~~zh]
opl.samples.name.sched_pflowshop = [\u9ed2\u6192\u9055sched_pflowshop~~~~~~~zh]
opl.samples.name.sched_production = [\u9ed2\u6192\u9055sched_production~~~~~~~~zh]
opl.samples.name.sched_rcpsp = [\u9ed2\u6192\u9055sched_rcpsp~~~~zh]
opl.samples.name.sched_rcpspmm = [\u9ed2\u6192\u9055sched_rcpspmm~~~~~~zh]
opl.samples.name.sched_sequence = [\u9ed2\u6192\u9055sched_sequence~~~~~~~zh]
opl.samples.name.sched_setup = [\u9ed2\u6192\u9055sched_setup~~~~zh]
opl.samples.name.sched_shipload = [\u9ed2\u6192\u9055sched_shipload~~~~~~~zh]
opl.samples.name.sched_square = [\u9ed2\u6192\u9055sched_square~~~~~zh]
opl.samples.name.sched_state = [\u9ed2\u6192\u9055sched_state~~~~zh]
opl.samples.name.sched_tcost = [\u9ed2\u6192\u9055sched_tcost~~~~zh]
opl.samples.name.sched_time = [\u9ed2\u6192\u9055sched_time~~~zh]
opl.samples.name.sched_trolley1 = [\u9ed2\u6192\u9055sched_trolley1~~~~~~~zh]
opl.samples.name.sched_trolley2 = [\u9ed2\u6192\u9055sched_trolley2~~~~~~~zh]
opl.samples.name.sports = [\u9ed2\u6192\u9055sports~~zh]
opl.samples.name.steelmill = [\u9ed2\u6192\u9055steelmill~~~zh]
opl.samples.name.talent = [\u9ed2\u6192\u9055talent~~zh]
opl.samples.name.teambuilding = [\u9ed2\u6192\u9055teambuilding~~~~~zh]
opl.samples.name.schoolclassscheduling = [\u9ed2\u6192\u9055School class scheduling~~~~~~~~~~~zh]
opl.samples.name.transp = [\u9ed2\u6192\u9055transp~~zh]
opl.samples.name.vellino = [\u9ed2\u6192\u9055vellino~~~zh]
opl.samples.name.volsay = [\u9ed2\u6192\u9055volsay~~zh]
opl.samples.name.warehouse = [\u9ed2\u6192\u9055warehouse~~~zh]
opl.samples.name.warmstart = [\u9ed2\u6192\u9055warmstart~~~zh]
opl.samples.name.xsteel = [\u9ed2\u6192\u9055xsteel~~zh]
opl.samples.name.assemblysequencing = [\u9ed2\u6192\u9055Assembly Sequencing~~~~~~~~~zh]
opl.samples.name.basketballscheduling = [\u9ed2\u6192\u9055Basketball Scheduling~~~~~~~~~~zh]
opl.samples.name.bidselection = [\u9ed2\u6192\u9055Bid Selection~~~~~~zh]
opl.samples.name.blendingmulti-period = [\u9ed2\u6192\u9055Blending Multi-period~~~~~~~~~~zh]
opl.samples.name.capitalbudgeting = [\u9ed2\u6192\u9055Capital budgeting~~~~~~~~zh]
opl.samples.name.callroute = [\u9ed2\u6192\u9055Call route~~~zh]
opl.samples.name.calltrafficoptimization = [\u9ed2\u6192\u9055Call Traffic Optimization~~~~~~~~~~~~zh]
opl.samples.name.car = [\u9ed2\u6192\u9055Carzh]
opl.samples.name.crewscheduling = [\u9ed2\u6192\u9055Crew scheduling~~~~~~~zh]
opl.samples.name.decentralization = [\u9ed2\u6192\u9055Decentralization~~~~~~~~zh]
opl.samples.name.productdeployment = [\u9ed2\u6192\u9055Product deployment~~~~~~~~~zh]
opl.samples.name.economicplanning = [\u9ed2\u6192\u9055Economic planning~~~~~~~~zh]
opl.samples.name.factoryplanning = [\u9ed2\u6192\u9055Factory planning~~~~~~~~zh]
opl.samples.name.farmplanning = [\u9ed2\u6192\u9055Farm planning~~~~~~zh]
opl.samples.name.fleetassignment = [\u9ed2\u6192\u9055Fleet Assignment~~~~~~~~zh]
opl.samples.name.foodmanufacture1 = [\u9ed2\u6192\u9055Food manufacture 1~~~~~~~~~zh]
opl.samples.name.manpowerplanning = [\u9ed2\u6192\u9055Manpower planning~~~~~~~~zh]
opl.samples.name.mineplanning = [\u9ed2\u6192\u9055Mine planning~~~~~~zh]
opl.samples.name.networkflows = [\u9ed2\u6192\u9055Network flows~~~~~~zh]
opl.samples.name.noughtsandcrosses = [\u9ed2\u6192\u9055Noughts and crosses~~~~~~~~~zh]
opl.samples.name.opencastmining = [\u9ed2\u6192\u9055Opencast mining~~~~~~~zh]
opl.samples.name.outsourcing = [\u9ed2\u6192\u9055Outsourcing~~~~zh]
opl.samples.name.portfoliooptimization = [\u9ed2\u6192\u9055Portfolio optimization~~~~~~~~~~~zh]
opl.samples.name.productionplanning = [\u9ed2\u6192\u9055Production planning~~~~~~~~~zh]
opl.samples.name.refineryplanning = [\u9ed2\u6192\u9055Refinery planning~~~~~~~~zh]
opl.samples.name.airtrafficflowmanagement = [\u9ed2\u6192\u9055Air traffic flow management~~~~~~~~~~~~zh]
opl.samples.name.flowshopscheduling = [\u9ed2\u6192\u9055Flow-shop scheduling~~~~~~~~~~zh]
opl.samples.name.multimachineassignmentschedulingproblem = [\u9ed2\u6192\u9055Multi-machine assignment scheduling problem~~~~~~~~~~~~~~zh]
opl.samples.name.taskscheduling = [\u9ed2\u6192\u9055Task scheduling~~~~~~~zh]
opl.samples.name.woodcuttingproblem = [\u9ed2\u6192\u9055Wood cutting problem~~~~~~~~~~zh]
opl.samples.name.staffassignment = [\u9ed2\u6192\u9055Staff assignment~~~~~~~~zh]
opl.samples.name.steelproduction = [\u9ed2\u6192\u9055Steel production~~~~~~~~zh]
opl.samples.name.multistagesupplychain = [\u9ed2\u6192\u9055Multi-stage supply chain~~~~~~~~~~~zh]
opl.samples.name.travelingsalesmanproblem = [\u9ed2\u6192\u9055Traveling Salesman Problem~~~~~~~~~~~~zh]
opl.samples.name.trucking = [\u9ed2\u6192\u9055Trucking~~~zh]
opl.samples.name.airlineyieldmanagement = [\u9ed2\u6192\u9055Airline yield management~~~~~~~~~~~zh]
opl.samples.name.yieldmanagement = [\u9ed2\u6192\u9055Yield Management~~~~~~~~zh]
opl.samples.name.wellmining = [\u9ed2\u6192\u9055Well mining~~~~zh]

# description keys/values
opl.samples.description.examplessuite = [\u9ed2\u6192\u9055Script that executes several examples consecutively~~~~~~~~~~~~~~zh]
opl.samples.description.lagrangianrelaxation = [\u9ed2\u6192\u9055Lagrangian relaxation for a location-transportation problem~~~~~~~~~~~~~~~zh]
opl.samples.description.ppp = [\u9ed2\u6192\u9055Progressive party problem~~~~~~~~~~~~zh]
opl.samples.description.blending = [\u9ed2\u6192\u9055A simple metal blending problem~~~~~~~~~~~~zh]
opl.samples.description.color = [\u9ed2\u6192\u9055A color matching problem~~~~~~~~~~~zh]
opl.samples.description.config = [\u9ed2\u6192\u9055A configuration problem~~~~~~~~~~~zh]
opl.samples.description.conflictiterator = [\u9ed2\u6192\u9055A simple infeasible model to illustrate the use of the class IloOplConflictIterator~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.convert_example = [\u9ed2\u6192\u9055An example to illustrate how to convert integer variables to floating-point values and unconvert them again, in the context of relaxation~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.covering = [\u9ed2\u6192\u9055A covering problem on building a house~~~~~~~~~~~~~~zh]
opl.samples.description.customdatasource = [\u9ed2\u6192\u9055Example used in the interface examples to illustrate custom datasource~~~~~~~~~~~~~~~~zh]
opl.samples.description.cutstock = [\u9ed2\u6192\u9055Cutting stock problem~~~~~~~~~~zh]
opl.samples.description.euler = [\u9ed2\u6192\u9055Euler problem~~~~~~zh]
opl.samples.description.fixed = [\u9ed2\u6192\u9055A simple fixed charge model~~~~~~~~~~~~zh]
opl.samples.description.floatexpr = [\u9ed2\u6192\u9055A simple model using float dexpr~~~~~~~~~~~~zh]
opl.samples.description.foodmanufact = [\u9ed2\u6192\u9055A food manufacturing problem~~~~~~~~~~~~zh]
opl.samples.description.gas = [\u9ed2\u6192\u9055A simple gas production problem~~~~~~~~~~~~zh]
opl.samples.description.iterators = [\u9ed2\u6192\u9055A basic example used with interface examples to show how to iterate through some OPL elements~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.knapsack = [\u9ed2\u6192\u9055A simple knapsack model~~~~~~~~~~~zh]
opl.samples.description.lifegameip = [\u9ed2\u6192\u9055Life game from Robert Bosch and Michael Trick~~~~~~~~~~~~~~zh]
opl.samples.description.miqpex1 = [\u9ed2\u6192\u9055A simple MIQP problem~~~~~~~~~~zh]
opl.samples.description.mulprod = [\u9ed2\u6192\u9055A multi-period production planning problem~~~~~~~~~~~~~~zh]
opl.samples.description.nurses = [\u9ed2\u6192\u9055Nurses scheduling model~~~~~~~~~~~zh]
opl.samples.description.oil = [\u9ed2\u6192\u9055An oil blending problem~~~~~~~~~~~zh]
opl.samples.description.pmedian = [\u9ed2\u6192\u9055The P-Median problem~~~~~~~~~~zh]
opl.samples.description.prodmilp = [\u9ed2\u6192\u9055A fixed charge production model~~~~~~~~~~~~zh]
opl.samples.description.production = [\u9ed2\u6192\u9055A simple production model~~~~~~~~~~~~zh]
opl.samples.description.profiler = [\u9ed2\u6192\u9055Example used in the profiler tutorial~~~~~~~~~~~~~zh]
opl.samples.description.schedulingtutorial = [\u9ed2\u6192\u9055Examples used in the scheduling tutorial~~~~~~~~~~~~~~zh]
opl.samples.description.qcpex1 = [\u9ed2\u6192\u9055A quadratically constrained problem~~~~~~~~~~~~~zh]
opl.samples.description.qpex1 = [\u9ed2\u6192\u9055A quadratic programming problem~~~~~~~~~~~~zh]
opl.samples.description.quadassign = [\u9ed2\u6192\u9055A quadratic assignment problem~~~~~~~~~~~~zh]
opl.samples.description.relaxationiterator = [\u9ed2\u6192\u9055A simple infeasible model to illustrate the use of the class IloOplRelaxationIterator~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.sailco = [\u9ed2\u6192\u9055A simple inventory problem~~~~~~~~~~~~zh]
opl.samples.description.sched_alloc = [\u9ed2\u6192\u9055Resource allocation for house building~~~~~~~~~~~~~~zh]
opl.samples.description.sched_bridge = [\u9ed2\u6192\u9055Schedule the construction of a five-segment bridge~~~~~~~~~~~~~~zh]
opl.samples.description.sched_bridgebr = [\u9ed2\u6192\u9055Schedule bridge construction with resource breaks~~~~~~~~~~~~~~zh]
opl.samples.description.sched_calendar = [\u9ed2\u6192\u9055Adding calendars to the house building problem~~~~~~~~~~~~~~zh]
opl.samples.description.sched_cumul = [\u9ed2\u6192\u9055A model that use cumulative functions in the house building problem~~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_flowshop = [\u9ed2\u6192\u9055Classical flow-shop scheduling problem~~~~~~~~~~~~~~zh]
opl.samples.description.sched_intro = [\u9ed2\u6192\u9055House building introductory problem~~~~~~~~~~~~~zh]
opl.samples.description.sched_jobshop = [\u9ed2\u6192\u9055Classical job-shop scheduling problem~~~~~~~~~~~~~zh]
opl.samples.description.sched_jobshopflex = [\u9ed2\u6192\u9055Flexible job-shop scheduling problem~~~~~~~~~~~~~zh]
opl.samples.description.sched_openshop = [\u9ed2\u6192\u9055Classical Open-shop scheduling problem~~~~~~~~~~~~~~zh]
opl.samples.description.sched_optional = [\u9ed2\u6192\u9055A house building model with worker skills~~~~~~~~~~~~~~zh]
opl.samples.description.sched_pflowshop = [\u9ed2\u6192\u9055Flow-shop scheduling problem~~~~~~~~~~~~zh]
opl.samples.description.sched_production = [\u9ed2\u6192\u9055Production scheduling~~~~~~~~~~zh]
opl.samples.description.sched_rcpsp = [\u9ed2\u6192\u9055Classical resource-constrained project scheduling problem~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_rcpspmm = [\u9ed2\u6192\u9055Classical resource-constrained project scheduling problem with multiple modes~~~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_sequence = [\u9ed2\u6192\u9055A house building model with two workers~~~~~~~~~~~~~~zh]
opl.samples.description.sched_setup = [\u9ed2\u6192\u9055A scheduling problem on two alternative heterogeneous machines~~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_shipload = [\u9ed2\u6192\u9055Scheduling the loading of a ship~~~~~~~~~~~~zh]
opl.samples.description.sched_square = [\u9ed2\u6192\u9055Place small squares of different sizes into a large square~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_state = [\u9ed2\u6192\u9055A house building problem with state incompatibilities~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_tcost = [\u9ed2\u6192\u9055A problem to schedule a set of tasks on two alternative machines with different setup times~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_time = [\u9ed2\u6192\u9055A house building problem with earliness/tardiness costs~~~~~~~~~~~~~~~zh]
opl.samples.description.sched_trolley1 = [\u9ed2\u6192\u9055Shop scheduling with trolley~~~~~~~~~~~~zh]
opl.samples.description.sched_trolley2 = [\u9ed2\u6192\u9055Shop scheduling with trolley~~~~~~~~~~~~zh]
opl.samples.description.sports = [\u9ed2\u6192\u9055Finding a schedule for a sports league~~~~~~~~~~~~~~zh]
opl.samples.description.steelmill = [\u9ed2\u6192\u9055An inventory matching problem~~~~~~~~~~~~zh]
opl.samples.description.talent = [\u9ed2\u6192\u9055An audition scheduling problem~~~~~~~~~~~~zh]
opl.samples.description.teambuilding = [\u9ed2\u6192\u9055A team building problem~~~~~~~~~~~zh]
opl.samples.description.schoolclassscheduling = [\u9ed2\u6192\u9055A school class scheduling problem~~~~~~~~~~~~~zh]
opl.samples.description.transp = [\u9ed2\u6192\u9055A transportation model~~~~~~~~~~~zh]
opl.samples.description.vellino = [\u9ed2\u6192\u9055Column Generation model~~~~~~~~~~~zh]
opl.samples.description.volsay = [\u9ed2\u6192\u9055A simple chemical mix problem~~~~~~~~~~~~zh]
opl.samples.description.warehouse = [\u9ed2\u6192\u9055A warehouse location model~~~~~~~~~~~~zh]
opl.samples.description.warmstart = [\u9ed2\u6192\u9055A script that illustrates how to use warmstart~~~~~~~~~~~~~~zh]
opl.samples.description.xsteel = [\u9ed2\u6192\u9055A production planning model with data loaded from a spreadsheet~~~~~~~~~~~~~~~~zh]
opl.samples.description.assemblysequencing = [\u9ed2\u6192\u9055This model is to determine the order of a set of custom computers to be processed on an assembly line~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.basketballscheduling = [\u9ed2\u6192\u9055This example uses constraint programming to schedule the ACC basketball conference~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.bidselection = [\u9ed2\u6192\u9055Several bidders are bidding for a large contract~~~~~~~~~~~~~~zh]
opl.samples.description.blendingmulti-period = [\u9ed2\u6192\u9055This is a multiperiod blending problem~~~~~~~~~~~~~~zh]
opl.samples.description.capitalbudgeting = [\u9ed2\u6192\u9055The purpose of this OPL model is to help a firm invest on a set of proposed projects over time~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.callroute = [\u9ed2\u6192\u9055This model is used to construct a route from a set of end-to-end paths so that the collection of paths satisfies the blocking criterion, and at a minimum cost~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.calltrafficoptimization = [\u9ed2\u6192\u9055This script is used to balance the call volume throughout the network. Additionally, we want to limit the number of "hops", the number of links a packet must travel to reach its destination. Because the more hops a call takes, the worse is its quality~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.car = [\u9ed2\u6192\u9055In this model cars in production are placed on an assembly line moving through various units that install options such as air conditioning and radios~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.crewscheduling = [\u9ed2\u6192\u9055This model considers an airline crew scheduling problem~~~~~~~~~~~~~~~zh]
opl.samples.description.decentralization = [\u9ed2\u6192\u9055This model answers the question: where should each department be located so as to minimize overall yearly cost?~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.productdeployment = [\u9ed2\u6192\u9055This model plans multi-product deployment processes in a single period~~~~~~~~~~~~~~~~zh]
opl.samples.description.economicplanning = [\u9ed2\u6192\u9055This model investigates different possible growth patterns for the economy over the next years~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.factoryplanning = [\u9ed2\u6192\u9055This is a multi-period product mix~~~~~~~~~~~~~zh]
opl.samples.description.farmplanning = [\u9ed2\u6192\u9055This model calculates how a farmer should operate over the next five years to maximize profit~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.fleetassignment = [\u9ed2\u6192\u9055The fleet assignment problem consists of assigning aircraft (fleets) to flights in order to maximize net profit~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.foodmanufacture1 = [\u9ed2\u6192\u9055This model describes the Food Manufacturing model from "Model Building in Mathematical Programming", by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.manpowerplanning = [\u9ed2\u6192\u9055This model finds a plan for recruiting, training, staffing, overtime, and redundancy declaration, in order to meet the staffing requirements for a facility over the next years~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.mineplanning = [\u9ed2\u6192\u9055This model describes problem 7 from "Model Building in Mathematical Programming", by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.networkflows = [\u9ed2\u6192\u9055The purpose of this model is to solve a standard minimum-cost network-flow problem with a single commodity~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.noughtsandcrosses = [\u9ed2\u6192\u9055This model describes the three-dimensional Noughts And Crosses (Tic Tac Toe) problem 17 from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.opencastmining = [\u9ed2\u6192\u9055This model describes the opencast mining problem from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.outsourcing = [\u9ed2\u6192\u9055In this model, a manufacturer selects a set of suppliers for the components of his products~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.portfoliooptimization = [\u9ed2\u6192\u9055This OPL model is a tool for investment portfolio optimization~~~~~~~~~~~~~~~~zh]
opl.samples.description.productionplanning = [\u9ed2\u6192\u9055This model describes production planning for a computer assembly plant~~~~~~~~~~~~~~~~zh]
opl.samples.description.refineryplanning = [\u9ed2\u6192\u9055This model describes problem 6 from Model Building in Mathematical Programming by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.airtrafficflowmanagement = [\u9ed2\u6192\u9055The objective of this scheduling problem is to minimize the total sum of flight delays~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.flowshopscheduling = [\u9ed2\u6192\u9055This model involves flowshop scheduling for a computer assembly plant~~~~~~~~~~~~~~~~zh]
opl.samples.description.multimachineassignmentschedulingproblem = [\u9ed2\u6192\u9055The problem is to carry out all the tasks at the least possible cost~~~~~~~~~~~~~~~~zh]
opl.samples.description.taskscheduling = [\u9ed2\u6192\u9055This example involves assigning dates and workers to tasks~~~~~~~~~~~~~~~zh]
opl.samples.description.woodcuttingproblem = [\u9ed2\u6192\u9055The objective is to minimize the total cost of operating and delay of a wood factory while meeting the system constraints ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.staffassignment = [\u9ed2\u6192\u9055The objective is to find a balanced assignment of workers to shifts that minimizes the total number of unfilled slots~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.steelproduction = [\u9ed2\u6192\u9055This is a production and inventory model with backlogging~~~~~~~~~~~~~~~zh]
opl.samples.description.multistagesupplychain = [\u9ed2\u6192\u9055This model describes a three-echelon supply chain~~~~~~~~~~~~~~zh]
opl.samples.description.travelingsalesmanproblem = [\u9ed2\u6192\u9055Symmetric Traveling Salesman Problem~~~~~~~~~~~~~zh]
opl.samples.description.trucking = [\u9ed2\u6192\u9055This model is to assign the right number of trucks to each route in order to minimize the cost of transshipment and meet the volume requirements~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.airlineyieldmanagement = [\u9ed2\u6192\u9055This model is a tool for O&D-based airline yield management~~~~~~~~~~~~~~~zh]
opl.samples.description.yieldmanagement = [\u9ed2\u6192\u9055This model implements the example of Yield Management from Model Building in Mathematical Programming, by H.P. Williams~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]
opl.samples.description.wellmining = [\u9ed2\u6192\u9055The objective is sequencing the operations and the workover operations in order to minimize the whole completion time~~~~~~~~~~~~~~~~~~~~~~~~~~~~~zh]

# attribute keys/values
opl.samples.attribute.industry = [\u9ed2\u6192\u9055Industry~~~zh]
opl.samples.attribute.industry.energy = [\u9ed2\u6192\u9055Energy~~zh]
opl.samples.attribute.industry.finance = [\u9ed2\u6192\u9055Finance~~~zh]
opl.samples.attribute.industry.manufacturing = [\u9ed2\u6192\u9055Manufacturing~~~~~~zh]
opl.samples.attribute.industry.mathematicalgames = [\u9ed2\u6192\u9055Mathematical Games~~~~~~~~~zh]
opl.samples.attribute.industry.mining = [\u9ed2\u6192\u9055Mining~~zh]
opl.samples.attribute.industry.supplychain = [\u9ed2\u6192\u9055Supply Chain~~~~~zh]
opl.samples.attribute.industry.telecommunications = [\u9ed2\u6192\u9055Telecommunications~~~~~~~~~zh]
opl.samples.attribute.industry.timetabling = [\u9ed2\u6192\u9055Timetabling~~~~zh]
opl.samples.attribute.industry.transportation = [\u9ed2\u6192\u9055Transportation~~~~~~~zh]

opl.samples.attribute.feature = [\u9ed2\u6192\u9055Feature~~~zh]
opl.samples.attribute.feature.oplmodel = [\u9ed2\u6192\u9055OPL Standalone Model~~~~~~~~~~zh]
opl.samples.attribute.feature.oplscript = [\u9ed2\u6192\u9055OPL Flow Constrol Script~~~~~~~~~~~zh]

opl.samples.attribute.technique = [\u9ed2\u6192\u9055Technique~~~zh]
opl.samples.attribute.technique.cp = [\u9ed2\u6192\u9055Constraint Programming~~~~~~~~~~~zh]
opl.samples.attribute.technique.cpscheduling = [\u9ed2\u6192\u9055Constraint Programming Scheduling~~~~~~~~~~~~~zh]
opl.samples.attribute.technique.decomposition = [\u9ed2\u6192\u9055Decomposition~~~~~~zh]
opl.samples.attribute.technique.integerprogramming = [\u9ed2\u6192\u9055Integer Programming~~~~~~~~~zh]
opl.samples.attribute.technique.linearprogramming = [\u9ed2\u6192\u9055Linear Programming~~~~~~~~~zh]
opl.samples.attribute.technique.milp = [\u9ed2\u6192\u9055Mixed Integer Linear Programming~~~~~~~~~~~~zh]
opl.samples.attribute.technique.miqp = [\u9ed2\u6192\u9055Mixed Integer Quadratic Programming~~~~~~~~~~~~~zh]
opl.samples.attribute.technique.qp = [\u9ed2\u6192\u9055Quadratic Programming~~~~~~~~~~zh]
opl.samples.attribute.technique.stochastic = [\u9ed2\u6192\u9055Stochastic~~~zh]

opl.samples.attribute.complexity = [\u9ed2\u6192\u9055Complexity~~~zh]
opl.samples.attribute.complexity.basic = [\u9ed2\u6192\u9055Basic~zh]
opl.samples.attribute.complexity.intermediate = [\u9ed2\u6192\u9055Intermediate~~~~~zh]
opl.samples.attribute.complexity.advanced = [\u9ed2\u6192\u9055Advanced~~~zh]
