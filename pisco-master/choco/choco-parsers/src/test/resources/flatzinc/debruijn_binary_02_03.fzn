predicate 
  global_sorting(array[int] of var int: x, array[int] of var int: y);

predicate global_setDisjoint(var set of int: s1, var set of int: s2);

predicate global_min(array[int] of var int: x, var int: m);

predicate global_member(var set of int: x, var int: y);

predicate global_max(array[int] of var int: x, var int: m);

predicate global_lexEq(array[int] of var int: x, array[int] of var int: y);

predicate global_lex(array[int] of var int: x, array[int] of var int: y);

predicate 
  global_inverseSet(
    array[int] of var int: x, array[int] of var set of int: y);

predicate 
  global_globalCardinalityLowUp(
    array[int] of var int: x, array[int] of var int: c, 
    array[int] of int: lbound, array[int] of int: ubound);

predicate 
  global_globalCardinality(
    array[int] of var int: x, array[int] of var int: c);

predicate 
  global_elementInt(var int: i, array[int] of var int: x, var int: y);

predicate 
  global_elementBool(var int: i, array[int] of var bool: x, var bool: y);

predicate 
  global_cumulative(
    array[int] of var int: s, array[int] of var int: d, 
    array[int] of var int: r, var int: b);

predicate global_allDifferent(array[int] of var int: x);

int: base = 2;

array[1 .. 8] of var 0 .. 1: bin_code::output_array([ 1 .. 8 ]);

array[1 .. 24] of var 0 .. 1: binary::output_array([ 1 .. 8, 1 .. 3 ]);

array[1 .. 2] of var int: gcc::output_array([ 0 .. 1 ]);

int: len____10 = 3;

int: len____12 = 3;

int: len____14 = 3;

int: len____16 = 3;

int: len____2 = 3;

int: len____4 = 3;

int: len____6 = 3;

int: len____8 = 3;

int: m = 8;

int: n = 3;

array[1 .. 3] of var 0 .. 1: t____1;

array[1 .. 3] of var 0 .. 1: t____11;

array[1 .. 3] of var 0 .. 1: t____13;

array[1 .. 3] of var 0 .. 1: t____15;

array[1 .. 3] of var 0 .. 1: t____3;

array[1 .. 3] of var 0 .. 1: t____5;

array[1 .. 3] of var 0 .. 1: t____7;

array[1 .. 3] of var 0 .. 1: t____9;

array[1 .. 8] of var 0 .. 7: x::output_array([ 1 .. 8 ]);

constraint int_eq(bin_code[1], binary[1]);

constraint int_eq(bin_code[2], binary[4]);

constraint int_eq(bin_code[3], binary[7]);

constraint int_eq(bin_code[4], binary[10]);

constraint int_eq(bin_code[5], binary[13]);

constraint int_eq(bin_code[6], binary[16]);

constraint int_eq(bin_code[7], binary[19]);

constraint int_eq(bin_code[8], binary[22]);

constraint int_eq(binary[23], binary[1]);

constraint int_eq(binary[24], binary[2]);

constraint int_eq(binary[2], binary[4]);

constraint int_eq(binary[3], binary[5]);

constraint int_eq(binary[5], binary[7]);

constraint int_eq(binary[6], binary[8]);

constraint int_eq(binary[8], binary[10]);

constraint int_eq(binary[9], binary[11]);

constraint int_eq(binary[11], binary[13]);

constraint int_eq(binary[12], binary[14]);

constraint int_eq(binary[14], binary[16]);

constraint int_eq(binary[15], binary[17]);

constraint int_eq(binary[17], binary[19]);

constraint int_eq(binary[18], binary[20]);

constraint int_eq(binary[20], binary[22]);

constraint int_eq(binary[21], binary[23]);

constraint int_eq(binary[1], t____1[1]);

constraint int_eq(binary[2], t____1[2]);

constraint int_eq(binary[3], t____1[3]);

constraint int_ge(t____1[1], 0);

constraint int_ge(t____1[2], 0);

constraint int_ge(t____1[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____1[1], t____1[2], t____1[3], x[1] ], 0);

constraint int_eq(binary[4], t____3[1]);

constraint int_eq(binary[5], t____3[2]);

constraint int_eq(binary[6], t____3[3]);

constraint int_ge(t____3[1], 0);

constraint int_ge(t____3[2], 0);

constraint int_ge(t____3[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____3[1], t____3[2], t____3[3], x[2] ], 0);

constraint int_eq(binary[7], t____5[1]);

constraint int_eq(binary[8], t____5[2]);

constraint int_eq(binary[9], t____5[3]);

constraint int_ge(t____5[1], 0);

constraint int_ge(t____5[2], 0);

constraint int_ge(t____5[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____5[1], t____5[2], t____5[3], x[3] ], 0);

constraint int_eq(binary[10], t____7[1]);

constraint int_eq(binary[11], t____7[2]);

constraint int_eq(binary[12], t____7[3]);

constraint int_ge(t____7[1], 0);

constraint int_ge(t____7[2], 0);

constraint int_ge(t____7[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____7[1], t____7[2], t____7[3], x[4] ], 0);

constraint int_eq(binary[13], t____9[1]);

constraint int_eq(binary[14], t____9[2]);

constraint int_eq(binary[15], t____9[3]);

constraint int_ge(t____9[1], 0);

constraint int_ge(t____9[2], 0);

constraint int_ge(t____9[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____9[1], t____9[2], t____9[3], x[5] ], 0);

constraint int_eq(binary[16], t____11[1]);

constraint int_eq(binary[17], t____11[2]);

constraint int_eq(binary[18], t____11[3]);

constraint int_ge(t____11[1], 0);

constraint int_ge(t____11[2], 0);

constraint int_ge(t____11[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____11[1], t____11[2], t____11[3], x[6] ], 0);

constraint int_eq(binary[19], t____13[1]);

constraint int_eq(binary[20], t____13[2]);

constraint int_eq(binary[21], t____13[3]);

constraint int_ge(t____13[1], 0);

constraint int_ge(t____13[2], 0);

constraint int_ge(t____13[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____13[1], t____13[2], t____13[3], x[7] ], 0);

constraint int_eq(binary[22], t____15[1]);

constraint int_eq(binary[23], t____15[2]);

constraint int_eq(binary[24], t____15[3]);

constraint int_ge(t____15[1], 0);

constraint int_ge(t____15[2], 0);

constraint int_ge(t____15[3], 0);

constraint 
  int_lin_eq(
    [ -4, -2, -1, 1 ], [ t____15[1], t____15[2], t____15[3], x[8] ], 0);

constraint global_min(x, x[1]);

constraint global_allDifferent(x);

constraint global_globalCardinality(bin_code, gcc);

constraint int_eq(gcc[2], gcc[1]);

constraint int_le(t____15[3], 1);

constraint int_le(0, t____15[3]);

constraint int_le(t____15[2], 1);

constraint int_le(0, t____15[2]);

constraint int_le(t____15[1], 1);

constraint int_le(0, t____15[1]);

constraint int_le(x[8], 8);

constraint int_le(0, x[8]);

constraint int_le(t____13[3], 1);

constraint int_le(0, t____13[3]);

constraint int_le(t____13[2], 1);

constraint int_le(0, t____13[2]);

constraint int_le(t____13[1], 1);

constraint int_le(0, t____13[1]);

constraint int_le(x[7], 8);

constraint int_le(0, x[7]);

constraint int_le(t____11[3], 1);

constraint int_le(0, t____11[3]);

constraint int_le(t____11[2], 1);

constraint int_le(0, t____11[2]);

constraint int_le(t____11[1], 1);

constraint int_le(0, t____11[1]);

constraint int_le(x[6], 8);

constraint int_le(0, x[6]);

constraint int_le(t____9[3], 1);

constraint int_le(0, t____9[3]);

constraint int_le(t____9[2], 1);

constraint int_le(0, t____9[2]);

constraint int_le(t____9[1], 1);

constraint int_le(0, t____9[1]);

constraint int_le(x[5], 8);

constraint int_le(0, x[5]);

constraint int_le(t____7[3], 1);

constraint int_le(0, t____7[3]);

constraint int_le(t____7[2], 1);

constraint int_le(0, t____7[2]);

constraint int_le(t____7[1], 1);

constraint int_le(0, t____7[1]);

constraint int_le(x[4], 8);

constraint int_le(0, x[4]);

constraint int_le(t____5[3], 1);

constraint int_le(0, t____5[3]);

constraint int_le(t____5[2], 1);

constraint int_le(0, t____5[2]);

constraint int_le(t____5[1], 1);

constraint int_le(0, t____5[1]);

constraint int_le(x[3], 8);

constraint int_le(0, x[3]);

constraint int_le(t____3[3], 1);

constraint int_le(0, t____3[3]);

constraint int_le(t____3[2], 1);

constraint int_le(0, t____3[2]);

constraint int_le(t____3[1], 1);

constraint int_le(0, t____3[1]);

constraint int_le(x[2], 8);

constraint int_le(0, x[2]);

constraint int_le(t____1[3], 1);

constraint int_le(0, t____1[3]);

constraint int_le(t____1[2], 1);

constraint int_le(0, t____1[2]);

constraint int_le(t____1[1], 1);

constraint int_le(0, t____1[1]);

constraint int_le(x[1], 8);

constraint int_le(0, x[1]);

solve ::int_search(x, first_fail, indomain_split, complete) satisfy;
