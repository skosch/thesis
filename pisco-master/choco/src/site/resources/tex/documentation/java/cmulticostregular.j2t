        Model m = new CPModel();

        int nTime = 14; // 2 weeks: 14 days
        int nAct = 3; // 3 shift types:
        int DAY = 0, NIGHT = 1, REST = 2;
        int nCounters = 4; // cost (0), #DAY (1), #NIGHT (2), #WORK (3)

        IntegerVariable[] x = makeIntVarArray("x", nTime, 0, nAct - 1, Options.V_ENUM);

        IntegerVariable[] z = new IntegerVariable[4];
        z[0] = makeIntVar("z", 30, 800, Options.V_BOUND); // 30 <= cost <= 80
        z[1] = makeIntVar("D", 0, 7, Options.V_BOUND); // 0 <= #DAY <= 7
        z[2] = makeIntVar("N", 3, 7, Options.V_BOUND); // 3 <= #NIGHT <= 7
        z[3] = makeIntVar("W", 7, 9, Options.V_BOUND); // 7 <= #WORK <= 9

        FiniteAutomaton auto = new FiniteAutomaton();

        int start = auto.addState();
        auto.setInitialState(start);
        auto.setFinal(start);
        int first = auto.addState();
        auto.addTransition(start, first, DAY);         // transition (0,D,1)
        int second = auto.addState();
        auto.addTransition(first, second, DAY, NIGHT); // transitions (1,D,2), (1,N,2)
        auto.addTransition(second, start, REST);       // transition (2,R,0)
        auto.addTransition(start, second, NIGHT);      // transition (0,N,2)

        int[][][][] c = new int[nTime][nAct][nCounters][auto.getNbStates()];
        for (int i = 0; i < c.length; i++) {
            c[i][DAY][0] = new int[]{3, 5, 0};
            c[i][DAY][1] = new int[]{1, 1, 0};
            c[i][DAY][3] = new int[]{1, 1, 0};

            c[i][NIGHT][0] = new int[]{8, 9, 0};
            c[i][NIGHT][2] = new int[]{1, 1, 0};
            c[i][NIGHT][3] = new int[]{1, 1, 0};

            c[i][REST][0] = new int[]{0, 0, 2};



           
        }

        ICostAutomaton cauto = CostAutomaton.makeMultiResources(auto,c,z);

        m.addConstraint(multiCostRegular(z, x, cauto));
        Solver s = new CPSolver();
        s.read(m);
        System.out.println(s.minimize(s.getVar(z[0]),false));
          //  s.solve();
            System.out.println(s.getVar(z[0]).pretty());
            System.out.println(s.runtimeStatistics());
