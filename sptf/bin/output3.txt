number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: ls
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-01.csv
35
47
49
50
50
54
57
70
78
80
93
93
94
96
117
119
119
120
124
126
133
140
142
143
147
147
154
170
186
200
212
212
216
219
236
240
245
249
254
256
259
265
268
270
271
282
283
284
299
390
Job 0: due 35
Job 1: due 47
Job 2: due 49
Job 3: due 50
Job 4: due 50
Job 5: due 54
Job 6: due 57
Job 7: due 70
Job 8: due 78
Job 9: due 80
Job 10: due 93
Job 11: due 93
Job 12: due 94
Job 13: due 96
Job 14: due 117
Job 15: due 119
Job 16: due 119
Job 17: due 120
Job 18: due 124
Job 19: due 126
Job 20: due 133
Job 21: due 140
Job 22: due 142
Job 23: due 143
Job 24: due 147
Job 25: due 147
Job 26: due 154
Job 27: due 170
Job 28: due 186
Job 29: due 200
Job 30: due 212
Job 31: due 212
Job 32: due 216
Job 33: due 219
Job 34: due 236
Job 35: due 240
Job 36: due 245
Job 37: due 249
Job 38: due 254
Job 39: due 256
Job 40: due 259
Job 41: due 265
Job 42: due 268
Job 43: due 270
Job 44: due 271
Job 45: due 282
Job 46: due 283
Job 47: due 284
Job 48: due 299
Job 49: due 390
Ignore all jobs after 50
Lmaxinc before safe moves: 1948
Now using unsafety tolerance 0
New Lmaxincnew: 1549
Difference: 399
Lmaxinc after safe moves: 2.3994e+06
Initial solution:
0 1 0 3 4 1 6 7 8 9 10 11 0 13 14 15 16 3 18 19 20 21 22 23 24 25 26 27 15 14 23 31 32 33 14 22 36 37 38 39 40 41 32 43 44 45 46 47 48 49 
Updating LmaxLB to -25.8. C=9.2, d=35Updating LmaxLB to -24.4. C=24.6, d=49same duedate: 3
Updating LmaxLB to 9.5. C=59.5, d=50Updating LmaxLB to 33.7. C=103.7, d=70Updating LmaxLB to 39.7. C=117.7, d=78Updating LmaxLB to 43.1. C=123.1, d=80same duedate: 10
Updating LmaxLB to 57.4. C=150.4, d=93Updating LmaxLB to 63.6. C=157.6, d=94Updating LmaxLB to 79.6. C=175.6, d=96Updating LmaxLB to 103.6. C=220.6, d=117same duedate: 15
Updating LmaxLB to 156.6. C=275.6, d=119Updating LmaxLB to 164.8. C=288.8, d=124Updating LmaxLB to 166.4. C=292.4, d=126Updating LmaxLB to 184.6. C=317.6, d=133Updating LmaxLB to 205.6. C=345.6, d=140Updating LmaxLB to 247.6. C=389.6, d=142Updating LmaxLB to 263.7. C=406.7, d=143same duedate: 24
Updating LmaxLB to 280.8. C=427.8, d=147Updating LmaxLB to 288.8. C=442.8, d=154Updating LmaxLB to 313.3. C=483.3, d=170same duedate: 30
Updating LmaxLB to 376.8. C=588.8, d=212Updating LmaxLB to 437.6. C=653.6, d=216Updating LmaxLB to 477.2. C=696.2, d=219Updating LmaxLB to 504.2. C=749.2, d=245Updating LmaxLB to 554.2. C=803.2, d=249Updating LmaxLB to 632. C=886, d=254Updating LmaxLB to 714. C=970, d=256Updating LmaxLB to 779.8. C=1038.8, d=259Updating LmaxLB to 845.8. C=1110.8, d=265Updating LmaxLB to 855. C=1123, d=268Updating LmaxLB to 901.6. C=1171.6, d=270Updating LmaxLB to 964.6. C=1235.6, d=271Updating LmaxLB to 1047.6. C=1329.6, d=282Updating LmaxLB to 1130.6. C=1413.6, d=283Updating LmaxLB to 1147.2. C=1431.2, d=284Updating LmaxLB to 1204.2. C=1503.2, d=299Lower bound on Lmax based on areas:0
Max Lksingle:1948
Max reduction:1948
Now adding static psi-2-in-2 dominance rules ...
Added 36 safe move dominance lazy constraints
Added 59 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3320 rows and 2147 columns.
MIP Presolve modified 2747 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 546 rows, 401 columns, and 1812 nonzeros.
Reduced MIP has 350 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1502.
Problem contains 59 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0     1140.6067    85                   1140.6067      209         
      0     0     1203.0536    77                    Cuts: 86      332         
      0     0     1261.9133    79                    Cuts: 91      461         
      0     0     1271.5113    87                    Cuts: 67      540         
      0     0     1280.4978    90                    Cuts: 56      596         
      0     0     1287.5214    91                    Cuts: 36      639         
      0     0     1288.2969    96                    Cuts: 32      656         
      0     0     1288.4147    93                    Cuts: 27      668         
      0     0     1290.9760    91                    Cuts: 14      689         
*     0+    0                         1481.0000     1290.9760      689   12.83%
      0     0     1291.7225    86     1481.0000      Cuts: 20      708   12.78%
      0     0     1292.2157    98     1481.0000      Cuts: 13      719   12.75%
      0     0     1292.5002   105     1481.0000      Cuts: 12      730   12.73%
      0     0     1292.5411    98     1481.0000   Impl Bds: 5      731   12.73%
      0     0     1292.7467   104     1481.0000      Cuts: 15      740   12.71%
      0     0     1292.7683   104     1481.0000   Impl Bds: 1      743   12.71%
      0     2     1292.7683   104     1481.0000     1292.7683      743   12.71%
Elapsed time =   0.19 sec. (tree size =  0.00 MB, solutions = 1)
*    34    34      integral     0     1400.0000     1296.6484     2036    7.38%
*    37    30      integral     0     1394.0000     1296.6484     2150    6.98%
    100    75     1383.5020    20     1394.0000     1300.9643     4487    6.67%
*   110+   71                         1379.0000     1301.2345     4926    5.64%
*   120+   76                         1369.0000     1301.2345     5141    4.95%
*   125    79      integral     0     1367.0000     1301.2345     5160    4.81%
*   170+  110                         1365.0000     1301.3835     7162    4.66%
    200   134     1346.4308    51     1365.0000     1306.3745     8186    4.29%
    300   200     1335.2250    77     1365.0000     1314.6842    10506    3.69%
*   340+  141                         1349.0000     1316.3049    11481    2.42%
    400   167     1343.3762    24     1349.0000     1316.9763    13295    2.37%

Clique cuts applied:  7
Cover cuts applied:  18
Implied bound cuts applied:  264
Flow cuts applied:  10
Zero-half cuts applied:  28
Gomory fractional cuts applied:  6
Lazy constraints applied:  11
Optimal
Lmax: 1349
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 1
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 5
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 12
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 3
Job 18 into batch 0
Job 19 into batch 19
Job 20 into batch 2
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 14
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 15
Job 27 into batch 27
Job 28 into batch 14
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 29
Job 34 into batch 34
Job 35 into batch 22
Job 36 into batch 36
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 32
Job 43 into batch 30
Job 44 into batch 34
Job 45 into batch 45
Job 46 into batch 46
Job 47 into batch 40
Job 48 into batch 48
Job 49 into batch 49
Job 0:	s=4	p=23	d=35	L=(-12+0-0)=-12=			Pk=23	Total size:10
Job 1:	s=5	p=17	d=47	L=(-7+0-0)=-7=			Pk=17	Total size:10
Job 2:	s=3	p=23	d=49	L=(14+12-0)=26=			Pk=36	Total size:10
Job 3:	s=7	p=19	d=50	L=(32+12-0)=44=			Pk=19	Total size:10
Job 4:	s=9	p=24	d=50	L=(56+12-0)=68=			Pk=24	Total size:9
Job 5:	s=3	p=9	d=54	L=(61+16-0)=77=			Pk=14	Total size:9
Job 6:	s=5	p=5	d=57	L=(63+11-1549)=-1475=			Pk=5	Total size:0
Job 7:	s=10	p=39	d=70	L=(89+11-0)=100=			Pk=39	Total size:10
Job 8:	s=10	p=14	d=78	L=(95+11-0)=106=			Pk=14	Total size:10
Job 9:	s=9	p=6	d=80	L=(99+11-0)=110=			Pk=6	Total size:9
Job 10:	s=6	p=14	d=93	L=(100+-3-1549)=-1452=			Pk=14	Total size:0
Job 11:	s=9	p=21	d=93	L=(121+-3-0)=118=			Pk=21	Total size:9
Job 12:	s=3	p=24	d=94	L=(144+3-0)=147=			Pk=30	Total size:9
Job 13:	s=6	p=30	d=96	L=(172+-27-1549)=-1404=			Pk=30	Total size:0
Job 14:	s=6	p=75	d=117	L=(226+-27-0)=199=			Pk=75	Total size:10
Job 15:	s=5	p=38	d=119	L=(262+-27-0)=235=			Pk=38	Total size:10
Job 16:	s=8	p=45	d=119	L=(307+-27-0)=280=			Pk=45	Total size:8
Job 17:	s=3	p=2	d=120	L=(308+-29-1549)=-1270=			Pk=2	Total size:0
Job 18:	s=6	p=21	d=124	L=(325+-50-1549)=-1274=			Pk=21	Total size:0
Job 19:	s=9	p=4	d=126	L=(327+-50-0)=277=			Pk=4	Total size:9
Job 20:	s=7	p=36	d=133	L=(356+-86-1549)=-1279=			Pk=36	Total size:0
Job 21:	s=8	p=35	d=140	L=(384+-86-0)=298=			Pk=35	Total size:8
Job 22:	s=8	p=55	d=142	L=(437+-86-0)=351=			Pk=55	Total size:10
Job 23:	s=3	p=57	d=143	L=(493+-143-1549)=-1199=			Pk=57	Total size:0
Job 24:	s=9	p=3	d=147	L=(492+-143-0)=349=			Pk=3	Total size:9
Job 25:	s=8	p=23	d=147	L=(515+-143-0)=372=			Pk=23	Total size:8
Job 26:	s=5	p=30	d=154	L=(538+-173-1549)=-1184=			Pk=30	Total size:0
Job 27:	s=9	p=45	d=170	L=(567+-173-0)=394=			Pk=45	Total size:9
Job 28:	s=1	p=38	d=186	L=(589+-211-1549)=-1171=			Pk=38	Total size:0
Job 29:	s=3	p=70	d=200	L=(645+-210-0)=435=			Pk=71	Total size:9
Job 30:	s=4	p=51	d=212	L=(684+-180-0)=504=			Pk=81	Total size:10
Job 31:	s=9	p=67	d=212	L=(751+-180-0)=571=			Pk=67	Total size:9
Job 32:	s=8	p=81	d=216	L=(828+-180-0)=648=			Pk=81	Total size:10
Job 33:	s=6	p=71	d=219	L=(896+-251-1549)=-904=			Pk=71	Total size:0
Job 34:	s=1	p=74	d=236	L=(953+-245-0)=708=			Pk=80	Total size:9
Job 35:	s=2	p=48	d=240	L=(997+-293-1549)=-845=			Pk=48	Total size:0
Job 36:	s=8	p=45	d=245	L=(1037+-293-0)=744=			Pk=45	Total size:8
Job 37:	s=9	p=60	d=249	L=(1093+-293-0)=800=			Pk=60	Total size:9
Job 38:	s=9	p=92	d=254	L=(1180+-293-0)=887=			Pk=92	Total size:9
Job 39:	s=10	p=84	d=256	L=(1262+-293-0)=969=			Pk=84	Total size:10
Job 40:	s=8	p=86	d=259	L=(1345+-291-0)=1054=			Pk=88	Total size:10
Job 41:	s=9	p=80	d=265	L=(1419+-291-0)=1128=			Pk=80	Total size:9
Job 42:	s=2	p=61	d=268	L=(1477+-352-1549)=-424=			Pk=61	Total size:0
Job 43:	s=6	p=81	d=270	L=(1556+-433-1549)=-426=			Pk=81	Total size:0
Job 44:	s=8	p=80	d=271	L=(1635+-513-1549)=-427=			Pk=80	Total size:0
Job 45:	s=10	p=94	d=282	L=(1718+-513-0)=1205=			Pk=94	Total size:10
Job 46:	s=10	p=84	d=283	L=(1801+-513-0)=1288=			Pk=84	Total size:10
Job 47:	s=2	p=88	d=284	L=(1888+-601-1549)=-262=			Pk=88	Total size:0
Job 48:	s=10	p=72	d=299	L=(1945+-601-0)=1344=			Pk=72	Total size:10
Job 49:	s=3	p=94	d=390	L=(1948+-601-0)=1347=			Pk=94	Total size:3

0
1.42857
1349
1.22 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-02.csv
32
36
44
59
66
68
76
76
86
89
92
112
113
117
126
127
130
143
143
148
158
164
168
172
176
187
194
198
205
214
227
231
234
244
271
276
281
282
283
312
331
335
351
366
379
383
389
416
430
543
Job 0: due 32
Job 1: due 36
Job 2: due 44
Job 3: due 59
Job 4: due 66
Job 5: due 68
Job 6: due 76
Job 7: due 76
Job 8: due 86
Job 9: due 89
Job 10: due 92
Job 11: due 112
Job 12: due 113
Job 13: due 117
Job 14: due 126
Job 15: due 127
Job 16: due 130
Job 17: due 143
Job 18: due 143
Job 19: due 148
Job 20: due 158
Job 21: due 164
Job 22: due 168
Job 23: due 172
Job 24: due 176
Job 25: due 187
Job 26: due 194
Job 27: due 198
Job 28: due 205
Job 29: due 214
Job 30: due 227
Job 31: due 231
Job 32: due 234
Job 33: due 244
Job 34: due 271
Job 35: due 276
Job 36: due 281
Job 37: due 282
Job 38: due 283
Job 39: due 312
Job 40: due 331
Job 41: due 335
Job 42: due 351
Job 43: due 366
Job 44: due 379
Job 45: due 383
Job 46: due 389
Job 47: due 416
Job 48: due 430
Job 49: due 543
Ignore all jobs after 49
Lmaxinc before safe moves: 1799
Now using unsafety tolerance 0
New Lmaxincnew: 1055
Difference: 744
Lmaxinc after safe moves: 1.11302e+06
Initial solution:
0 1 2 3 4 5 2 7 8 3 10 11 11 13 7 15 16 13 18 19 13 21 22 23 24 10 26 16 28 10 10 31 32 33 34 35 19 24 38 39 28 41 42 43 44 23 41 41 48 
Updating LmaxLB to -29.9. C=2.1, d=32Updating LmaxLB to -28.9. C=7.1, d=36same duedate: 6
Updating LmaxLB to -14.6. C=61.4, d=76Updating LmaxLB to 6.2. C=98.2, d=92Updating LmaxLB to 13.8. C=130.8, d=117Updating LmaxLB to 23.8. C=149.8, d=126Updating LmaxLB to 24.2. C=151.2, d=127Updating LmaxLB to 26.2. C=156.2, d=130same duedate: 17
Updating LmaxLB to 64.8. C=207.8, d=143Updating LmaxLB to 99. C=247, d=148Updating LmaxLB to 124.2. C=288.2, d=164Updating LmaxLB to 200.2. C=368.2, d=168Updating LmaxLB to 217.8. C=389.8, d=172Updating LmaxLB to 252.3. C=428.3, d=176Updating LmaxLB to 275.4. C=469.4, d=194Updating LmaxLB to 278.3. C=476.3, d=198Updating LmaxLB to 289.6. C=494.6, d=205Updating LmaxLB to 296.4. C=523.4, d=227Updating LmaxLB to 317.4. C=548.4, d=231Updating LmaxLB to 330. C=564, d=234Updating LmaxLB to 382.1. C=626.1, d=244Updating LmaxLB to 395.9. C=666.9, d=271Updating LmaxLB to 419.1. C=695.1, d=276Updating LmaxLB to 430. C=711, d=281Updating LmaxLB to 441.6. C=723.6, d=282Updating LmaxLB to 501.6. C=784.6, d=283Updating LmaxLB to 531.4. C=843.4, d=312Updating LmaxLB to 542.4. C=873.4, d=331Updating LmaxLB to 584.9. C=919.9, d=335Updating LmaxLB to 613.7. C=964.7, d=351Updating LmaxLB to 665.9. C=1031.9, d=366Updating LmaxLB to 714.5. C=1093.5, d=379Updating LmaxLB to 732.1. C=1115.1, d=383Updating LmaxLB to 762.9. C=1151.9, d=389Updating LmaxLB to 772.5. C=1202.5, d=430Lower bound on Lmax based on areas:0
Max Lksingle:1799
Max reduction:1799
Now adding static psi-2-in-2 dominance rules ...
Added 120 safe move dominance lazy constraints
Added 114 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2805 rows and 1836 columns.
MIP Presolve modified 2246 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 912 rows, 611 columns, and 3855 nonzeros.
Reduced MIP has 561 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.01 sec.
Clique table members: 977.
Problem contains 114 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      518.7410   175                    518.7410      502         
      0     0      545.2804   164                   Cuts: 138      742         
      0     0      580.0147   157                   Cuts: 165      962         
      0     0      602.5434   168                   Cuts: 171     1167         
      0     0      618.1579   197                   Cuts: 154     1371         
      0     0      624.0989   172                   Cuts: 105     1471         
      0     0      629.0248   201                    Cuts: 76     1577         
      0     0      632.7237   197                    Cuts: 89     1669         
      0     0      635.6196   202                   Cuts: 122     1755         
      0     0      639.2472   174                    Cuts: 69     1823         
      0     0      640.4308   182                   Cuts: 109     1888         
      0     0      641.3016   184                    Cuts: 51     1927         
      0     0      642.5999   189                    Cuts: 60     1971         
      0     0      642.6983   190                    Cuts: 69     1992         
      0     0      642.9086   198                    Cuts: 57     2017         
      0     0      643.0739   200                    Cuts: 47     2040         
      0     0      643.1836   199                    Cuts: 31     2058         
      0     0      643.2128   202                    Cuts: 12     2067         
      0     0      643.2255   203                Impl Bds: 29     2071         
*     0+    0                         1040.0000      643.2255     2071   38.15%
      0     2      643.2255   199     1040.0000      643.2390     2071   38.15%
Elapsed time =   0.67 sec. (tree size =  0.00 MB, solutions = 1)
    100   102     1003.2294    25     1040.0000      648.1876     9911   37.67%
    200   195      930.5004    53     1040.0000      648.3614    18039   37.66%
    300   288      990.6157    73     1040.0000      649.5225    22823   37.55%
    400   382     1039.4552    40     1040.0000      649.5238    28927   37.55%
*   488+  308                          945.0000      862.8714    34660    8.69%
*   488+  205                          919.0000      872.4309    34997    5.07%
*   488+  136                          914.0000      873.9299    35182    4.38%
*   498+   97                          905.0000      875.7178    35673    3.24%
    500    98      879.8326    64      905.0000      875.7178    35706    3.24%
    600   106      898.2983    31      905.0000      879.3290    38594    2.84%
*   668+   57                          896.0000      879.8990    40181    1.80%
*   678+   31                          893.0000      880.9388    40761    1.35%
    700    48      892.2778    18      893.0000      880.9388    41307    1.35%
    800    94      890.9488    48      893.0000      883.9762    44674    1.01%
    900   124        cutoff            893.0000      887.0706    46584    0.66%
   1000   115      892.0223    34      893.0000      889.4117    49388    0.40%
Elapsed time =   7.82 sec. (tree size =  0.37 MB, solutions = 7)
   1100    89        cutoff            893.0000      890.7322    51746    0.25%

Clique cuts applied:  10
Cover cuts applied:  57
Implied bound cuts applied:  55
Flow cuts applied:  13
Mixed integer rounding cuts applied:  46
Zero-half cuts applied:  25
Gomory fractional cuts applied:  8
Lazy constraints applied:  3
Optimal
Lmax: 893
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 2
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 9
Job 12 into batch 9
Job 13 into batch 13
Job 14 into batch 7
Job 15 into batch 15
Job 16 into batch 3
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 23
Job 26 into batch 26
Job 27 into batch 3
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 29
Job 34 into batch 10
Job 35 into batch 32
Job 36 into batch 19
Job 37 into batch 24
Job 38 into batch 38
Job 39 into batch 28
Job 40 into batch 23
Job 41 into batch 41
Job 42 into batch 20
Job 43 into batch 30
Job 44 into batch 17
Job 45 into batch 13
Job 46 into batch 41
Job 47 into batch 41
Job 48 into batch 48
Job 0:	s=7	p=3	d=32	L=(-29+0-0)=-29=			Pk=3	Total size:7
Job 1:	s=10	p=5	d=36	L=(-28+0-0)=-28=			Pk=5	Total size:10
Job 2:	s=2	p=14	d=44	L=(-22+0-0)=-22=			Pk=14	Total size:10
Job 3:	s=5	p=20	d=59	L=(-17+5-0)=-12=			Pk=25	Total size:10
Job 4:	s=10	p=11	d=66	L=(-13+5-0)=-8=			Pk=11	Total size:10
Job 5:	s=9	p=5	d=68	L=(-10+5-0)=-5=			Pk=5	Total size:9
Job 6:	s=8	p=14	d=76	L=(-4+-9-1055)=-1068=			Pk=14	Total size:0
Job 7:	s=4	p=37	d=76	L=(33+-8-0)=25=			Pk=38	Total size:9
Job 8:	s=6	p=1	d=86	L=(24+-8-0)=16=			Pk=1	Total size:6
Job 9:	s=5	p=10	d=89	L=(31+-8-0)=23=			Pk=10	Total size:10
Job 10:	s=4	p=78	d=92	L=(106+-8-0)=98=			Pk=78	Total size:10
Job 11:	s=2	p=7	d=112	L=(93+-15-1055)=-977=			Pk=7	Total size:0
Job 12:	s=3	p=6	d=113	L=(98+-21-1055)=-978=			Pk=6	Total size:0
Job 13:	s=6	p=49	d=117	L=(143+-16-0)=127=			Pk=54	Total size:10
Job 14:	s=5	p=38	d=126	L=(172+-54-1055)=-937=			Pk=38	Total size:0
Job 15:	s=7	p=2	d=127	L=(173+-54-0)=119=			Pk=2	Total size:7
Job 16:	s=2	p=25	d=130	L=(195+-79-1055)=-939=			Pk=25	Total size:0
Job 17:	s=2	p=43	d=143	L=(225+-45-0)=180=			Pk=77	Total size:10
Job 18:	s=10	p=43	d=143	L=(268+-45-0)=223=			Pk=43	Total size:10
Job 19:	s=7	p=56	d=148	L=(319+-45-0)=274=			Pk=56	Total size:10
Job 20:	s=2	p=26	d=158	L=(335+-15-0)=320=			Pk=56	Total size:10
Job 21:	s=9	p=40	d=164	L=(369+-15-0)=354=			Pk=40	Total size:9
Job 22:	s=10	p=80	d=168	L=(445+-15-0)=430=			Pk=80	Total size:10
Job 23:	s=4	p=54	d=172	L=(495+-9-0)=486=			Pk=60	Total size:10
Job 24:	s=7	p=55	d=176	L=(546+-9-0)=537=			Pk=55	Total size:10
Job 25:	s=1	p=51	d=187	L=(586+-60-1055)=-529=			Pk=51	Total size:0
Job 26:	s=9	p=40	d=194	L=(619+-60-0)=559=			Pk=40	Total size:9
Job 27:	s=3	p=23	d=198	L=(638+-83-1055)=-500=			Pk=23	Total size:0
Job 28:	s=3	p=61	d=205	L=(692+-60-0)=632=			Pk=84	Total size:10
Job 29:	s=1	p=69	d=214	L=(752+-60-0)=692=			Pk=69	Total size:10
Job 30:	s=3	p=73	d=227	L=(812+-37-0)=775=			Pk=96	Total size:10
Job 31:	s=10	p=25	d=231	L=(833+-37-0)=796=			Pk=25	Total size:10
Job 32:	s=4	p=39	d=234	L=(869+-29-0)=840=			Pk=47	Total size:10
Job 33:	s=9	p=69	d=244	L=(928+-98-1055)=-225=			Pk=69	Total size:0
Job 34:	s=6	p=68	d=271	L=(969+-166-1055)=-252=			Pk=68	Total size:0
Job 35:	s=6	p=47	d=276	L=(1011+-213-1055)=-257=			Pk=47	Total size:0
Job 36:	s=3	p=53	d=281	L=(1059+-266-1055)=-262=			Pk=53	Total size:0
Job 37:	s=3	p=42	d=282	L=(1100+-308-1055)=-263=			Pk=42	Total size:0
Job 38:	s=10	p=61	d=283	L=(1160+-308-0)=852=			Pk=61	Total size:10
Job 39:	s=7	p=84	d=312	L=(1215+-392-1055)=-232=			Pk=84	Total size:0
Job 40:	s=5	p=60	d=331	L=(1256+-452-1055)=-251=			Pk=60	Total size:0
Job 41:	s=5	p=93	d=335	L=(1345+-452-0)=893=			Pk=93	Total size:10
Job 42:	s=8	p=56	d=351	L=(1385+-508-1055)=-178=			Pk=56	Total size:0
Job 43:	s=7	p=96	d=366	L=(1466+-604-1055)=-193=			Pk=96	Total size:0
Job 44:	s=8	p=77	d=379	L=(1530+-681-1055)=-206=			Pk=77	Total size:0
Job 45:	s=4	p=54	d=383	L=(1580+-735-1055)=-210=			Pk=54	Total size:0
Job 46:	s=4	p=92	d=389	L=(1666+-827-1055)=-216=			Pk=92	Total size:0
Job 47:	s=1	p=91	d=416	L=(1730+-918-1055)=-243=			Pk=91	Total size:0
Job 48:	s=5	p=83	d=430	L=(1799+-918-0)=881=			Pk=83	Total size:5

0
1.68966
893
8.2 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-03.csv
17
155
171
185
325
356
358
372
383
403
411
470
478
566
613
617
628
663
705
734
750
786
806
824
855
890
902
913
943
952
953
955
963
968
1016
1083
1105
1111
1116
1201
1205
1210
1238
1243
1243
1267
1281
1320
1355
1520
Job 0: due 17
Job 1: due 155
Job 2: due 171
Job 3: due 185
Job 4: due 325
Job 5: due 356
Job 6: due 358
Job 7: due 372
Job 8: due 383
Job 9: due 403
Job 10: due 411
Job 11: due 470
Job 12: due 478
Job 13: due 566
Job 14: due 613
Job 15: due 617
Job 16: due 628
Job 17: due 663
Job 18: due 705
Job 19: due 734
Job 20: due 750
Job 21: due 786
Job 22: due 806
Job 23: due 824
Job 24: due 855
Job 25: due 890
Job 26: due 902
Job 27: due 913
Job 28: due 943
Job 29: due 952
Job 30: due 953
Job 31: due 955
Job 32: due 963
Job 33: due 968
Job 34: due 1016
Job 35: due 1083
Job 36: due 1105
Job 37: due 1111
Job 38: due 1116
Job 39: due 1201
Job 40: due 1205
Job 41: due 1210
Job 42: due 1238
Job 43: due 1243
Job 44: due 1243
Job 45: due 1267
Job 46: due 1281
Job 47: due 1320
Job 48: due 1355
Job 49: due 1520
Ignore all jobs after 49
Lmaxinc before safe moves: 1102
Now using unsafety tolerance 0
New Lmaxincnew: 189
Difference: 913
Lmaxinc after safe moves: 35721
Initial solution:
0 1 2 3 4 5 6 7 1 9 10 11 12 1 14 9 16 17 10 17 20 21 21 23 24 5 26 1 9 21 30 5 23 12 34 1 36 1 4 39 40 41 42 23 34 36 46 47 48 
Updating LmaxLB to -15.2. C=1.8, d=17same duedate: 43
Updating LmaxLB to 15.0001. C=1335, d=1320Lower bound on Lmax based on areas:0
Max Lksingle:1102
Max reduction:1102
Now adding static psi-2-in-2 dominance rules ...
Added 767 safe move dominance lazy constraints
Added 270 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2921 rows and 1850 columns.
MIP Presolve modified 1752 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 733 rows, 595 columns, and 4144 nonzeros.
Reduced MIP has 545 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.01 sec.
Clique table members: 1264.
Problem contains 270 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0        0.0000    93                      0.0000      363         
      0     0        7.5566    80                    Cuts: 22      512         
      0     0       30.6438    85                    Cuts: 84      734         
      0     0       30.7079   113                    Cuts: 52      956         
      0     0       32.4560   124                    Cuts: 64     1046         
      0     0       33.7858   104                    Cuts: 58     1120         
      0     0       35.4588   114                    Cuts: 48     1167         
      0     0       36.7152   115                    Cuts: 32     1209         
      0     0       37.6233   121                    Cuts: 20     1279         
      0     0       37.8815   120                    Cuts: 46     1314         
      0     0       38.1017   130                    Cuts: 20     1335         
      0     0       38.1155   132                     Cuts: 2     1348         
      0     0       38.1411   118                 Impl Bds: 7     1357         
      0     0       38.1797   123                     Cuts: 9     1371         
      0     0       38.1816   121                Impl Bds: 11     1376         
      0     2       38.1816   122                     38.1860     1376         
Elapsed time =   0.52 sec. (tree size =  0.00 MB, solutions = 0)
    100    94       98.2845    65                     49.9627     6873         
    200   182      185.0000     2                     54.3688    10930         
*   204   172      integral     0      185.0000       54.3688    10941   70.61%
*   230+  196                          178.0000       56.1218    12213   68.47%
*   290+  229                          168.0000       58.2350    14524   65.34%
    300   241       88.2434    62      168.0000       58.2350    15017   65.34%
    400   326      106.3205    63      168.0000       59.7852    18967   64.41%
    500   413      125.6268    42      168.0000       60.1174    23719   64.22%
*   508+  280                          160.0000      110.3248    24934   31.05%
*   528+  200                          134.0000      111.0501    25933   17.13%
    600   201      129.9762    37      134.0000      112.0546    27419   16.38%
    700   211      124.2923    53      134.0000      114.1570    30258   14.81%
    800   232      127.3004    35      134.0000      114.8319    32438   14.30%
    900   269      128.0000    39      134.0000      116.3594    35517   13.16%
Elapsed time =   4.45 sec. (tree size =  0.16 MB, solutions = 5)
   1000   329      124.1627    56      134.0000      117.9089    37663   12.01%
   1100   376      132.1760    54      134.0000      119.9190    40563   10.51%
*  1158+  358                          132.0000      120.5390    42031    8.68%
   1200   368      130.7712    57      132.0000      122.2573    43459    7.38%
   1300   323      130.3333    21      132.0000      124.3512    46486    5.79%
   1400   330      130.0846    27      132.0000      125.1657    48812    5.18%
   1500   272      131.8638    40      132.0000      126.8571    50848    3.90%
   1600   243      131.6089    39      132.0000      128.0000    52731    3.03%
   1700   196        cutoff            132.0000      129.1367    54405    2.17%
   1800   104        cutoff            132.0000      130.5264    55427    1.12%
   1900    13        cutoff            132.0000      131.7030    55934    0.22%
Elapsed time =   5.99 sec. (tree size =  0.02 MB, solutions = 6)

Clique cuts applied:  17
Cover cuts applied:  85
Implied bound cuts applied:  94
Flow cuts applied:  15
Mixed integer rounding cuts applied:  22
Zero-half cuts applied:  42
Gomory fractional cuts applied:  5
Lazy constraints applied:  21
Optimal
Lmax: 132
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 1
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 5
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 10
Job 19 into batch 17
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 15
Job 23 into batch 8
Job 24 into batch 24
Job 25 into batch 8
Job 26 into batch 26
Job 27 into batch 13
Job 28 into batch 21
Job 29 into batch 21
Job 30 into batch 30
Job 31 into batch 26
Job 32 into batch 32
Job 33 into batch 9
Job 34 into batch 15
Job 35 into batch 24
Job 36 into batch 36
Job 37 into batch 2
Job 38 into batch 6
Job 39 into batch 39
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 42
Job 44 into batch 36
Job 45 into batch 13
Job 46 into batch 32
Job 47 into batch 47
Job 48 into batch 48
Job 0:	s=9	p=2	d=17	L=(-15+0-0)=-15=			Pk=2	Total size:9
Job 1:	s=1	p=30	d=155	L=(-123+58-0)=-65=			Pk=89	Total size:10
Job 2:	s=9	p=49	d=171	L=(-90+58-0)=-32=			Pk=49	Total size:10
Job 3:	s=10	p=44	d=185	L=(-60+58-0)=-2=			Pk=44	Total size:10
Job 4:	s=9	p=89	d=325	L=(-111+-31-189)=-331=			Pk=89	Total size:0
Job 5:	s=5	p=68	d=356	L=(-74+-13-0)=-87=			Pk=86	Total size:10
Job 6:	s=9	p=75	d=358	L=(-1+-13-0)=-14=			Pk=75	Total size:10
Job 7:	s=9	p=13	d=372	L=(-2+-13-0)=-15=			Pk=13	Total size:9
Job 8:	s=1	p=28	d=383	L=(15+12-0)=27=			Pk=53	Total size:9
Job 9:	s=6	p=98	d=403	L=(93+12-0)=105=			Pk=98	Total size:10
Job 10:	s=4	p=15	d=411	L=(100+12-0)=112=			Pk=15	Total size:10
Job 11:	s=9	p=18	d=470	L=(59+12-0)=71=			Pk=18	Total size:9
Job 12:	s=5	p=86	d=478	L=(137+-74-189)=-126=			Pk=86	Total size:0
Job 13:	s=2	p=21	d=566	L=(70+-60-0)=10=			Pk=35	Total size:10
Job 14:	s=10	p=13	d=613	L=(36+-60-0)=-24=			Pk=13	Total size:10
Job 15:	s=2	p=77	d=617	L=(109+-55-0)=54=			Pk=82	Total size:10
Job 16:	s=10	p=23	d=628	L=(121+-55-0)=66=			Pk=23	Total size:10
Job 17:	s=6	p=95	d=663	L=(181+-55-0)=126=			Pk=95	Total size:10
Job 18:	s=6	p=15	d=705	L=(154+-70-189)=-105=			Pk=15	Total size:0
Job 19:	s=4	p=78	d=734	L=(203+-148-189)=-134=			Pk=78	Total size:0
Job 20:	s=9	p=11	d=750	L=(198+-148-0)=50=			Pk=11	Total size:9
Job 21:	s=6	p=93	d=786	L=(255+-148-0)=107=			Pk=93	Total size:10
Job 22:	s=2	p=74	d=806	L=(309+-222-189)=-102=			Pk=74	Total size:0
Job 23:	s=5	p=46	d=824	L=(337+-268-189)=-120=			Pk=46	Total size:0
Job 24:	s=9	p=28	d=855	L=(334+-268-0)=66=			Pk=28	Total size:10
Job 25:	s=3	p=53	d=890	L=(352+-321-189)=-158=			Pk=53	Total size:0
Job 26:	s=9	p=57	d=902	L=(397+-321-0)=76=			Pk=57	Total size:10
Job 27:	s=4	p=28	d=913	L=(414+-349-189)=-124=			Pk=28	Total size:0
Job 28:	s=2	p=89	d=943	L=(473+-438-189)=-154=			Pk=89	Total size:0
Job 29:	s=2	p=70	d=952	L=(534+-508-189)=-163=			Pk=70	Total size:0
Job 30:	s=9	p=34	d=953	L=(567+-508-0)=59=			Pk=34	Total size:9
Job 31:	s=1	p=53	d=955	L=(618+-561-189)=-132=			Pk=53	Total size:0
Job 32:	s=3	p=6	d=963	L=(616+-549-0)=67=			Pk=18	Total size:10
Job 33:	s=4	p=86	d=968	L=(697+-635-189)=-127=			Pk=86	Total size:0
Job 34:	s=6	p=82	d=1016	L=(731+-717-189)=-175=			Pk=82	Total size:0
Job 35:	s=1	p=23	d=1083	L=(687+-740-189)=-242=			Pk=23	Total size:0
Job 36:	s=6	p=95	d=1105	L=(760+-740-0)=20=			Pk=95	Total size:9
Job 37:	s=1	p=31	d=1111	L=(785+-771-189)=-175=			Pk=31	Total size:0
Job 38:	s=1	p=58	d=1116	L=(838+-829-189)=-180=			Pk=58	Total size:0
Job 39:	s=6	p=19	d=1201	L=(772+-829-0)=-57=			Pk=19	Total size:6
Job 40:	s=9	p=97	d=1205	L=(865+-829-0)=36=			Pk=97	Total size:9
Job 41:	s=9	p=71	d=1210	L=(931+-829-0)=102=			Pk=71	Total size:9
Job 42:	s=8	p=41	d=1238	L=(944+-829-0)=115=			Pk=41	Total size:10
Job 43:	s=2	p=39	d=1243	L=(978+-868-189)=-79=			Pk=39	Total size:0
Job 44:	s=3	p=50	d=1243	L=(1028+-918-189)=-79=			Pk=50	Total size:0
Job 45:	s=4	p=35	d=1267	L=(1039+-953-189)=-103=			Pk=35	Total size:0
Job 46:	s=7	p=18	d=1281	L=(1043+-971-189)=-117=			Pk=18	Total size:0
Job 47:	s=10	p=96	d=1320	L=(1100+-971-0)=129=			Pk=96	Total size:10
Job 48:	s=7	p=37	d=1355	L=(1102+-971-0)=131=			Pk=37	Total size:7

0
1.68966
132
6.24 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-04.csv
99
119
128
216
263
322
328
329
422
442
470
486
487
531
548
550
551
581
623
672
710
728
744
765
813
827
831
863
884
890
894
903
912
943
944
994
1017
1025
1027
1046
1086
1099
1170
1229
1250
1259
1328
1341
1557
1606
Job 0: due 99
Job 1: due 119
Job 2: due 128
Job 3: due 216
Job 4: due 263
Job 5: due 322
Job 6: due 328
Job 7: due 329
Job 8: due 422
Job 9: due 442
Job 10: due 470
Job 11: due 486
Job 12: due 487
Job 13: due 531
Job 14: due 548
Job 15: due 550
Job 16: due 551
Job 17: due 581
Job 18: due 623
Job 19: due 672
Job 20: due 710
Job 21: due 728
Job 22: due 744
Job 23: due 765
Job 24: due 813
Job 25: due 827
Job 26: due 831
Job 27: due 863
Job 28: due 884
Job 29: due 890
Job 30: due 894
Job 31: due 903
Job 32: due 912
Job 33: due 943
Job 34: due 944
Job 35: due 994
Job 36: due 1017
Job 37: due 1025
Job 38: due 1027
Job 39: due 1046
Job 40: due 1086
Job 41: due 1099
Job 42: due 1170
Job 43: due 1229
Job 44: due 1250
Job 45: due 1259
Job 46: due 1328
Job 47: due 1341
Job 48: due 1557
Job 49: due 1606
Ignore all jobs after 48
Lmaxinc before safe moves: 1038
Now using unsafety tolerance 0
New Lmaxincnew: 141
Difference: 897
Lmaxinc after safe moves: 19881
Initial solution:
0 1 2 3 4 5 0 7 8 9 10 11 12 1 11 15 9 17 15 19 15 21 10 3 2 21 26 11 28 29 8 31 9 31 34 12 2 37 10 1 10 41 4 9 44 45 46 47 
Updating LmaxLB to -74.5. C=24.5, d=99Updating LmaxLB to -62. C=57, d=119Lower bound on Lmax based on areas:-2147483648
Max Lksingle:1038
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 699 safe move dominance lazy constraints
Added 308 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2617 rows and 1656 columns.
MIP Presolve modified 1751 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 886 rows, 695 columns, and 4741 nonzeros.
Reduced MIP has 646 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.03 sec.
Probing time =    0.00 sec.
Clique table members: 1669.
Problem contains 308 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      -34.0000   133                    -34.0000      422         
      0     0      -34.0000    51                    Cuts: 15      480         
      0     0      -34.0000   100                    Cuts: 50      732         
      0     0      -34.0000    69                    Cuts: 10      843         
      0     0      -34.0000    78                    Cuts: 48     1024         
*     0+    0                          126.0000      -34.0000     1024  126.98%
      0     2      -34.0000    77      126.0000      -34.0000     1024  126.98%
Elapsed time =   0.47 sec. (tree size =  0.00 MB, solutions = 1)
*    10+   10                          107.0000      -34.0000     3411  131.78%
    100    99       97.9578    25      107.0000      -34.0000     9479  131.78%
    200   176       58.3125    44      107.0000      -33.5167    14021  131.32%
    300   265       21.0000    58      107.0000      -32.5822    17590  130.45%
*   360+  269                           85.0000      -32.5822    19488  138.33%
    400   304       24.4237    47       85.0000      -28.7577    21156  133.83%
*   460+  327                           74.0000      -27.4518    23062  137.10%
*   460+  315                           72.0000      -27.4518    23062  138.13%
    500   349       64.6435    44       72.0000      -26.6599    25059  137.03%
    600   427       20.0344    37       72.0000        0.1711    31357   99.76%
*   670+  318                           51.0000        0.4200    32896   99.18%
    700   323       42.9821    36       51.0000        0.4200    33607   99.18%
*   729   124      integral     0       22.0000        0.9594    34798   95.64%
    800   138       14.9253    70       22.0000        3.9138    37849   82.21%
*   829+  127                           21.0000        4.6937    38808   77.65%
    900   155        cutoff             21.0000        7.5986    41898   63.82%
Elapsed time =   7.90 sec. (tree size =  0.12 MB, solutions = 8)
*   979   136      integral     0       20.0000       10.1829    48045   49.09%
   1000   138        cutoff             20.0000       10.4516    49076   47.74%
   1100   108        cutoff             20.0000       15.6069    52900   21.97%
   1200    38        cutoff             20.0000       18.7120    55199    6.44%

Clique cuts applied:  15
Cover cuts applied:  85
Implied bound cuts applied:  58
Flow cuts applied:  8
Mixed integer rounding cuts applied:  50
Zero-half cuts applied:  19
Gomory fractional cuts applied:  4
Lazy constraints applied:  26
Optimal
Lmax: 20
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 2
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 1
Job 7 into batch 7
Job 8 into batch 0
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 10
Job 13 into batch 11
Job 14 into batch 14
Job 15 into batch 14
Job 16 into batch 9
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 18
Job 20 into batch 20
Job 21 into batch 9
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 23
Job 25 into batch 14
Job 26 into batch 22
Job 27 into batch 20
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 20
Job 31 into batch 31
Job 32 into batch 31
Job 33 into batch 31
Job 34 into batch 34
Job 35 into batch 2
Job 36 into batch 5
Job 37 into batch 37
Job 38 into batch 29
Job 39 into batch 31
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 4
Job 43 into batch 40
Job 44 into batch 44
Job 45 into batch 45
Job 46 into batch 46
Job 47 into batch 47
Job 0:	s=5	p=49	d=99	L=(-50+0-0)=-50=			Pk=49	Total size:10
Job 1:	s=5	p=65	d=119	L=(-5+0-0)=-5=			Pk=65	Total size:10
Job 2:	s=3	p=12	d=128	L=(-2+16-0)=14=			Pk=28	Total size:10
Job 3:	s=5	p=28	d=216	L=(-62+-11-141)=-214=			Pk=28	Total size:0
Job 4:	s=8	p=28	d=263	L=(-81+-11-0)=-92=			Pk=28	Total size:10
Job 5:	s=9	p=15	d=322	L=(-125+-11-0)=-136=			Pk=15	Total size:10
Job 6:	s=5	p=50	d=328	L=(-81+-61-141)=-283=			Pk=50	Total size:0
Job 7:	s=10	p=55	d=329	L=(-27+-61-0)=-88=			Pk=55	Total size:10
Job 8:	s=5	p=48	d=422	L=(-72+-109-141)=-322=			Pk=48	Total size:0
Job 9:	s=4	p=98	d=442	L=(6+-109-0)=-103=			Pk=98	Total size:10
Job 10:	s=2	p=72	d=470	L=(50+-106-1.56541e-14)=-56=			Pk=75	Total size:10
Job 11:	s=7	p=77	d=486	L=(111+-106-0)=5=			Pk=77	Total size:10
Job 12:	s=8	p=75	d=487	L=(185+-181-141)=-137=			Pk=75	Total size:0
Job 13:	s=3	p=65	d=531	L=(206+-246-141)=-181=			Pk=65	Total size:0
Job 14:	s=1	p=78	d=548	L=(267+-246-0)=21=			Pk=78	Total size:10
Job 15:	s=4	p=51	d=550	L=(316+-297-141)=-122=			Pk=51	Total size:0
Job 16:	s=1	p=80	d=551	L=(395+-377-141)=-123=			Pk=80	Total size:0
Job 17:	s=10	p=25	d=581	L=(390+-377-0)=13=			Pk=25	Total size:10
Job 18:	s=3	p=8	d=623	L=(356+-377-0)=-21=			Pk=8	Total size:7
Job 19:	s=4	p=1	d=672	L=(308+-378-141)=-211=			Pk=1	Total size:0
Job 20:	s=3	p=38	d=710	L=(308+-369-0)=-61=			Pk=47	Total size:10
Job 21:	s=5	p=93	d=728	L=(383+-462-141)=-220=			Pk=93	Total size:0
Job 22:	s=2	p=56	d=744	L=(423+-443-0)=-20=			Pk=75	Total size:10
Job 23:	s=4	p=17	d=765	L=(419+-443-0)=-24=			Pk=17	Total size:9
Job 24:	s=5	p=13	d=813	L=(384+-456-141)=-213=			Pk=13	Total size:0
Job 25:	s=5	p=77	d=827	L=(447+-533-141)=-227=			Pk=77	Total size:0
Job 26:	s=8	p=75	d=831	L=(518+-608-141)=-231=			Pk=75	Total size:0
Job 27:	s=2	p=15	d=863	L=(501+-623-141)=-263=			Pk=15	Total size:0
Job 28:	s=10	p=22	d=884	L=(502+-623-0)=-121=			Pk=22	Total size:10
Job 29:	s=9	p=71	d=890	L=(567+-623-0)=-56=			Pk=71	Total size:10
Job 30:	s=5	p=47	d=894	L=(610+-670-141)=-201=			Pk=47	Total size:0
Job 31:	s=4	p=76	d=903	L=(677+-656-0)=21=			Pk=90	Total size:10
Job 32:	s=1	p=90	d=912	L=(758+-746-141)=-129=			Pk=90	Total size:0
Job 33:	s=3	p=75	d=943	L=(802+-821-141)=-160=			Pk=75	Total size:0
Job 34:	s=7	p=18	d=944	L=(819+-821-0)=-2=			Pk=18	Total size:7
Job 35:	s=2	p=5	d=994	L=(774+-826-141)=-193=			Pk=5	Total size:0
Job 36:	s=1	p=8	d=1017	L=(759+-834-141)=-216=			Pk=8	Total size:0
Job 37:	s=9	p=20	d=1025	L=(771+-834-0)=-63=			Pk=20	Total size:9
Job 38:	s=1	p=56	d=1027	L=(825+-890-141)=-206=			Pk=56	Total size:0
Job 39:	s=2	p=66	d=1046	L=(872+-956-141)=-225=			Pk=66	Total size:0
Job 40:	s=5	p=73	d=1086	L=(905+-930-0)=-25=			Pk=99	Total size:9
Job 41:	s=9	p=33	d=1099	L=(925+-930-0)=-5=			Pk=33	Total size:9
Job 42:	s=2	p=16	d=1170	L=(870+-946-141)=-217=			Pk=16	Total size:0
Job 43:	s=4	p=99	d=1229	L=(910+-1045-141)=-276=			Pk=99	Total size:0
Job 44:	s=10	p=81	d=1250	L=(970+-1045-0)=-75=			Pk=81	Total size:10
Job 45:	s=7	p=38	d=1259	L=(999+-1045-0)=-46=			Pk=38	Total size:7
Job 46:	s=9	p=72	d=1328	L=(1002+-1045-0)=-43=			Pk=72	Total size:9
Job 47:	s=9	p=49	d=1341	L=(1038+-1045-0)=-7=			Pk=49	Total size:9

-2147483648
1.84615
20
9.45 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-05.csv
11
23
46
95
97
110
124
139
145
146
149
155
157
159
160
160
162
170
177
177
180
181
185
200
200
208
213
214
215
219
222
232
234
235
243
253
254
258
261
265
266
274
282
287
305
305
314
333
339
364
Job 0: due 11
Job 1: due 23
Job 2: due 46
Job 3: due 95
Job 4: due 97
Job 5: due 110
Job 6: due 124
Job 7: due 139
Job 8: due 145
Job 9: due 146
Job 10: due 149
Job 11: due 155
Job 12: due 157
Job 13: due 159
Job 14: due 160
Job 15: due 160
Job 16: due 162
Job 17: due 170
Job 18: due 177
Job 19: due 177
Job 20: due 180
Job 21: due 181
Job 22: due 185
Job 23: due 200
Job 24: due 200
Job 25: due 208
Job 26: due 213
Job 27: due 214
Job 28: due 215
Job 29: due 219
Job 30: due 222
Job 31: due 232
Job 32: due 234
Job 33: due 235
Job 34: due 243
Job 35: due 253
Job 36: due 254
Job 37: due 258
Job 38: due 261
Job 39: due 265
Job 40: due 266
Job 41: due 274
Job 42: due 282
Job 43: due 287
Job 44: due 305
Job 45: due 305
Job 46: due 314
Job 47: due 333
Job 48: due 339
Job 49: due 364
Ignore all jobs after 50
Lmaxinc before safe moves: 2683
Now using unsafety tolerance 0
New Lmaxincnew: 1624
Difference: 1059
Lmaxinc after safe moves: 2.63738e+06
Initial solution:
0 1 2 3 0 5 6 7 0 9 9 11 12 7 14 15 16 17 6 7 20 21 22 23 24 25 15 27 5 27 30 31 32 11 34 35 36 22 30 32 40 24 42 43 34 5 24 47 48 49 
Updating LmaxLB to -10.4. C=0.6, d=11Updating LmaxLB to -7.2. C=102.8, d=110Updating LmaxLB to 5.8. C=129.8, d=124Updating LmaxLB to 37.2. C=176.2, d=139Updating LmaxLB to 40.2. C=186.2, d=146Updating LmaxLB to 51.2. C=200.2, d=149Updating LmaxLB to 112.4. C=267.4, d=155Updating LmaxLB to 186.4. C=343.4, d=157Updating LmaxLB to 189.5. C=348.5, d=159same duedate: 14
Updating LmaxLB to 223.2. C=383.2, d=160Updating LmaxLB to 224.4. C=386.4, d=162Updating LmaxLB to 254.2. C=424.2, d=170same duedate: 18
Updating LmaxLB to 256.2. C=433.2, d=177Updating LmaxLB to 265.2. C=445.2, d=180Updating LmaxLB to 324.2. C=505.2, d=181Updating LmaxLB to 370.6. C=555.6, d=185same duedate: 23
Updating LmaxLB to 385.5. C=585.5, d=200Updating LmaxLB to 451.9. C=659.9, d=208Updating LmaxLB to 481.9. C=694.9, d=213Updating LmaxLB to 538.3. C=752.3, d=214Updating LmaxLB to 545.4. C=760.4, d=215Updating LmaxLB to 562.4. C=781.4, d=219Updating LmaxLB to 595.8. C=817.8, d=222Updating LmaxLB to 623. C=855, d=232Updating LmaxLB to 669.5. C=903.5, d=234Updating LmaxLB to 674.7. C=909.7, d=235Updating LmaxLB to 706.9. C=949.9, d=243Updating LmaxLB to 731.1. C=984.1, d=253Updating LmaxLB to 800.1. C=1054.1, d=254Updating LmaxLB to 828.5. C=1086.5, d=258Updating LmaxLB to 867. C=1128, d=261Updating LmaxLB to 901. C=1166, d=265Updating LmaxLB to 969. C=1235, d=266Updating LmaxLB to 1020.4. C=1294.4, d=274Updating LmaxLB to 1086. C=1368, d=282Updating LmaxLB to 1145. C=1432, d=287same duedate: 44
Updating LmaxLB to 1156. C=1461, d=305Updating LmaxLB to 1171.3. C=1485.3, d=314Updating LmaxLB to 1221.6. C=1554.6, d=333Updating LmaxLB to 1276.5. C=1615.5, d=339Updating LmaxLB to 1315.2. C=1679.2, d=364Lower bound on Lmax based on areas:0
Max Lksingle:2683
Max reduction:2683
Now adding static psi-2-in-2 dominance rules ...
Added 188 safe move dominance lazy constraints
Added 141 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2880 rows and 1906 columns.
MIP Presolve modified 2360 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 918 rows, 642 columns, and 3606 nonzeros.
Reduced MIP has 591 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.01 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 946.
Problem contains 141 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0     1001.7103   165                   1001.7103      469         
      0     0     1103.0751   160                   Cuts: 147      756         
      0     0     1171.2651   171                   Cuts: 157      986         
      0     0     1209.9313   167                   Cuts: 133     1198         
      0     0     1231.2978   172                   Cuts: 109     1308         
      0     0     1248.1245   169                    Cuts: 94     1427         
      0     0     1253.1123   172                    Cuts: 94     1478         
      0     0     1259.2148   175                    Cuts: 68     1538         
      0     0     1261.9202   190                    Cuts: 43     1600         
      0     0     1263.1194   205                    Cuts: 70     1626         
      0     0     1264.8879   205                    Cuts: 46     1647         
      0     0     1265.1941   198                    Cuts: 26     1666         
      0     0     1265.3070   207                    Cuts: 21     1679         
      0     0     1265.5701   202                    Cuts: 12     1692         
      0     0     1266.2118   200                    Cuts: 28     1707         
      0     0     1266.2960   198                    Cuts: 15     1715         
*     0+    0                         1605.0000     1266.2960     1715   21.10%
      0     2     1266.2960   197     1605.0000     1266.2995     1715   21.10%
Elapsed time =   0.53 sec. (tree size =  0.00 MB, solutions = 1)
    100    96     1301.7369   145     1605.0000     1266.8677     6362   21.07%
    200   187     1440.0569    88     1605.0000     1271.3408    11463   20.79%
    300   277     1428.0326    51     1605.0000     1278.3360    17072   20.35%
    400   368     1409.5054   110     1605.0000     1278.8488    22545   20.32%
    500   459     1402.8522    97     1605.0000     1279.0642    27309   20.31%
*   525+  321                         1570.0000     1483.1857    29231    5.53%
*   525+  213                         1550.0000     1483.6477    29353    4.28%
*   525+  141                         1549.0000     1483.8272    29381    4.21%
*   525+   93                         1515.0000     1484.4516    29556    2.02%
*   525+   61                         1507.0000     1484.4516    29556    1.50%
*   565+   49                         1504.0000     1487.8241    31128    1.08%
*   583    40      integral     0     1503.0000     1487.8241    31602    1.01%
    600    41     1493.7934    55     1503.0000     1487.8943    32308    1.01%
    700   104     1499.2437    19     1503.0000     1489.4486    36343    0.90%
    800   142        cutoff           1503.0000     1491.6856    40521    0.75%
    900   185     1500.6667    31     1503.0000     1494.0000    44995    0.60%
Elapsed time =   6.86 sec. (tree size =  0.37 MB, solutions = 8)
   1000   213        cutoff           1503.0000     1495.2202    48938    0.52%
*  1056   204      integral     0     1502.0000     1496.0000    50954    0.40%
   1100   218        cutoff           1502.0000     1496.3008    52924    0.38%
   1200   176        cutoff           1502.0000     1498.4286    56014    0.24%
   1300   107        cutoff           1502.0000     1500.0000    59656    0.13%
   1400    16        cutoff           1502.0000     1501.7687    60787    0.02%

Clique cuts applied:  6
Cover cuts applied:  37
Implied bound cuts applied:  189
Flow cuts applied:  32
Mixed integer rounding cuts applied:  55
Zero-half cuts applied:  46
Gomory fractional cuts applied:  11
Lazy constraints applied:  19
Optimal
Lmax: 1502
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 1
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 5
Job 9 into batch 7
Job 10 into batch 6
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 11
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 0
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 11
Job 29 into batch 27
Job 30 into batch 30
Job 31 into batch 19
Job 32 into batch 24
Job 33 into batch 15
Job 34 into batch 15
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 22
Job 38 into batch 26
Job 39 into batch 24
Job 40 into batch 40
Job 41 into batch 30
Job 42 into batch 42
Job 43 into batch 18
Job 44 into batch 19
Job 45 into batch 5
Job 46 into batch 46
Job 47 into batch 47
Job 48 into batch 46
Job 49 into batch 49
Job 0:	s=2	p=3	d=11	L=(-8+50-0)=42=			Pk=54	Total size:9
Job 1:	s=6	p=7	d=23	L=(-13+50-0)=37=			Pk=7	Total size:10
Job 2:	s=8	p=12	d=46	L=(-24+50-0)=26=			Pk=12	Total size:8
Job 3:	s=9	p=16	d=95	L=(-57+50-0)=-7=			Pk=16	Total size:9
Job 4:	s=4	p=1	d=97	L=(-58+49-1624)=-1633=			Pk=1	Total size:0
Job 5:	s=8	p=92	d=110	L=(21+49-0)=70=			Pk=92	Total size:10
Job 6:	s=6	p=45	d=124	L=(52+49-0)=101=			Pk=45	Total size:10
Job 7:	s=8	p=58	d=139	L=(95+49-0)=144=			Pk=58	Total size:10
Job 8:	s=1	p=4	d=145	L=(93+45-1624)=-1486=			Pk=4	Total size:0
Job 9:	s=2	p=48	d=146	L=(140+-3-1624)=-1487=			Pk=48	Total size:0
Job 10:	s=4	p=35	d=149	L=(172+-38-1624)=-1490=			Pk=35	Total size:0
Job 11:	s=8	p=84	d=155	L=(250+-38-0)=212=			Pk=84	Total size:10
Job 12:	s=10	p=76	d=157	L=(324+-38-0)=286=			Pk=76	Total size:10
Job 13:	s=1	p=51	d=159	L=(373+-89-1624)=-1340=			Pk=51	Total size:0
Job 14:	s=7	p=20	d=160	L=(392+-89-0)=303=			Pk=20	Total size:7
Job 15:	s=3	p=69	d=160	L=(461+-89-0)=372=			Pk=69	Total size:10
Job 16:	s=8	p=4	d=162	L=(463+-89-0)=374=			Pk=4	Total size:8
Job 17:	s=7	p=54	d=170	L=(509+-143-1624)=-1258=			Pk=54	Total size:0
Job 18:	s=1	p=43	d=177	L=(545+-106-0)=439=			Pk=80	Total size:9
Job 19:	s=1	p=47	d=177	L=(592+-87-0)=505=			Pk=66	Total size:10
Job 20:	s=5	p=24	d=180	L=(613+-87-0)=526=			Pk=24	Total size:5
Job 21:	s=8	p=75	d=181	L=(687+-87-0)=600=			Pk=75	Total size:8
Job 22:	s=6	p=84	d=185	L=(767+-87-0)=680=			Pk=84	Total size:10
Job 23:	s=10	p=20	d=200	L=(772+-87-0)=685=			Pk=20	Total size:10
Job 24:	s=1	p=99	d=200	L=(871+-87-0)=784=			Pk=99	Total size:10
Job 25:	s=8	p=93	d=208	L=(956+-87-0)=869=			Pk=93	Total size:8
Job 26:	s=5	p=70	d=213	L=(1021+-74-0)=947=			Pk=83	Total size:10
Job 27:	s=7	p=82	d=214	L=(1102+-74-0)=1028=			Pk=82	Total size:10
Job 28:	s=1	p=81	d=215	L=(1182+-155-1624)=-597=			Pk=81	Total size:0
Job 29:	s=3	p=70	d=219	L=(1248+-225-1624)=-601=			Pk=70	Total size:0
Job 30:	s=4	p=91	d=222	L=(1336+-217-0)=1119=			Pk=99	Total size:10
Job 31:	s=6	p=62	d=232	L=(1388+-279-1624)=-515=			Pk=62	Total size:0
Job 32:	s=5	p=97	d=234	L=(1483+-376-1624)=-517=			Pk=97	Total size:0
Job 33:	s=1	p=62	d=235	L=(1544+-438-1624)=-518=			Pk=62	Total size:0
Job 34:	s=6	p=67	d=243	L=(1603+-505-1624)=-526=			Pk=67	Total size:0
Job 35:	s=9	p=38	d=253	L=(1631+-505-0)=1126=			Pk=38	Total size:9
Job 36:	s=10	p=70	d=254	L=(1700+-505-0)=1195=			Pk=70	Total size:10
Job 37:	s=4	p=81	d=258	L=(1777+-586-1624)=-433=			Pk=81	Total size:0
Job 38:	s=5	p=83	d=261	L=(1857+-669-1624)=-436=			Pk=83	Total size:0
Job 39:	s=4	p=95	d=265	L=(1948+-764-1624)=-440=			Pk=95	Total size:0
Job 40:	s=10	p=69	d=266	L=(2016+-764-0)=1252=			Pk=69	Total size:10
Job 41:	s=6	p=99	d=274	L=(2107+-863-1624)=-380=			Pk=99	Total size:0
Job 42:	s=8	p=92	d=282	L=(2191+-863-0)=1328=			Pk=92	Total size:8
Job 43:	s=8	p=80	d=287	L=(2266+-943-1624)=-301=			Pk=80	Total size:0
Job 44:	s=3	p=66	d=305	L=(2314+-1009-1624)=-319=			Pk=66	Total size:0
Job 45:	s=1	p=92	d=305	L=(2406+-1101-1624)=-319=			Pk=92	Total size:0
Job 46:	s=3	p=81	d=314	L=(2478+-1095-0)=1383=			Pk=87	Total size:10
Job 47:	s=9	p=77	d=333	L=(2536+-1095-0)=1441=			Pk=77	Total size:9
Job 48:	s=7	p=87	d=339	L=(2617+-1182-1624)=-189=			Pk=87	Total size:0
Job 49:	s=7	p=91	d=364	L=(2683+-1182-0)=1501=			Pk=91	Total size:7

0
1.66667
1502
8.37 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-06.csv
37
57
58
66
66
67
84
102
105
110
115
117
119
120
135
139
154
155
162
164
185
203
209
210
239
243
257
267
270
273
279
296
299
304
310
324
324
347
350
353
369
383
385
389
445
450
470
482
510
529
Job 0: due 37
Job 1: due 57
Job 2: due 58
Job 3: due 66
Job 4: due 66
Job 5: due 67
Job 6: due 84
Job 7: due 102
Job 8: due 105
Job 9: due 110
Job 10: due 115
Job 11: due 117
Job 12: due 119
Job 13: due 120
Job 14: due 135
Job 15: due 139
Job 16: due 154
Job 17: due 155
Job 18: due 162
Job 19: due 164
Job 20: due 185
Job 21: due 203
Job 22: due 209
Job 23: due 210
Job 24: due 239
Job 25: due 243
Job 26: due 257
Job 27: due 267
Job 28: due 270
Job 29: due 273
Job 30: due 279
Job 31: due 296
Job 32: due 299
Job 33: due 304
Job 34: due 310
Job 35: due 324
Job 36: due 324
Job 37: due 347
Job 38: due 350
Job 39: due 353
Job 40: due 369
Job 41: due 383
Job 42: due 385
Job 43: due 389
Job 44: due 445
Job 45: due 450
Job 46: due 470
Job 47: due 482
Job 48: due 510
Job 49: due 529
Ignore all jobs after 50
Lmaxinc before safe moves: 2102
Now using unsafety tolerance 0
New Lmaxincnew: 1339
Difference: 763
Lmaxinc after safe moves: 1.79292e+06
Initial solution:
0 0 2 3 4 2 3 7 4 9 10 11 12 13 14 14 11 17 18 19 20 21 22 21 24 25 26 27 18 10 13 31 32 33 24 14 36 37 38 36 40 36 18 43 44 45 36 47 48 49 
Updating LmaxLB to -34.6. C=2.4, d=37same duedate: 3
Updating LmaxLB to -32.2. C=84.8, d=117Updating LmaxLB to -27.2. C=91.8, d=119Updating LmaxLB to 17.7. C=137.7, d=120Updating LmaxLB to 62.7. C=197.7, d=135Updating LmaxLB to 63.4. C=202.4, d=139Updating LmaxLB to 77. C=232, d=155Updating LmaxLB to 85.8. C=247.8, d=162Updating LmaxLB to 142.3. C=306.3, d=164Updating LmaxLB to 173.3. C=358.3, d=185Updating LmaxLB to 194.5. C=397.5, d=203Updating LmaxLB to 206.5. C=415.5, d=209Updating LmaxLB to 218.4. C=428.4, d=210Updating LmaxLB to 219.9. C=458.9, d=239Updating LmaxLB to 295.9. C=538.9, d=243Updating LmaxLB to 315.4. C=572.4, d=257Updating LmaxLB to 389.4. C=656.4, d=267Updating LmaxLB to 397.2. C=667.2, d=270Updating LmaxLB to 405.8. C=678.8, d=273Updating LmaxLB to 427.5. C=723.5, d=296Updating LmaxLB to 493.8. C=792.8, d=299Updating LmaxLB to 570.8. C=874.8, d=304Updating LmaxLB to 587.6. C=897.6, d=310same duedate: 35
Updating LmaxLB to 627.8. C=951.8, d=324Updating LmaxLB to 635.4. C=982.4, d=347Updating LmaxLB to 678.6. C=1028.6, d=350Updating LmaxLB to 691.8. C=1044.8, d=353Updating LmaxLB to 708.8. C=1077.8, d=369Updating LmaxLB to 745.8. C=1130.8, d=385Updating LmaxLB to 821.8. C=1210.8, d=389Updating LmaxLB to 849.5. C=1294.5, d=445Updating LmaxLB to 934.5. C=1384.5, d=450Updating LmaxLB to 952.9. C=1434.9, d=482Updating LmaxLB to 1013.9. C=1523.9, d=510Updating LmaxLB to 1034.1. C=1563.1, d=529Lower bound on Lmax based on areas:0
Max Lksingle:2102
Max reduction:2102
Now adding static psi-2-in-2 dominance rules ...
Added 50 safe move dominance lazy constraints
Added 74 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2969 rows and 1948 columns.
MIP Presolve modified 2592 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 899 rows, 599 columns, and 2911 nonzeros.
Reduced MIP has 548 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.01 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1413.
Problem contains 74 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      759.2202   166                    759.2202      449         
      0     0      801.3622   149                   Cuts: 156      662         
      0     0      833.1889   152                   Cuts: 174      910         
      0     0      863.4336   168                   Cuts: 158     1097         
      0     0      872.1081   166                   Cuts: 110     1222         
      0     0      875.6660   182                    Cuts: 96     1305         
      0     0      876.8211   172                    Cuts: 99     1349         
      0     0      877.8436   173                   Cuts: 106     1413         
      0     0      879.0876   170                    Cuts: 47     1461         
      0     0      879.2854   166                    Cuts: 30     1486         
      0     0      879.8449   167                    Cuts: 52     1523         
      0     0      880.3308   165                    Cuts: 81     1547         
      0     0      880.4342   175                    Cuts: 57     1563         
      0     0      880.4345   172                 Impl Bds: 6     1565         
*     0+    0                         1256.0000      880.4345     1565   29.90%
      0     2      880.4345   171     1256.0000      880.5065     1565   29.90%
Elapsed time =   0.56 sec. (tree size =  0.00 MB, solutions = 1)
*    70+   70                         1253.0000      884.4572     5670   29.41%
    100    97      935.3496   136     1253.0000      888.9398     7389   29.06%
*   170+  165                         1249.0000      888.9398    11051   28.83%
*   173   166      integral     0     1244.0000      888.9398    11099   28.54%
    200   189      989.6674   116     1244.0000      889.1244    13217   28.53%
*   273+  256                         1241.0000      890.7302    16892   28.22%
    300   285     1054.1257    95     1241.0000      890.7302    18408   28.22%
    400   381     1139.1113    64     1241.0000      890.7813    23924   28.22%
    500   474      973.9583   117     1241.0000      893.6405    31909   27.99%
*   518+  326                         1192.0000     1089.7262    33472    8.58%
*   518+  217                         1177.0000     1094.9562    33787    6.97%
*   538+  158                         1168.0000     1100.1481    34449    5.81%
    600   189        cutoff           1168.0000     1100.1481    35963    5.81%
*   638+  161                         1162.0000     1102.8407    36965    5.09%
    700   187     1147.2757    59     1162.0000     1104.5215    38202    4.95%
    800   238     1157.2715    38     1162.0000     1104.6027    40516    4.94%
    900   320     1153.0912    41     1162.0000     1105.6339    43051    4.85%
Elapsed time =   6.83 sec. (tree size =  0.26 MB, solutions = 9)
*   965   224      integral     0     1144.0000     1105.7023    45216    3.35%
   1000   255     1124.8953    64     1144.0000     1107.5575    46307    3.19%
*  1065+  295                         1143.0000     1108.0946    48309    3.05%
   1100   326     1118.5327    84     1143.0000     1108.2939    49456    3.04%
   1200   397     1117.0031    50     1143.0000     1108.9901    52797    2.98%
   1300   480     1139.3562    59     1143.0000     1109.4340    56068    2.94%
   1400   552     1125.1048    70     1143.0000     1110.8126    59368    2.82%
*  1438+  488                         1139.0000     1111.4758    60479    2.42%
   1500   527     1132.6361    54     1139.0000     1113.6477    62953    2.23%
   1600   589     1127.3196    55     1139.0000     1115.1155    66306    2.10%
   1700   639        cutoff           1139.0000     1116.5769    70188    1.97%
   1800   697     1134.1289    70     1139.0000     1117.8239    73751    1.86%
Elapsed time =   9.39 sec. (tree size =  0.47 MB, solutions = 12)
   1900   746     1126.3684    23     1139.0000     1119.1850    77961    1.74%
   2000   746     1135.5957    61     1139.0000     1122.1301    83011    1.48%
   2100   763     1131.6837    46     1139.0000     1123.4074    87186    1.37%
   2200   748        cutoff           1139.0000     1124.7481    91391    1.25%
   2300   757     1138.5311    26     1139.0000     1125.4942    95435    1.19%
   2400   768        cutoff           1139.0000     1126.2784    99388    1.12%
   2500   751     1134.0495    29     1139.0000     1127.8742   103906    0.98%
   2600   725        cutoff           1139.0000     1129.1502   107701    0.86%
   2700   699        cutoff           1139.0000     1130.1932   110655    0.77%
   2800   687        cutoff           1139.0000     1130.7560   113988    0.72%
Elapsed time =  12.87 sec. (tree size =  0.60 MB, solutions = 12)
   2900   660     1138.1863    30     1139.0000     1131.4224   116673    0.67%
   3000   607        cutoff           1139.0000     1132.2849   119800    0.59%
   3100   552        cutoff           1139.0000     1133.2901   122493    0.50%
   3200   515     1137.7940    47     1139.0000     1133.9352   125021    0.44%
   3300   514        cutoff           1139.0000     1134.1948   126546    0.42%
   3400   495        cutoff           1139.0000     1134.6521   128739    0.38%
   3500   456        cutoff           1139.0000     1135.2048   130608    0.33%
   3600   398        cutoff           1139.0000     1135.7918   132378    0.28%
   3700   324     1137.0489    60     1139.0000     1136.5348   133884    0.22%
   3800   257        cutoff           1139.0000     1137.0489   134901    0.17%
Elapsed time =  14.66 sec. (tree size =  0.27 MB, solutions = 12)
   3900   173        cutoff           1139.0000     1137.7009   135959    0.11%
   4000    91     1138.5251    40     1139.0000     1138.1929   136488    0.07%

Clique cuts applied:  6
Cover cuts applied:  98
Implied bound cuts applied:  130
Flow cuts applied:  12
Mixed integer rounding cuts applied:  47
Zero-half cuts applied:  20
Gomory fractional cuts applied:  9
Lazy constraints applied:  9
Optimal
Lmax: 1139
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 1
Job 4 into batch 1
Job 5 into batch 2
Job 6 into batch 1
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 8
Job 12 into batch 0
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 16
Job 18 into batch 14
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 24
Job 27 into batch 27
Job 28 into batch 21
Job 29 into batch 10
Job 30 into batch 13
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 32
Job 36 into batch 15
Job 37 into batch 34
Job 38 into batch 23
Job 39 into batch 39
Job 40 into batch 39
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 43
Job 44 into batch 41
Job 45 into batch 45
Job 46 into batch 39
Job 47 into batch 42
Job 48 into batch 48
Job 49 into batch 15
Job 0:	s=3	p=8	d=37	L=(-29+1-0)=-28=			Pk=10	Total size:10
Job 1:	s=2	p=2	d=57	L=(-47+23-0)=-24=			Pk=24	Total size:10
Job 2:	s=5	p=11	d=58	L=(-37+23-0)=-14=			Pk=11	Total size:9
Job 3:	s=4	p=15	d=66	L=(-30+8-1339)=-1361=			Pk=15	Total size:0
Job 4:	s=2	p=24	d=66	L=(-6+-16-1339)=-1361=			Pk=24	Total size:0
Job 5:	s=4	p=11	d=67	L=(4+-27-1339)=-1362=			Pk=11	Total size:0
Job 6:	s=2	p=16	d=84	L=(3+-43-1339)=-1379=			Pk=16	Total size:0
Job 7:	s=9	p=8	d=102	L=(-7+-43-0)=-50=			Pk=8	Total size:9
Job 8:	s=5	p=24	d=105	L=(14+-36-0)=-22=			Pk=31	Total size:10
Job 9:	s=8	p=6	d=110	L=(15+-36-0)=-21=			Pk=6	Total size:8
Job 10:	s=6	p=31	d=115	L=(41+-35-0)=6=			Pk=31	Total size:10
Job 11:	s=5	p=31	d=117	L=(70+-66-1339)=-1335=			Pk=31	Total size:0
Job 12:	s=7	p=10	d=119	L=(78+-76-1339)=-1337=			Pk=10	Total size:0
Job 13:	s=9	p=51	d=120	L=(128+-76-0)=52=			Pk=51	Total size:10
Job 14:	s=8	p=75	d=135	L=(188+-72-0)=116=			Pk=79	Total size:10
Job 15:	s=1	p=47	d=139	L=(231+-21-0)=210=			Pk=98	Total size:10
Job 16:	s=2	p=28	d=154	L=(244+-19-0)=225=			Pk=30	Total size:10
Job 17:	s=8	p=30	d=155	L=(273+-49-1339)=-1115=			Pk=30	Total size:0
Job 18:	s=2	p=79	d=162	L=(345+-128-1339)=-1122=			Pk=79	Total size:0
Job 19:	s=9	p=65	d=164	L=(408+-128-0)=280=			Pk=65	Total size:9
Job 20:	s=10	p=52	d=185	L=(439+-128-0)=311=			Pk=52	Total size:10
Job 21:	s=7	p=56	d=203	L=(477+-128-0)=349=			Pk=56	Total size:9
Job 22:	s=9	p=20	d=209	L=(491+-128-0)=363=			Pk=20	Total size:9
Job 23:	s=3	p=43	d=210	L=(533+-105-0)=428=			Pk=66	Total size:10
Job 24:	s=5	p=61	d=239	L=(565+-99-0)=466=			Pk=67	Total size:10
Job 25:	s=10	p=80	d=243	L=(641+-99-0)=542=			Pk=80	Total size:10
Job 26:	s=5	p=67	d=257	L=(694+-166-1339)=-811=			Pk=67	Total size:0
Job 27:	s=10	p=84	d=267	L=(768+-166-0)=602=			Pk=84	Total size:10
Job 28:	s=2	p=54	d=270	L=(819+-220-1339)=-740=			Pk=54	Total size:0
Job 29:	s=4	p=29	d=273	L=(845+-248-1339)=-742=			Pk=29	Total size:0
Job 30:	s=1	p=51	d=279	L=(890+-299-1339)=-748=			Pk=51	Total size:0
Job 31:	s=9	p=44	d=296	L=(917+-299-0)=618=			Pk=44	Total size:9
Job 32:	s=9	p=77	d=299	L=(991+-299-0)=692=			Pk=77	Total size:10
Job 33:	s=10	p=82	d=304	L=(1068+-299-0)=769=			Pk=82	Total size:10
Job 34:	s=4	p=57	d=310	L=(1119+-299-0)=820=			Pk=57	Total size:10
Job 35:	s=1	p=72	d=324	L=(1177+-371-1339)=-533=			Pk=72	Total size:0
Job 36:	s=5	p=94	d=324	L=(1271+-465-1339)=-533=			Pk=94	Total size:0
Job 37:	s=6	p=51	d=347	L=(1299+-516-1339)=-556=			Pk=51	Total size:0
Job 38:	s=7	p=66	d=350	L=(1362+-582-1339)=-559=			Pk=66	Total size:0
Job 39:	s=2	p=81	d=353	L=(1440+-579-0)=861=			Pk=84	Total size:10
Job 40:	s=6	p=55	d=369	L=(1479+-634-1339)=-494=			Pk=55	Total size:0
Job 41:	s=1	p=92	d=383	L=(1557+-633-0)=924=			Pk=93	Total size:10
Job 42:	s=6	p=73	d=385	L=(1628+-622-0)=1006=			Pk=84	Total size:10
Job 43:	s=10	p=80	d=389	L=(1704+-622-0)=1082=			Pk=80	Total size:10
Job 44:	s=9	p=93	d=445	L=(1741+-715-1339)=-313=			Pk=93	Total size:0
Job 45:	s=10	p=90	d=450	L=(1826+-715-0)=1111=			Pk=90	Total size:10
Job 46:	s=2	p=84	d=470	L=(1890+-799-1339)=-248=			Pk=84	Total size:0
Job 47:	s=4	p=84	d=482	L=(1962+-883-1339)=-260=			Pk=84	Total size:0
Job 48:	s=10	p=89	d=510	L=(2023+-883-0)=1140=			Pk=89	Total size:10
Job 49:	s=4	p=98	d=529	L=(2102+-981-1339)=-218=			Pk=98	Total size:0

0
1.72414
1139
15.09 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-07.csv
44
144
251
323
346
379
390
430
463
484
509
509
535
548
629
647
655
674
677
682
685
688
719
812
848
857
874
947
957
977
984
1051
1069
1107
1232
1245
1281
1304
1323
1323
1341
1343
1351
1373
1403
1440
1452
1461
1480
1561
Job 0: due 44
Job 1: due 144
Job 2: due 251
Job 3: due 323
Job 4: due 346
Job 5: due 379
Job 6: due 390
Job 7: due 430
Job 8: due 463
Job 9: due 484
Job 10: due 509
Job 11: due 509
Job 12: due 535
Job 13: due 548
Job 14: due 629
Job 15: due 647
Job 16: due 655
Job 17: due 674
Job 18: due 677
Job 19: due 682
Job 20: due 685
Job 21: due 688
Job 22: due 719
Job 23: due 812
Job 24: due 848
Job 25: due 857
Job 26: due 874
Job 27: due 947
Job 28: due 957
Job 29: due 977
Job 30: due 984
Job 31: due 1051
Job 32: due 1069
Job 33: due 1107
Job 34: due 1232
Job 35: due 1245
Job 36: due 1281
Job 37: due 1304
Job 38: due 1323
Job 39: due 1323
Job 40: due 1341
Job 41: due 1343
Job 42: due 1351
Job 43: due 1373
Job 44: due 1403
Job 45: due 1440
Job 46: due 1452
Job 47: due 1461
Job 48: due 1480
Job 49: due 1561
Ignore all jobs after 50
Lmaxinc before safe moves: 1121
Now using unsafety tolerance 0
New Lmaxincnew: 293
Difference: 828
Lmaxinc after safe moves: 85849
Initial solution:
0 1 2 3 4 1 6 7 8 9 10 11 12 13 14 15 2 0 18 19 20 21 22 23 11 4 7 4 8 29 30 1 3 4 34 9 1 6 12 6 40 41 42 43 44 9 46 3 48 49 
Updating LmaxLB to -30.7. C=13.3, d=44same duedate: 10
same duedate: 38
Lower bound on Lmax based on areas:-2147483648
Max Lksingle:1121
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 472 safe move dominance lazy constraints
Added 234 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3027 rows and 1948 columns.
MIP Presolve modified 2005 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 773 rows, 598 columns, and 3850 nonzeros.
Reduced MIP has 547 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1635.
Problem contains 234 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      -25.0000   114                    -25.0000      351         
      0     0      -25.0000    93                    Cuts: 29      485         
      0     0      -25.0000    79                    Cuts: 58      573         
      0     0      -25.0000    87                    Cuts: 56      689         
      0     0      -23.5059    91                    Cuts: 17     1080         
      0     0      -22.0892   111                    Cuts: 66     1367         
      0     0      -20.5659    86                    Cuts: 51     1575         
      0     0      -20.4439    87                    Cuts: 42     1697         
      0     0      -19.5617    92                    Cuts: 38     1787         
      0     0      -17.8104   109                    Cuts: 49     2114         
      0     0      -17.5072   117                    Cuts: 41     2176         
      0     0      -16.3864   117                    Cuts: 34     2222         
      0     0      -16.0837   128                    Cuts: 31     2253         
      0     0      -15.9342   134                    Cuts: 11     2272         
      0     0      -13.2805   131                    Cuts: 11     2339         
*     0+    0                          202.0000      -13.2805     2339  106.57%
      0     0      -12.4401   105      202.0000      Cuts: 37     2365  106.16%
      0     0      -12.2948    97      202.0000      Cuts: 24     2385  106.09%
      0     0      -12.2901   102      202.0000       Cuts: 8     2390  106.08%
      0     2      -12.2901   106      202.0000      -11.4408     2390  105.66%
Elapsed time =   0.56 sec. (tree size =  0.00 MB, solutions = 1)
*    40+   40                          199.0000      -10.4558     5382  105.25%
    100    96       95.2379    14      199.0000       -3.4519     8133  101.73%
*   106    85      integral     0      132.0000       -3.4519     8269  102.62%
    200   162       62.7714    78      132.0000       -0.3687    13666  100.28%
*   206+  163                          129.0000       -0.3687    14004  100.29%
    300   245        cutoff            129.0000        1.5617    19565   98.79%
    400   333       15.9777   129      129.0000        2.1593    24843   98.33%
    500   420       11.0576   110      129.0000        2.9511    30808   97.71%
*   531+  299                          110.0000       47.2770    33416   57.02%
*   531+  205                          109.0000       47.2770    33416   56.63%
*   551+  157                           85.0000       47.2770    33766   44.38%
    600   173       74.7182    42       85.0000       47.6363    35174   43.96%
    700   199       74.5697    66       85.0000       53.8160    38526   36.69%
    800   240       67.8814    67       85.0000       54.9805    42047   35.32%
    900   300       75.1777    69       85.0000       57.8482    45958   31.94%
Elapsed time =   6.58 sec. (tree size =  0.23 MB, solutions = 7)
   1000   377       76.7008    75       85.0000       58.6270    49418   31.03%
   1100   459       78.0441    45       85.0000       59.5750    52694   29.91%
   1200   516       73.1057    68       85.0000       60.8713    57556   28.39%
   1300   567       76.6931    49       85.0000       63.0583    61641   25.81%
   1400   635       73.1488    54       85.0000       63.3836    65514   25.43%
   1500   683       72.9533    52       85.0000       64.4362    69364   24.19%
   1600   746       76.5834    53       85.0000       64.8692    73706   23.68%
*  1610   643      integral     0       82.0000       64.8692    73917   20.89%
*  1623   253      integral     0       74.0000       65.2155    74903   11.87%
   1700   234       70.0077    69       74.0000       67.5606    78302    8.70%
Elapsed time =   9.08 sec. (tree size =  0.17 MB, solutions = 9)
   1800   182        cutoff             74.0000       69.8769    81851    5.57%
   1900   145        cutoff             74.0000       71.1466    84417    3.86%
   2000    55        cutoff             74.0000       72.9426    86496    1.43%

Clique cuts applied:  13
Cover cuts applied:  107
Implied bound cuts applied:  63
Flow cuts applied:  9
Mixed integer rounding cuts applied:  36
Zero-half cuts applied:  41
Gomory fractional cuts applied:  1
Lazy constraints applied:  16
Optimal
Lmax: 74
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 2
Job 6 into batch 4
Job 7 into batch 7
Job 8 into batch 1
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 7
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 3
Job 17 into batch 3
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 9
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 11
Job 25 into batch 15
Job 26 into batch 21
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 14
Job 32 into batch 13
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 18
Job 36 into batch 1
Job 37 into batch 27
Job 38 into batch 38
Job 39 into batch 33
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 27
Job 44 into batch 44
Job 45 into batch 38
Job 46 into batch 33
Job 47 into batch 0
Job 48 into batch 48
Job 49 into batch 49
Job 0:	s=7	p=19	d=44	L=(-25+0-0)=-25=			Pk=19	Total size:10
Job 1:	s=2	p=54	d=144	L=(-71+0-0)=-71=			Pk=54	Total size:10
Job 2:	s=9	p=41	d=251	L=(-137+0-0)=-137=			Pk=41	Total size:10
Job 3:	s=6	p=26	d=323	L=(-183+0-0)=-183=			Pk=26	Total size:10
Job 4:	s=6	p=96	d=346	L=(-110+0-0)=-110=			Pk=96	Total size:10
Job 5:	s=1	p=37	d=379	L=(-106+-37-293)=-436=			Pk=37	Total size:0
Job 6:	s=4	p=85	d=390	L=(-32+-122-293)=-447=			Pk=85	Total size:0
Job 7:	s=7	p=45	d=430	L=(-27+-115-0)=-142=			Pk=52	Total size:10
Job 8:	s=6	p=40	d=463	L=(-20+-155-293)=-468=			Pk=40	Total size:0
Job 9:	s=4	p=79	d=484	L=(38+-155-0)=-117=			Pk=79	Total size:9
Job 10:	s=9	p=9	d=509	L=(22+-155-0)=-133=			Pk=9	Total size:9
Job 11:	s=5	p=68	d=509	L=(90+-155-0)=-65=			Pk=68	Total size:10
Job 12:	s=3	p=52	d=535	L=(116+-207-293)=-384=			Pk=52	Total size:0
Job 13:	s=9	p=35	d=548	L=(138+-207-0)=-69=			Pk=35	Total size:10
Job 14:	s=5	p=36	d=629	L=(93+-188--5.20473e-13)=-95=			Pk=54	Total size:10
Job 15:	s=9	p=93	d=647	L=(168+-188-0)=-20=			Pk=93	Total size:10
Job 16:	s=1	p=26	d=655	L=(186+-214-293)=-321=			Pk=26	Total size:0
Job 17:	s=3	p=14	d=674	L=(181+-228-293)=-340=			Pk=14	Total size:0
Job 18:	s=8	p=76	d=677	L=(254+-228-0)=26=			Pk=76	Total size:10
Job 19:	s=9	p=23	d=682	L=(272+-227--3.25295e-13)=45=			Pk=23	Total size:9
Job 20:	s=5	p=71	d=685	L=(340+-298-293)=-251=			Pk=71	Total size:0
Job 21:	s=6	p=33	d=688	L=(370+-298-0)=72=			Pk=33	Total size:9
Job 22:	s=10	p=19	d=719	L=(358+-298-0)=60=			Pk=19	Total size:10
Job 23:	s=10	p=40	d=812	L=(305+-298-0)=7=			Pk=40	Total size:10
Job 24:	s=5	p=57	d=848	L=(326+-355-293)=-322=			Pk=57	Total size:0
Job 25:	s=1	p=87	d=857	L=(404+-442-293)=-331=			Pk=87	Total size:0
Job 26:	s=3	p=29	d=874	L=(416+-471-293)=-348=			Pk=29	Total size:0
Job 27:	s=2	p=80	d=947	L=(423+-460-0)=-37=			Pk=91	Total size:10
Job 28:	s=2	p=2	d=957	L=(415+-459-2.27707e-13)=-44=			Pk=2	Total size:2
Job 29:	s=10	p=78	d=977	L=(473+-459-0)=14=			Pk=78	Total size:10
Job 30:	s=9	p=25	d=984	L=(491+-459--3.25295e-13)=32=			Pk=25	Total size:9
Job 31:	s=5	p=54	d=1051	L=(478+-513-293)=-328=			Pk=54	Total size:0
Job 32:	s=1	p=11	d=1069	L=(471+-524-293)=-346=			Pk=11	Total size:0
Job 33:	s=1	p=88	d=1107	L=(521+-515--4.55413e-13)=6=			Pk=96	Total size:10
Job 34:	s=9	p=51	d=1232	L=(447+-515-0)=-68=			Pk=51	Total size:9
Job 35:	s=2	p=56	d=1245	L=(490+-571-293)=-374=			Pk=56	Total size:0
Job 36:	s=2	p=53	d=1281	L=(507+-624-293)=-410=			Pk=53	Total size:0
Job 37:	s=3	p=85	d=1304	L=(569+-709-293)=-433=			Pk=85	Total size:0
Job 38:	s=6	p=51	d=1323	L=(601+-688-0)=-87=			Pk=72	Total size:10
Job 39:	s=3	p=84	d=1323	L=(685+-772-293)=-380=			Pk=84	Total size:0
Job 40:	s=9	p=35	d=1341	L=(702+-772-0)=-70=			Pk=35	Total size:9
Job 41:	s=9	p=29	d=1343	L=(729+-772-0)=-43=			Pk=29	Total size:9
Job 42:	s=10	p=70	d=1351	L=(791+-772-0)=19=			Pk=70	Total size:10
Job 43:	s=5	p=91	d=1373	L=(860+-863-293)=-296=			Pk=91	Total size:0
Job 44:	s=10	p=94	d=1403	L=(924+-863-0)=61=			Pk=94	Total size:10
Job 45:	s=4	p=72	d=1440	L=(959+-935-293)=-269=			Pk=72	Total size:0
Job 46:	s=6	p=96	d=1452	L=(1043+-1031-293)=-281=			Pk=96	Total size:0
Job 47:	s=3	p=12	d=1461	L=(1046+-1043-293)=-290=			Pk=12	Total size:0
Job 48:	s=8	p=94	d=1480	L=(1121+-1043-6.50591e-14)=78=			Pk=94	Total size:8
Job 49:	s=10	p=81	d=1561	L=(1121+-1043-0)=78=			Pk=81	Total size:10

-2147483648
1.78571
74
10.03 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-08.csv
150
239
277
291
344
375
405
410
445
446
448
497
506
518
533
556
573
601
636
678
691
695
716
757
820
868
878
880
898
919
928
939
983
988
1001
1038
1055
1079
1087
1088
1135
1159
1195
1211
1237
1264
1276
1295
1310
1322
Job 0: due 150
Job 1: due 239
Job 2: due 277
Job 3: due 291
Job 4: due 344
Job 5: due 375
Job 6: due 405
Job 7: due 410
Job 8: due 445
Job 9: due 446
Job 10: due 448
Job 11: due 497
Job 12: due 506
Job 13: due 518
Job 14: due 533
Job 15: due 556
Job 16: due 573
Job 17: due 601
Job 18: due 636
Job 19: due 678
Job 20: due 691
Job 21: due 695
Job 22: due 716
Job 23: due 757
Job 24: due 820
Job 25: due 868
Job 26: due 878
Job 27: due 880
Job 28: due 898
Job 29: due 919
Job 30: due 928
Job 31: due 939
Job 32: due 983
Job 33: due 988
Job 34: due 1001
Job 35: due 1038
Job 36: due 1055
Job 37: due 1079
Job 38: due 1087
Job 39: due 1088
Job 40: due 1135
Job 41: due 1159
Job 42: due 1195
Job 43: due 1211
Job 44: due 1237
Job 45: due 1264
Job 46: due 1276
Job 47: due 1295
Job 48: due 1310
Job 49: due 1322
Ignore all jobs after 50
Lmaxinc before safe moves: 940
Now using unsafety tolerance 0
New Lmaxincnew: 112
Difference: 828
Lmaxinc after safe moves: 12544
Initial solution:
0 1 2 3 4 5 6 7 8 5 10 5 6 13 14 15 14 17 13 7 20 15 1 23 24 25 0 6 28 13 6 31 32 33 34 6 4 20 10 15 20 15 42 43 44 45 46 47 48 17 
Updating LmaxLB to -145.2. C=4.8, d=150Updating LmaxLB to -134.4. C=1141.6, d=1276Updating LmaxLB to -111.4. C=1183.6, d=1295Updating LmaxLB to -80.4. C=1229.6, d=1310Lower bound on Lmax based on areas:-2147483648
Max Lksingle:940
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 669 safe move dominance lazy constraints
Added 276 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2823 rows and 1831 columns.
MIP Presolve modified 2103 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 960 rows, 715 columns, and 5323 nonzeros.
Reduced MIP has 664 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1518.
Problem contains 276 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0     -134.0000   182                   -134.0000      495         
      0     0     -134.0000    77                    Cuts: 25      573         
      0     0     -134.0000   105                    Cuts: 63      732         
      0     0     -134.0000    75                    Cuts: 27      825         
      0     0     -134.0000   115                    Cuts: 73     1014         
      0     2     -134.0000    59                   -134.0000     1014         
Elapsed time =   0.63 sec. (tree size =  0.00 MB, solutions = 0)
    100    96       68.0000    33                   -134.0000    10245         
    200   180      -39.2065    74                   -134.0000    18114         
    300   272       86.5797    32                   -134.0000    23559         
    400   356       29.9991    78                   -134.0000    27173         
*   450+  265                           91.0000      -40.9535    31637  145.00%
*   450+  176                           51.0000      -40.9535    31637  180.30%
*   500+  156                           34.0000      -25.2668    34409  174.31%
    500   157       -5.3247    45       34.0000      -25.2668    34409  174.31%
*   510+  127                           28.0000      -25.2668    34638  190.24%
    600   163       20.4211    47       28.0000      -17.4644    40085  162.37%
    700   212       17.8690    67       28.0000      -15.7260    45442  156.16%
    800   300        3.7242    42       28.0000      -14.1569    50685  150.56%
    900   379       -1.9642    66       28.0000      -12.3990    55616  144.28%
   1000   473        9.9268    43       28.0000      -11.8137    60557  142.19%
Elapsed time =  10.73 sec. (tree size =  0.35 MB, solutions = 4)
   1100   551       20.0679    76       28.0000      -10.0278    64647  135.81%
*  1172   541      integral     0       23.0000       -9.7119    68900  142.23%
   1200   563        7.2000    56       23.0000       -9.1258    71793  139.68%
*  1210+  418                           16.0000       -9.1258    72028  157.04%
   1300   471       14.2757    36       16.0000       -6.0734    76524  137.96%
*  1310+  447                           15.0000       -5.9716    77775  139.81%
   1400   509       12.8721    44       15.0000       -5.7448    82403  138.30%
*  1450+  475                           13.0000       -4.7907    85761  136.85%
   1500   503        2.8042    71       13.0000       -4.5530    89205  135.02%
   1600   504        cutoff             13.0000       -2.1723    94576  116.71%
   1700   565        6.0473    51       13.0000       -1.3822   103064  110.63%
   1800   605        5.4251    67       13.0000       -0.5930   109447  104.56%
   1900   666       12.0796    58       13.0000        0.1996   114083   98.46%
Elapsed time =  15.89 sec. (tree size =  0.59 MB, solutions = 8)
*  1950+  542                           11.0000        0.5724   117241   94.80%
   2000   571        cutoff             11.0000        0.8045   119437   92.69%
   2100   561        cutoff             11.0000        2.1412   126936   80.53%
   2200   593        5.6023    45       11.0000        2.8705   132387   73.90%
   2300   632        9.8935    75       11.0000        3.3925   136324   69.16%
   2400   655        7.2892    44       11.0000        3.7952   140530   65.50%
   2500   664        9.7661    57       11.0000        4.2523   145831   61.34%
   2600   698        9.7370    21       11.0000        4.4675   150327   59.39%
   2700   751        7.6695    62       11.0000        4.6011   153948   58.17%
   2800   778       10.1490    61       11.0000        4.9545   157729   54.96%
   2900   787        cutoff             11.0000        5.3785   163196   51.10%
Elapsed time =  21.54 sec. (tree size =  0.59 MB, solutions = 9)
   3000   810        9.5312    30       11.0000        5.6148   167688   48.96%
   3100   840        cutoff             11.0000        5.7382   170405   47.83%
   3200   861        8.8696    28       11.0000        5.9656   174435   45.77%
   3300   890        7.3791    32       11.0000        6.1105   178589   44.45%
   3400   851        cutoff             11.0000        6.5250   182868   40.68%
   3500   849       10.9238    49       11.0000        6.7984   186045   38.20%
   3600   859        cutoff             11.0000        7.0285   188991   36.10%
   3700   828        9.5850    82       11.0000        7.3084   192570   33.56%
   3800   831       10.9572    54       11.0000        7.5454   195854   31.41%
   3900   819        cutoff             11.0000        7.7172   199323   29.84%
Elapsed time =  25.03 sec. (tree size =  0.61 MB, solutions = 9)
   4000   804       10.1651    30       11.0000        7.9054   201984   28.13%
   4100   774        cutoff             11.0000        8.1008   205153   26.36%
   4200   781       10.6766    23       11.0000        8.2050   208333   25.41%
   4300   719        cutoff             11.0000        8.5225   211227   22.52%
   4400   648        cutoff             11.0000        8.7600   213693   20.36%
   4500   599        cutoff             11.0000        8.9846   216081   18.32%
   4600   553        cutoff             11.0000        9.2024   217943   16.34%
   4700   509        cutoff             11.0000        9.4259   219995   14.31%
   4800   460       10.9315    23       11.0000        9.6226   222293   12.52%
   4900   382        cutoff             11.0000        9.8503   223812   10.45%
Elapsed time =  27.84 sec. (tree size =  0.28 MB, solutions = 9)
   5000   288        cutoff             11.0000       10.1259   224963    7.95%
   5100   215        cutoff             11.0000       10.3452   225886    5.95%
   5200   132        cutoff             11.0000       10.5857   226684    3.77%
   5300    46        cutoff             11.0000       10.8435   227052    1.42%

Clique cuts applied:  18
Cover cuts applied:  162
Implied bound cuts applied:  121
Flow cuts applied:  14
Mixed integer rounding cuts applied:  89
Zero-half cuts applied:  21
Gomory fractional cuts applied:  6
Lazy constraints applied:  11
Optimal
Lmax: 11
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 5
Job 10 into batch 10
Job 11 into batch 4
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 13
Job 16 into batch 14
Job 17 into batch 6
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 4
Job 21 into batch 21
Job 22 into batch 1
Job 23 into batch 18
Job 24 into batch 24
Job 25 into batch 12
Job 26 into batch 0
Job 27 into batch 13
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 29
Job 33 into batch 19
Job 34 into batch 30
Job 35 into batch 8
Job 36 into batch 31
Job 37 into batch 7
Job 38 into batch 10
Job 39 into batch 39
Job 40 into batch 5
Job 41 into batch 21
Job 42 into batch 21
Job 43 into batch 43
Job 44 into batch 44
Job 45 into batch 45
Job 46 into batch 39
Job 47 into batch 47
Job 48 into batch 48
Job 49 into batch 45
Job 0:	s=3	p=16	d=150	L=(-134+0-0)=-134=			Pk=17	Total size:10
Job 1:	s=9	p=52	d=239	L=(-171+0-0)=-171=			Pk=52	Total size:10
Job 2:	s=9	p=8	d=277	L=(-201+0-0)=-201=			Pk=8	Total size:9
Job 3:	s=2	p=1	d=291	L=(-214+0-0)=-214=			Pk=1	Total size:2
Job 4:	s=6	p=25	d=344	L=(-242+0-0)=-242=			Pk=25	Total size:10
Job 5:	s=6	p=24	d=375	L=(-249+0-0)=-249=			Pk=24	Total size:10
Job 6:	s=2	p=76	d=405	L=(-203+0-0)=-203=			Pk=76	Total size:10
Job 7:	s=6	p=9	d=410	L=(-199+0-0)=-199=			Pk=9	Total size:10
Job 8:	s=9	p=61	d=445	L=(-173+5-0)=-168=			Pk=66	Total size:10
Job 9:	s=2	p=15	d=446	L=(-159+-10-112)=-281=			Pk=15	Total size:0
Job 10:	s=7	p=45	d=448	L=(-116+-9-0)=-125=			Pk=46	Total size:10
Job 11:	s=2	p=12	d=497	L=(-153+-21-112)=-286=			Pk=12	Total size:0
Job 12:	s=1	p=70	d=506	L=(-92+-21-0)=-113=			Pk=70	Total size:10
Job 13:	s=3	p=65	d=518	L=(-39+-2-0)=-41=			Pk=84	Total size:10
Job 14:	s=5	p=25	d=533	L=(-29+-1-0)=-30=			Pk=25	Total size:10
Job 15:	s=4	p=84	d=556	L=(32+-85-112)=-165=			Pk=84	Total size:0
Job 16:	s=5	p=23	d=573	L=(38+-108-112)=-182=			Pk=23	Total size:0
Job 17:	s=8	p=74	d=601	L=(84+-182-112)=-210=			Pk=74	Total size:0
Job 18:	s=4	p=65	d=636	L=(114+-182-0)=-68=			Pk=65	Total size:10
Job 19:	s=4	p=8	d=678	L=(80+-169-0)=-89=			Pk=21	Total size:9
Job 20:	s=2	p=8	d=691	L=(75+-177-112)=-214=			Pk=8	Total size:0
Job 21:	s=1	p=85	d=695	L=(156+-175-0)=-19=			Pk=87	Total size:10
Job 22:	s=1	p=20	d=716	L=(155+-195-112)=-152=			Pk=20	Total size:0
Job 23:	s=6	p=50	d=757	L=(164+-245-112)=-193=			Pk=50	Total size:0
Job 24:	s=10	p=78	d=820	L=(179+-245-0)=-66=			Pk=78	Total size:10
Job 25:	s=9	p=70	d=868	L=(201+-315-112)=-226=			Pk=70	Total size:0
Job 26:	s=7	p=17	d=878	L=(208+-332-112)=-236=			Pk=17	Total size:0
Job 27:	s=3	p=69	d=880	L=(275+-401-112)=-238=			Pk=69	Total size:0
Job 28:	s=9	p=20	d=898	L=(277+-401-0)=-124=			Pk=20	Total size:9
Job 29:	s=3	p=66	d=919	L=(322+-400-0)=-78=			Pk=67	Total size:10
Job 30:	s=2	p=75	d=928	L=(388+-393-0)=-5=			Pk=82	Total size:10
Job 31:	s=6	p=22	d=939	L=(399+-393-0)=6=			Pk=22	Total size:10
Job 32:	s=7	p=67	d=983	L=(422+-460-112)=-150=			Pk=67	Total size:0
Job 33:	s=5	p=21	d=988	L=(438+-481-112)=-155=			Pk=21	Total size:0
Job 34:	s=8	p=82	d=1001	L=(507+-563-112)=-168=			Pk=82	Total size:0
Job 35:	s=1	p=66	d=1038	L=(536+-629-112)=-205=			Pk=66	Total size:0
Job 36:	s=4	p=21	d=1055	L=(540+-650-112)=-222=			Pk=21	Total size:0
Job 37:	s=4	p=3	d=1079	L=(519+-653-112)=-246=			Pk=3	Total size:0
Job 38:	s=3	p=46	d=1087	L=(557+-699-112)=-254=			Pk=46	Total size:0
Job 39:	s=3	p=65	d=1088	L=(621+-699-0)=-78=			Pk=65	Total size:10
Job 40:	s=2	p=4	d=1135	L=(578+-703-112)=-237=			Pk=4	Total size:0
Job 41:	s=1	p=78	d=1159	L=(632+-781-112)=-261=			Pk=78	Total size:0
Job 42:	s=8	p=87	d=1195	L=(683+-868-112)=-297=			Pk=87	Total size:0
Job 43:	s=10	p=70	d=1211	L=(737+-868-0)=-131=			Pk=70	Total size:10
Job 44:	s=10	p=88	d=1237	L=(799+-868-0)=-69=			Pk=88	Total size:10
Job 45:	s=8	p=65	d=1264	L=(837+-868-0)=-31=			Pk=65	Total size:10
Job 46:	s=7	p=37	d=1276	L=(862+-905-112)=-155=			Pk=37	Total size:0
Job 47:	s=10	p=42	d=1295	L=(885+-905-0)=-20=			Pk=42	Total size:10
Job 48:	s=10	p=46	d=1310	L=(916+-905-0)=11=			Pk=46	Total size:10
Job 49:	s=2	p=36	d=1322	L=(940+-929-112)=-101=			Pk=48	Total size:3.6593e-13

-2147483648
1.92308
11
28.8 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-09.csv
16
34
34
36
55
81
84
86
98
103
105
106
106
108
111
114
117
133
143
149
152
158
158
159
160
163
167
176
181
182
186
189
191
191
195
199
210
213
217
227
241
249
252
265
265
277
296
323
326
343
Job 0: due 16
Job 1: due 34
Job 2: due 34
Job 3: due 36
Job 4: due 55
Job 5: due 81
Job 6: due 84
Job 7: due 86
Job 8: due 98
Job 9: due 103
Job 10: due 105
Job 11: due 106
Job 12: due 106
Job 13: due 108
Job 14: due 111
Job 15: due 114
Job 16: due 117
Job 17: due 133
Job 18: due 143
Job 19: due 149
Job 20: due 152
Job 21: due 158
Job 22: due 158
Job 23: due 159
Job 24: due 160
Job 25: due 163
Job 26: due 167
Job 27: due 176
Job 28: due 181
Job 29: due 182
Job 30: due 186
Job 31: due 189
Job 32: due 191
Job 33: due 191
Job 34: due 195
Job 35: due 199
Job 36: due 210
Job 37: due 213
Job 38: due 217
Job 39: due 227
Job 40: due 241
Job 41: due 249
Job 42: due 252
Job 43: due 265
Job 44: due 265
Job 45: due 277
Job 46: due 296
Job 47: due 323
Job 48: due 326
Job 49: due 343
Ignore all jobs after 50
Lmaxinc before safe moves: 1932
Now using unsafety tolerance 0
New Lmaxincnew: 1219
Difference: 713
Lmaxinc after safe moves: 1.48596e+06
Initial solution:
0 1 1 3 1 5 6 7 8 9 10 11 12 10 14 15 16 1 6 19 12 15 22 23 14 25 26 27 28 29 12 31 32 33 7 35 36 23 38 39 40 38 42 42 44 45 39 47 33 44 
Updating LmaxLB to -13.6. C=2.4, d=16same duedate: 1
Updating LmaxLB to 8.2. C=94.2, d=86Updating LmaxLB to 20. C=123, d=103Updating LmaxLB to 24. C=129, d=105same duedate: 11
Updating LmaxLB to 124.6. C=230.6, d=106Updating LmaxLB to 125.1. C=233.1, d=108Updating LmaxLB to 131.3. C=242.3, d=111Updating LmaxLB to 150.5. C=264.5, d=114Updating LmaxLB to 170.9. C=287.9, d=117Updating LmaxLB to 176.4. C=325.4, d=149Updating LmaxLB to 179.7. C=331.7, d=152same duedate: 21
Updating LmaxLB to 220.1. C=378.1, d=158Updating LmaxLB to 224.8. C=383.8, d=159Updating LmaxLB to 237. C=397, d=160Updating LmaxLB to 268.4. C=431.4, d=163Updating LmaxLB to 279.4. C=446.4, d=167Updating LmaxLB to 300.8. C=476.8, d=176Updating LmaxLB to 315.8. C=496.8, d=181Updating LmaxLB to 357.1. C=539.1, d=182Updating LmaxLB to 359.6. C=545.6, d=186Updating LmaxLB to 389. C=578, d=189same duedate: 32
Updating LmaxLB to 477.6. C=668.6, d=191Updating LmaxLB to 482.6. C=677.6, d=195Updating LmaxLB to 549.6. C=748.6, d=199Updating LmaxLB to 570.4. C=780.4, d=210Updating LmaxLB to 607.3. C=820.3, d=213Updating LmaxLB to 636.8. C=853.8, d=217Updating LmaxLB to 648.4. C=875.4, d=227Updating LmaxLB to 668. C=909, d=241Updating LmaxLB to 678.6. C=927.6, d=249Updating LmaxLB to 714.6. C=966.6, d=252same duedate: 43
Updating LmaxLB to 755.6. C=1020.6, d=265Updating LmaxLB to 792.4. C=1069.4, d=277Updating LmaxLB to 807.9. C=1103.9, d=296Updating LmaxLB to 841.1. C=1164.1, d=323Updating LmaxLB to 883.6. C=1209.6, d=326Updating LmaxLB to 884.6. C=1227.6, d=343Lower bound on Lmax based on areas:0
Max Lksingle:1932
Max reduction:1932
Now adding static psi-2-in-2 dominance rules ...
Added 100 safe move dominance lazy constraints
Added 101 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2836 rows and 1913 columns.
MIP Presolve modified 2703 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 922 rows, 635 columns, and 3970 nonzeros.
Reduced MIP has 584 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 926.
Problem contains 101 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      703.7090   182                    703.7090      517         
      0     0      755.6401   153                   Cuts: 140      734         
      0     0      795.8610   165                   Cuts: 151      940         
      0     0      818.3415   171                   Cuts: 153     1109         
      0     0      831.6336   182                   Cuts: 121     1270         
      0     0      850.5026   194                   Cuts: 116     1379         
      0     0      858.4525   163                    Cuts: 88     1459         
      0     0      860.4395   174                    Cuts: 91     1526         
      0     0      861.6056   180                    Cuts: 57     1588         
      0     0      862.0508   183                    Cuts: 60     1639         
      0     0      862.1941   179                    Cuts: 30     1669         
      0     0      862.3773   182                    Cuts: 39     1688         
      0     0      862.4591   178                    Cuts: 18     1708         
      0     0      862.4997   177                    Cuts: 27     1734         
      0     2      862.4997   177                    862.5112     1734         
Elapsed time =   0.64 sec. (tree size =  0.00 MB, solutions = 0)
*    60+   60                         1148.0000      862.8356     6806   24.84%
*    60+   60                         1137.0000      862.8356     6806   24.11%
    100    94      974.8051    81     1137.0000      863.0205    10246   24.10%
    200   185      996.4211    84     1137.0000      868.0684    15170   23.65%
    300   277      879.4512   182     1137.0000      868.3634    18509   23.63%
*   400+  371                         1135.0000      870.0400    22952   23.34%
    400   373      969.3664    96     1135.0000      870.0400    22952   23.34%
*   500+  386                         1069.0000      871.0295    27580   18.52%
    500   388      882.3401   169     1069.0000      871.0295    27580   18.52%
    600   484     1028.7844    74     1069.0000      872.2566    30915   18.40%
*   610+  326                         1056.0000     1008.4947    32297    4.50%
*   665   209      integral     0     1054.0000     1012.9651    33820    3.89%
*   690+  141                         1052.0000     1019.0241    34635    3.13%
*   700+  103                         1046.0000     1019.0241    34838    2.58%
    700   105     1040.6308    23     1046.0000     1019.0241    34838    2.58%
*   760+   87                         1043.0000     1020.4785    35757    2.16%
    800    80     1041.3318    44     1043.0000     1031.7073    37348    1.08%
    900    58        cutoff           1043.0000     1039.7132    39900    0.32%
Elapsed time =   7.43 sec. (tree size =  0.06 MB, solutions = 9)
   1000    34        cutoff           1043.0000     1042.1682    40866    0.08%

Clique cuts applied:  4
Cover cuts applied:  59
Implied bound cuts applied:  260
Flow cuts applied:  20
Mixed integer rounding cuts applied:  23
Zero-half cuts applied:  17
Gomory fractional cuts applied:  12
Lazy constraints applied:  4
Optimal
Lmax: 1043
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 10
Job 14 into batch 14
Job 15 into batch 14
Job 16 into batch 16
Job 17 into batch 5
Job 18 into batch 6
Job 19 into batch 19
Job 20 into batch 12
Job 21 into batch 16
Job 22 into batch 22
Job 23 into batch 1
Job 24 into batch 2
Job 25 into batch 25
Job 26 into batch 4
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 12
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 22
Job 35 into batch 35
Job 36 into batch 28
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 39
Job 41 into batch 7
Job 42 into batch 42
Job 43 into batch 37
Job 44 into batch 33
Job 45 into batch 1
Job 46 into batch 38
Job 47 into batch 47
Job 48 into batch 42
Job 49 into batch 33
Job 0:	s=6	p=4	d=16	L=(-12+0-0)=-12=			Pk=4	Total size:6
Job 1:	s=1	p=14	d=34	L=(-16+46-0)=30=			Pk=61	Total size:10
Job 2:	s=2	p=15	d=34	L=(-1+52-0)=51=			Pk=22	Total size:8
Job 3:	s=6	p=4	d=36	L=(1+52-0)=53=			Pk=4	Total size:6
Job 4:	s=5	p=15	d=55	L=(-3+66-0)=63=			Pk=30	Total size:10
Job 5:	s=9	p=21	d=81	L=(-8+66-0)=58=			Pk=21	Total size:10
Job 6:	s=5	p=43	d=84	L=(32+66-0)=98=			Pk=43	Total size:10
Job 7:	s=7	p=53	d=86	L=(83+75-0)=158=			Pk=62	Total size:10
Job 8:	s=9	p=8	d=98	L=(79+75-0)=154=			Pk=8	Total size:9
Job 9:	s=8	p=27	d=103	L=(101+75-0)=176=			Pk=27	Total size:8
Job 10:	s=5	p=12	d=105	L=(111+75-0)=186=			Pk=12	Total size:10
Job 11:	s=10	p=40	d=106	L=(150+75-0)=225=			Pk=40	Total size:10
Job 12:	s=8	p=77	d=106	L=(227+75-0)=302=			Pk=77	Total size:10
Job 13:	s=5	p=5	d=108	L=(230+70-1219)=-919=			Pk=5	Total size:0
Job 14:	s=4	p=23	d=111	L=(250+83-0)=333=			Pk=37	Total size:10
Job 15:	s=6	p=37	d=114	L=(284+46-1219)=-889=			Pk=37	Total size:0
Job 16:	s=6	p=39	d=117	L=(320+46-0)=366=			Pk=39	Total size:10
Job 17:	s=1	p=7	d=133	L=(311+39-1219)=-869=			Pk=7	Total size:0
Job 18:	s=5	p=40	d=143	L=(341+-1-1219)=-879=			Pk=40	Total size:0
Job 19:	s=8	p=21	d=149	L=(356+-1-0)=355=			Pk=21	Total size:8
Job 20:	s=1	p=63	d=152	L=(416+-64-1219)=-867=			Pk=63	Total size:0
Job 21:	s=4	p=28	d=158	L=(438+-92-1219)=-873=			Pk=28	Total size:0
Job 22:	s=8	p=44	d=158	L=(482+-91-0)=391=			Pk=45	Total size:10
Job 23:	s=1	p=57	d=159	L=(538+-148-1219)=-829=			Pk=57	Total size:0
Job 24:	s=6	p=22	d=160	L=(559+-170-1219)=-830=			Pk=22	Total size:0
Job 25:	s=8	p=43	d=163	L=(599+-170-0)=429=			Pk=43	Total size:8
Job 26:	s=5	p=30	d=167	L=(625+-200-1219)=-794=			Pk=30	Total size:0
Job 27:	s=8	p=38	d=176	L=(654+-200-0)=454=			Pk=38	Total size:8
Job 28:	s=4	p=50	d=181	L=(699+-197-0)=502=			Pk=53	Total size:10
Job 29:	s=9	p=47	d=182	L=(745+-197-0)=548=			Pk=47	Total size:9
Job 30:	s=1	p=65	d=186	L=(806+-262-1219)=-675=			Pk=65	Total size:0
Job 31:	s=9	p=36	d=189	L=(839+-262-0)=577=			Pk=36	Total size:9
Job 32:	s=10	p=53	d=191	L=(890+-262-0)=628=			Pk=53	Total size:10
Job 33:	s=4	p=94	d=191	L=(984+-262-0)=722=			Pk=94	Total size:10
Job 34:	s=2	p=45	d=195	L=(1025+-307-1219)=-501=			Pk=45	Total size:0
Job 35:	s=10	p=71	d=199	L=(1092+-307-0)=785=			Pk=71	Total size:10
Job 36:	s=6	p=53	d=210	L=(1134+-360-1219)=-445=			Pk=53	Total size:0
Job 37:	s=7	p=57	d=213	L=(1188+-357-0)=831=			Pk=60	Total size:10
Job 38:	s=5	p=67	d=217	L=(1251+-355-0)=896=			Pk=69	Total size:10
Job 39:	s=3	p=72	d=227	L=(1313+-355-0)=958=			Pk=72	Total size:10
Job 40:	s=7	p=48	d=241	L=(1347+-403-1219)=-275=			Pk=48	Total size:0
Job 41:	s=3	p=62	d=249	L=(1401+-465-1219)=-283=			Pk=62	Total size:0
Job 42:	s=5	p=78	d=252	L=(1476+-452-0)=1024=			Pk=91	Total size:10
Job 43:	s=3	p=60	d=265	L=(1523+-512-1219)=-208=			Pk=60	Total size:0
Job 44:	s=4	p=90	d=265	L=(1613+-602-1219)=-208=			Pk=90	Total size:0
Job 45:	s=8	p=61	d=277	L=(1662+-663-1219)=-220=			Pk=61	Total size:0
Job 46:	s=5	p=69	d=296	L=(1712+-732-1219)=-239=			Pk=69	Total size:0
Job 47:	s=7	p=86	d=323	L=(1771+-732-0)=1039=			Pk=86	Total size:7
Job 48:	s=5	p=91	d=326	L=(1859+-823-1219)=-183=			Pk=91	Total size:0
Job 49:	s=2	p=90	d=343	L=(1932+-913-1219)=-200=			Pk=90	Total size:0

0
1.66667
1043
7.72 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-10.csv
5
34
54
64
67
100
104
105
110
112
112
113
120
124
125
137
145
156
160
162
165
173
185
199
199
211
221
225
236
242
255
264
274
282
292
310
311
341
344
362
367
370
394
399
400
406
432
471
495
517
Job 0: due 5
Job 1: due 34
Job 2: due 54
Job 3: due 64
Job 4: due 67
Job 5: due 100
Job 6: due 104
Job 7: due 105
Job 8: due 110
Job 9: due 112
Job 10: due 112
Job 11: due 113
Job 12: due 120
Job 13: due 124
Job 14: due 125
Job 15: due 137
Job 16: due 145
Job 17: due 156
Job 18: due 160
Job 19: due 162
Job 20: due 165
Job 21: due 173
Job 22: due 185
Job 23: due 199
Job 24: due 199
Job 25: due 211
Job 26: due 221
Job 27: due 225
Job 28: due 236
Job 29: due 242
Job 30: due 255
Job 31: due 264
Job 32: due 274
Job 33: due 282
Job 34: due 292
Job 35: due 310
Job 36: due 311
Job 37: due 341
Job 38: due 344
Job 39: due 362
Job 40: due 367
Job 41: due 370
Job 42: due 394
Job 43: due 399
Job 44: due 400
Job 45: due 406
Job 46: due 432
Job 47: due 471
Job 48: due 495
Job 49: due 517
Ignore all jobs after 50
Lmaxinc before safe moves: 2000
Now using unsafety tolerance 0
New Lmaxincnew: 1337
Difference: 663
Lmaxinc after safe moves: 1.78757e+06
Initial solution:
0 1 2 3 4 5 1 7 8 9 8 11 12 8 11 15 16 17 11 19 20 8 22 23 24 25 16 27 28 25 30 24 15 33 34 35 36 37 38 39 20 41 42 22 24 45 46 47 20 49 
Updating LmaxLB to -4.9. C=0.1, d=5same duedate: 9
Updating LmaxLB to 5.3. C=150.3, d=145Updating LmaxLB to 15. C=171, d=156Updating LmaxLB to 21.5. C=181.5, d=160Updating LmaxLB to 70.8. C=232.8, d=162Updating LmaxLB to 76.5. C=241.5, d=165Updating LmaxLB to 125.1. C=310.1, d=185same duedate: 23
Updating LmaxLB to 176. C=375, d=199Updating LmaxLB to 205. C=416, d=211Updating LmaxLB to 227. C=452, d=225Updating LmaxLB to 271.8. C=507.8, d=236Updating LmaxLB to 303.3. C=545.3, d=242Updating LmaxLB to 357.3. C=612.3, d=255Updating LmaxLB to 361.3. C=625.3, d=264Updating LmaxLB to 369.3. C=643.3, d=274Updating LmaxLB to 408.2. C=690.2, d=282Updating LmaxLB to 427.8. C=719.8, d=292Updating LmaxLB to 467.4. C=777.4, d=310Updating LmaxLB to 554.4. C=865.4, d=311Updating LmaxLB to 617.1. C=961.1, d=344Updating LmaxLB to 653.5. C=1015.5, d=362Updating LmaxLB to 656.8. C=1023.8, d=367Updating LmaxLB to 710.6. C=1080.6, d=370Updating LmaxLB to 762.2. C=1156.2, d=394Updating LmaxLB to 772.4. C=1171.4, d=399Updating LmaxLB to 778. C=1178, d=400Updating LmaxLB to 829.4. C=1235.4, d=406Updating LmaxLB to 861. C=1293, d=432Updating LmaxLB to 881.5. C=1352.5, d=471Updating LmaxLB to 927.9. C=1422.9, d=495Updating LmaxLB to 985.1. C=1502.1, d=517Lower bound on Lmax based on areas:0
Max Lksingle:2000
Max reduction:2000
Now adding static psi-2-in-2 dominance rules ...
Added 133 safe move dominance lazy constraints
Added 90 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2903 rows and 1934 columns.
MIP Presolve modified 2771 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 883 rows, 614 columns, and 4025 nonzeros.
Reduced MIP has 563 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 914.
Problem contains 90 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      614.0740   173                    614.0740      471         
      0     0      714.4994   140                   Cuts: 159      783         
      0     0      765.4718   156                   Cuts: 149     1019         
      0     0      788.9651   169                   Cuts: 117     1141         
      0     0      810.9486   171                   Cuts: 108     1263         
      0     0      814.1171   179                    Cuts: 58     1323         
      0     0      815.8167   177                    Cuts: 64     1355         
      0     0      817.6942   159                    Cuts: 41     1400         
      0     0      818.0061   183                    Cuts: 29     1423         
      0     0      818.2419   191                Impl Bds: 23     1440         
      0     0      818.2960   193                Impl Bds: 30     1452         
      0     0      818.3248   190                Impl Bds: 12     1478         
*     0+    0                         1322.0000      818.3248     1478   38.10%
      0     2      818.3248   189     1322.0000      818.3248     1478   38.10%
Elapsed time =   0.48 sec. (tree size =  0.00 MB, solutions = 1)
*    60+   60                         1225.0000      818.3298     4507   33.20%
*   100+   95                         1220.0000      821.7958     6764   32.64%
    100    97      890.7678   125     1220.0000      821.7958     6764   32.64%
*   200+  182                         1199.0000      821.8279    11572   31.46%
*   200+  182                         1197.0000      821.8279    11572   31.34%
    200   184     1134.3637    63     1197.0000      821.8279    11572   31.34%
    300   277     1060.5032    62     1197.0000      825.8779    16174   31.00%
*   327   295      integral     0     1193.0000      825.8779    16600   30.77%
    400   360      861.3149   186     1193.0000      835.7344    21340   29.95%
*   427+  371                         1175.0000      835.7344    23002   28.87%
    500   442     1074.2589    54     1175.0000      836.6498    26794   28.80%
*   537+  316                         1114.0000     1112.2774    29449    0.15%
*   537     0      integral     0     1114.0000                  29899    0.00%

Clique cuts applied:  10
Cover cuts applied:  19
Implied bound cuts applied:  84
Flow cuts applied:  3
Mixed integer rounding cuts applied:  6
Zero-half cuts applied:  16
Gomory fractional cuts applied:  1
Lazy constraints applied:  1
Optimal
Lmax: 1114
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 0
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 3
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 8
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 13
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 11
Job 24 into batch 16
Job 25 into batch 25
Job 26 into batch 19
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 25
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 27
Job 33 into batch 10
Job 34 into batch 8
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 37
Job 38 into batch 4
Job 39 into batch 31
Job 40 into batch 20
Job 41 into batch 21
Job 42 into batch 42
Job 43 into batch 22
Job 44 into batch 42
Job 45 into batch 15
Job 46 into batch 46
Job 47 into batch 37
Job 48 into batch 20
Job 49 into batch 49
Job 0:	s=1	p=1	d=5	L=(-4+1-0)=-3=			Pk=3	Total size:6
Job 1:	s=9	p=5	d=34	L=(-28+1-0)=-27=			Pk=5	Total size:9
Job 2:	s=5	p=3	d=54	L=(-45+-2-1337)=-1384=			Pk=3	Total size:0
Job 3:	s=9	p=8	d=64	L=(-47+-2-0)=-49=			Pk=8	Total size:10
Job 4:	s=2	p=7	d=67	L=(-43+84-0)=41=			Pk=93	Total size:10
Job 5:	s=10	p=29	d=100	L=(-47+84-0)=37=			Pk=29	Total size:10
Job 6:	s=1	p=3	d=104	L=(-48+81-1337)=-1304=			Pk=3	Total size:0
Job 7:	s=9	p=8	d=105	L=(-41+81-0)=40=			Pk=8	Total size:9
Job 8:	s=1	p=34	d=110	L=(-12+83-0)=71=			Pk=37	Total size:10
Job 9:	s=9	p=13	d=112	L=(-1+83-0)=82=			Pk=13	Total size:9
Job 10:	s=3	p=25	d=112	L=(24+124-0)=148=			Pk=67	Total size:10
Job 11:	s=4	p=36	d=113	L=(59+141-0)=200=			Pk=54	Total size:10
Job 12:	s=10	p=15	d=120	L=(67+141-0)=208=			Pk=15	Total size:10
Job 13:	s=4	p=20	d=124	L=(83+141-0)=224=			Pk=21	Total size:9
Job 14:	s=1	p=16	d=125	L=(98+125-1337)=-1114=			Pk=16	Total size:0
Job 15:	s=3	p=45	d=137	L=(131+161-0)=292=			Pk=82	Total size:10
Job 16:	s=5	p=48	d=145	L=(171+177-0)=348=			Pk=65	Total size:10
Job 17:	s=9	p=23	d=156	L=(183+177-0)=360=			Pk=23	Total size:9
Job 18:	s=5	p=21	d=160	L=(200+156-1337)=-981=			Pk=21	Total size:0
Job 19:	s=9	p=57	d=162	L=(255+156-0)=411=			Pk=57	Total size:10
Job 20:	s=1	p=87	d=165	L=(339+156-0)=495=			Pk=88	Total size:10
Job 21:	s=2	p=35	d=173	L=(366+191-0)=557=			Pk=71	Total size:10
Job 22:	s=8	p=77	d=185	L=(431+191-0)=622=			Pk=77	Total size:10
Job 23:	s=6	p=54	d=199	L=(471+137-1337)=-729=			Pk=54	Total size:0
Job 24:	s=5	p=65	d=199	L=(536+72-1337)=-729=			Pk=65	Total size:0
Job 25:	s=5	p=82	d=211	L=(606+72-0)=678=			Pk=82	Total size:10
Job 26:	s=1	p=48	d=221	L=(644+24-1337)=-669=			Pk=48	Total size:0
Job 27:	s=6	p=52	d=225	L=(692+24-0)=716=			Pk=52	Total size:10
Job 28:	s=9	p=62	d=236	L=(743+24-0)=767=			Pk=62	Total size:9
Job 29:	s=5	p=75	d=242	L=(812+-51-1337)=-576=			Pk=75	Total size:0
Job 30:	s=10	p=67	d=255	L=(866+-51-0)=815=			Pk=67	Total size:10
Job 31:	s=2	p=65	d=264	L=(922+-48-0)=874=			Pk=68	Total size:10
Job 32:	s=4	p=45	d=274	L=(957+-93-1337)=-473=			Pk=45	Total size:0
Job 33:	s=7	p=67	d=282	L=(1016+-160-1337)=-481=			Pk=67	Total size:0
Job 34:	s=8	p=37	d=292	L=(1043+-197-1337)=-491=			Pk=37	Total size:0
Job 35:	s=9	p=64	d=310	L=(1089+-197-0)=892=			Pk=64	Total size:9
Job 36:	s=10	p=88	d=311	L=(1176+-197-0)=979=			Pk=88	Total size:10
Job 37:	s=3	p=71	d=341	L=(1217+-183-0)=1034=			Pk=85	Total size:10
Job 38:	s=8	p=93	d=344	L=(1307+-276-1337)=-306=			Pk=93	Total size:0
Job 39:	s=8	p=68	d=362	L=(1357+-344-1337)=-324=			Pk=68	Total size:0
Job 40:	s=1	p=83	d=367	L=(1435+-427-1337)=-329=			Pk=83	Total size:0
Job 41:	s=8	p=71	d=370	L=(1503+-498-1337)=-332=			Pk=71	Total size:0
Job 42:	s=9	p=84	d=394	L=(1563+-498-0)=1065=			Pk=84	Total size:10
Job 43:	s=2	p=76	d=399	L=(1634+-574-1337)=-277=			Pk=76	Total size:0
Job 44:	s=1	p=66	d=400	L=(1699+-640-1337)=-278=			Pk=66	Total size:0
Job 45:	s=7	p=82	d=406	L=(1775+-722-1337)=-284=			Pk=82	Total size:0
Job 46:	s=9	p=64	d=432	L=(1813+-722-0)=1091=			Pk=64	Total size:9
Job 47:	s=7	p=85	d=471	L=(1859+-807-1337)=-285=			Pk=85	Total size:0
Job 48:	s=8	p=88	d=495	L=(1923+-895-1337)=-309=			Pk=88	Total size:0
Job 49:	s=8	p=99	d=517	L=(2000+-895-0)=1105=			Pk=99	Total size:8

0
1.66667
1114
3.42 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-11.csv
61
128
207
272
279
319
322
347
362
376
402
460
475
481
484
489
517
537
555
643
644
679
688
702
717
789
805
805
835
873
874
877
895
987
1033
1040
1062
1082
1126
1143
1210
1221
1237
1253
1284
1290
1319
1356
1386
1453
Job 0: due 61
Job 1: due 128
Job 2: due 207
Job 3: due 272
Job 4: due 279
Job 5: due 319
Job 6: due 322
Job 7: due 347
Job 8: due 362
Job 9: due 376
Job 10: due 402
Job 11: due 460
Job 12: due 475
Job 13: due 481
Job 14: due 484
Job 15: due 489
Job 16: due 517
Job 17: due 537
Job 18: due 555
Job 19: due 643
Job 20: due 644
Job 21: due 679
Job 22: due 688
Job 23: due 702
Job 24: due 717
Job 25: due 789
Job 26: due 805
Job 27: due 805
Job 28: due 835
Job 29: due 873
Job 30: due 874
Job 31: due 877
Job 32: due 895
Job 33: due 987
Job 34: due 1033
Job 35: due 1040
Job 36: due 1062
Job 37: due 1082
Job 38: due 1126
Job 39: due 1143
Job 40: due 1210
Job 41: due 1221
Job 42: due 1237
Job 43: due 1253
Job 44: due 1284
Job 45: due 1290
Job 46: due 1319
Job 47: due 1356
Job 48: due 1386
Job 49: due 1453
Ignore all jobs after 49
Lmaxinc before safe moves: 905
Now using unsafety tolerance 0
New Lmaxincnew: 384
Difference: 521
Lmaxinc after safe moves: 147456
Initial solution:
0 1 2 0 4 5 6 7 8 9 6 11 12 13 14 15 7 17 14 19 20 21 22 23 24 22 26 5 28 4 7 31 32 33 34 14 31 37 1 39 39 41 17 19 44 45 46 2 1 
Updating LmaxLB to -57.5. C=3.5, d=61Updating LmaxLB to -33.9. C=328.1, d=362Updating LmaxLB to 35.1. C=411.1, d=376Updating LmaxLB to 40.7. C=521.7, d=481Updating LmaxLB to 56.1. C=540.1, d=484Updating LmaxLB to 88. C=577, d=489Updating LmaxLB to 95.3. C=650.3, d=555Updating LmaxLB to 119.4. C=836.4, d=717same duedate: 26
Lower bound on Lmax based on areas:0
Max Lksingle:905
Max reduction:905
Now adding static psi-2-in-2 dominance rules ...
Added 839 safe move dominance lazy constraints
Added 242 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3056 rows and 1887 columns.
MIP Presolve modified 1457 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 662 rows, 560 columns, and 4063 nonzeros.
Reduced MIP has 510 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.01 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1679.
Problem contains 242 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      217.6571    59                    217.6571      312         
*     0+    0                          383.0000      217.6571      312   43.17%
      0     0      243.6271    59      383.0000      Cuts: 48      392   36.39%
      0     0      249.3190    62      383.0000      Cuts: 28      449   34.90%
      0     0      250.5294    57      383.0000      Cuts: 20      469   34.59%
      0     0      252.1228    64      383.0000      Cuts: 11      492   34.17%
      0     0      253.1409    57      383.0000      Cuts: 18      512   33.91%
      0     0      254.5228    67      383.0000       Cuts: 8      533   33.54%
      0     0      254.9855    64      383.0000       Cuts: 6      548   33.42%
      0     0      255.2880    62      383.0000       Cuts: 6      557   33.35%
      0     0      255.7086    64      383.0000      Cuts: 10      572   33.24%
      0     0      256.7322    62      383.0000       Cuts: 9      583   32.97%
      0     0      257.0605    63      383.0000       Cuts: 9      597   32.88%
      0     0      257.7510    60      383.0000   ZeroHalf: 2      609   32.70%
      0     0      257.8026    62      383.0000   ZeroHalf: 4      618   32.69%
      0     0      257.9186    63      383.0000   ZeroHalf: 4      626   32.66%
      0     0      258.1256    54      383.0000   ZeroHalf: 4      640   32.60%
      0     0      258.1418    60      383.0000      Cuts: 10      649   32.60%
      0     0      258.3599    50      383.0000      Cuts: 12      661   32.54%
      0     0      258.7211    43      383.0000       Cuts: 8      670   32.45%
*     0+    0                          306.0000      258.7211      670   15.45%
      0     0      258.9327    42      306.0000       Cuts: 3      674   15.38%
*     0+    0                          302.0000      258.9327      674   14.26%
      0     0      259.0994    48      302.0000       Cuts: 4      681   14.21%
      0     0      259.3962    49      302.0000       Cuts: 3      689   14.11%
      0     0      259.7739    52      302.0000       Cuts: 5      697   13.98%
*     0+    0                          292.0000      259.7739      697   11.04%
      0     0      259.8394    52      292.0000   Impl Bds: 1      700   11.01%
      0     0      259.8512    53      292.0000   Impl Bds: 2      701   11.01%
*     0+    0                          291.0000      259.8512      701   10.70%
*     0+    0                          285.0000      259.8512      701    8.82%
      0     2      259.8512    53      285.0000      259.9493      701    8.79%
Elapsed time =   0.28 sec. (tree size =  0.00 MB, solutions = 6)
    100    27      284.5920    17      285.0000      275.0000     2664    3.51%
    200    37      284.6481    10      285.0000      279.4859     4349    1.93%

Clique cuts applied:  1
Cover cuts applied:  26
Implied bound cuts applied:  89
Flow cuts applied:  3
Zero-half cuts applied:  33
Gomory fractional cuts applied:  3
Lazy constraints applied:  4
Optimal
Lmax: 285
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 0
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 6
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 12
Job 15 into batch 15
Job 16 into batch 8
Job 17 into batch 17
Job 18 into batch 17
Job 19 into batch 11
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 5
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 1
Job 28 into batch 25
Job 29 into batch 13
Job 30 into batch 7
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 35
Job 37 into batch 31
Job 38 into batch 4
Job 39 into batch 39
Job 40 into batch 39
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 42
Job 44 into batch 44
Job 45 into batch 45
Job 46 into batch 46
Job 47 into batch 2
Job 48 into batch 46
Job 0:	s=5	p=7	d=61	L=(-54+1-0)=-53=			Pk=8	Total size:9
Job 1:	s=7	p=43	d=128	L=(-78+1-0)=-77=			Pk=43	Total size:10
Job 2:	s=8	p=57	d=207	L=(-100+1-0)=-99=			Pk=57	Total size:9
Job 3:	s=4	p=8	d=272	L=(-157+-7-384)=-548=			Pk=8	Total size:0
Job 4:	s=7	p=33	d=279	L=(-131+-7-0)=-138=			Pk=33	Total size:9
Job 5:	s=5	p=29	d=319	L=(-142+26-0)=-116=			Pk=63	Total size:9
Job 6:	s=9	p=93	d=322	L=(-52+26-0)=-26=			Pk=93	Total size:10
Job 7:	s=7	p=62	d=347	L=(-15+26-0)=11=			Pk=62	Total size:8
Job 8:	s=9	p=90	d=362	L=(60+26-0)=86=			Pk=90	Total size:10
Job 9:	s=10	p=83	d=376	L=(129+26-0)=155=			Pk=83	Total size:10
Job 10:	s=1	p=73	d=402	L=(176+-47-384)=-255=			Pk=73	Total size:0
Job 11:	s=5	p=13	d=460	L=(131+-44-0)=87=			Pk=16	Total size:10
Job 12:	s=8	p=65	d=475	L=(181+-17-0)=164=			Pk=92	Total size:10
Job 13:	s=7	p=64	d=481	L=(239+-17-0)=222=			Pk=64	Total size:10
Job 14:	s=2	p=92	d=484	L=(328+-109-384)=-165=			Pk=92	Total size:0
Job 15:	s=9	p=41	d=489	L=(364+-109-0)=255=			Pk=41	Total size:9
Job 16:	s=1	p=63	d=517	L=(399+-172-384)=-157=			Pk=63	Total size:0
Job 17:	s=6	p=67	d=537	L=(446+-172-0)=274=			Pk=67	Total size:10
Job 18:	s=4	p=67	d=555	L=(495+-239-384)=-128=			Pk=67	Total size:0
Job 19:	s=5	p=16	d=643	L=(423+-255-384)=-216=			Pk=16	Total size:0
Job 20:	s=6	p=17	d=644	L=(439+-255-0)=184=			Pk=17	Total size:6
Job 21:	s=7	p=20	d=679	L=(424+-255-0)=169=			Pk=20	Total size:7
Job 22:	s=4	p=63	d=688	L=(478+-318-384)=-224=			Pk=63	Total size:0
Job 23:	s=9	p=83	d=702	L=(547+-318-0)=229=			Pk=83	Total size:9
Job 24:	s=9	p=60	d=717	L=(592+-318-0)=274=			Pk=60	Total size:9
Job 25:	s=6	p=57	d=789	L=(577+-318-0)=259=			Pk=57	Total size:10
Job 26:	s=10	p=18	d=805	L=(579+-318-0)=261=			Pk=18	Total size:10
Job 27:	s=3	p=26	d=805	L=(605+-344-384)=-123=			Pk=26	Total size:0
Job 28:	s=4	p=19	d=835	L=(594+-363-384)=-153=			Pk=19	Total size:0
Job 29:	s=3	p=28	d=873	L=(584+-391-384)=-191=			Pk=28	Total size:0
Job 30:	s=1	p=59	d=874	L=(642+-450-384)=-192=			Pk=59	Total size:0
Job 31:	s=3	p=94	d=877	L=(733+-450-0)=283=			Pk=94	Total size:10
Job 32:	s=8	p=6	d=895	L=(721+-450-0)=271=			Pk=6	Total size:8
Job 33:	s=9	p=23	d=987	L=(652+-450-0)=202=			Pk=23	Total size:9
Job 34:	s=9	p=41	d=1033	L=(647+-450-0)=197=			Pk=41	Total size:9
Job 35:	s=4	p=83	d=1040	L=(723+-439-0)=284=			Pk=94	Total size:8
Job 36:	s=4	p=94	d=1062	L=(795+-533-384)=-122=			Pk=94	Total size:0
Job 37:	s=7	p=69	d=1082	L=(844+-602-384)=-142=			Pk=69	Total size:0
Job 38:	s=2	p=16	d=1126	L=(816+-618-384)=-186=			Pk=16	Total size:0
Job 39:	s=6	p=52	d=1143	L=(851+-618-0)=233=			Pk=52	Total size:10
Job 40:	s=4	p=32	d=1210	L=(816+-650-384)=-218=			Pk=32	Total size:0
Job 41:	s=9	p=9	d=1221	L=(814+-650-0)=164=			Pk=9	Total size:9
Job 42:	s=4	p=64	d=1237	L=(862+-650-0)=212=			Pk=64	Total size:8
Job 43:	s=4	p=17	d=1253	L=(863+-667-384)=-188=			Pk=17	Total size:0
Job 44:	s=7	p=35	d=1284	L=(867+-667-0)=200=			Pk=35	Total size:7
Job 45:	s=8	p=8	d=1290	L=(869+-667-0)=202=			Pk=8	Total size:8
Job 46:	s=8	p=44	d=1319	L=(884+-667-0)=217=			Pk=44	Total size:9
Job 47:	s=1	p=48	d=1356	L=(895+-715-384)=-204=			Pk=48	Total size:0
Job 48:	s=1	p=40	d=1386	L=(905+-755-384)=-234=			Pk=40	Total size:0

0
1.58065
285
0.79 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-12.csv
12
72
79
79
103
119
228
307
319
327
357
359
392
428
453
533
535
592
594
611
664
671
674
703
721
738
747
791
808
839
862
897
905
905
911
995
1052
1062
1079
1084
1089
1102
1142
1172
1206
1226
1254
1295
1479
1531
Job 0: due 12
Job 1: due 72
Job 2: due 79
Job 3: due 79
Job 4: due 103
Job 5: due 119
Job 6: due 228
Job 7: due 307
Job 8: due 319
Job 9: due 327
Job 10: due 357
Job 11: due 359
Job 12: due 392
Job 13: due 428
Job 14: due 453
Job 15: due 533
Job 16: due 535
Job 17: due 592
Job 18: due 594
Job 19: due 611
Job 20: due 664
Job 21: due 671
Job 22: due 674
Job 23: due 703
Job 24: due 721
Job 25: due 738
Job 26: due 747
Job 27: due 791
Job 28: due 808
Job 29: due 839
Job 30: due 862
Job 31: due 897
Job 32: due 905
Job 33: due 905
Job 34: due 911
Job 35: due 995
Job 36: due 1052
Job 37: due 1062
Job 38: due 1079
Job 39: due 1084
Job 40: due 1089
Job 41: due 1102
Job 42: due 1142
Job 43: due 1172
Job 44: due 1206
Job 45: due 1226
Job 46: due 1254
Job 47: due 1295
Job 48: due 1479
Job 49: due 1531
Ignore all jobs after 48
Lmaxinc before safe moves: 651
Now using unsafety tolerance 0
New Lmaxincnew: 162
Difference: 489
Lmaxinc after safe moves: 26244
Initial solution:
0 1 2 3 1 5 6 7 8 9 10 11 12 13 14 15 16 0 18 7 20 21 8 13 24 0 26 16 24 29 30 31 32 11 34 14 36 37 38 11 40 41 42 0 14 7 6 47 
Updating LmaxLB to -7.2. C=4.8, d=12same duedate: 2
same duedate: 32
Lower bound on Lmax based on areas:-2147483648
Max Lksingle:651
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 205 safe move dominance lazy constraints
Added 190 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2807 rows and 1801 columns.
MIP Presolve modified 1884 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 711 rows, 548 columns, and 3995 nonzeros.
Reduced MIP has 499 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1591.
Problem contains 190 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0       -4.0000    66                     -4.0000      203         
      0     0       -4.0000    39                    Cuts: 13      259         
      0     0       -4.0000    73                    Cuts: 41      392         
      0     0       -4.0000    51                    Cuts: 19      446         
      0     0       -3.5670    94                    Cuts: 21      771         
      0     0       -3.0024    92                    Cuts: 54      886         
      0     0       -2.8431   102                    Cuts: 71      992         
      0     0       -2.7435   111                    Cuts: 52     1050         
      0     0       -2.6734    97                    Cuts: 40     1090         
      0     0       -2.6234   107                    Cuts: 32     1122         
      0     0       -2.5965   117                    Cuts: 19     1142         
      0     0       -2.5040   101                    Cuts: 12     1170         
      0     0       -2.3968   115                    Cuts: 11     1190         
      0     0       -2.3099   112                     Cuts: 7     1232         
      0     0       -2.2999   118                     Cuts: 6     1246         
      0     0       -2.2956   121                    Cuts: 16     1257         
      0     0       -2.2945   124                     Cuts: 2     1265         
      0     0       -2.2857   112                     Cuts: 8     1281         
      0     0       -2.2857   113                 Impl Bds: 2     1282         
*     0+    0                          161.0000       -2.2857     1282  101.42%
      0     2       -2.2857   109      161.0000       -2.2790     1282  101.42%
Elapsed time =   0.41 sec. (tree size =  0.00 MB, solutions = 1)
*    40+   37                          112.0000        0.7066     3750   99.37%
*    43    39      integral     0      108.0000        0.7066     3807   99.35%
    100    79      105.5719    51      108.0000        3.1222     6605   97.11%
*   168   107      integral     0       97.0000       26.5591     8567   72.62%
    200   130       83.0626    55       97.0000       28.6471     9424   70.47%
    300   200       92.0000     7       97.0000       31.4688    13422   67.56%
    400   273       81.5425    60       97.0000       32.2540    18222   66.75%
*   446   262      integral     0       91.0000       33.2970    19245   63.41%
    500   296        cutoff             91.0000       33.9478    21438   62.69%

Clique cuts applied:  7
Cover cuts applied:  16
Implied bound cuts applied:  174
Flow cuts applied:  4
Mixed integer rounding cuts applied:  3
Zero-half cuts applied:  3
Gomory fractional cuts applied:  5
Lazy constraints applied:  9
Optimal
Lmax: 91
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 4
Job 14 into batch 7
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 9
Job 18 into batch 18
Job 19 into batch 15
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 8
Job 23 into batch 18
Job 24 into batch 24
Job 25 into batch 0
Job 26 into batch 26
Job 27 into batch 16
Job 28 into batch 11
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 30
Job 34 into batch 1
Job 35 into batch 24
Job 36 into batch 36
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 29
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 40
Job 44 into batch 41
Job 45 into batch 38
Job 46 into batch 12
Job 47 into batch 47
Job 0:	s=6	p=8	d=12	L=(-4+0-0)=-4=			Pk=8	Total size:7
Job 1:	s=4	p=22	d=72	L=(-42+23-0)=-19=			Pk=46	Total size:10
Job 2:	s=5	p=2	d=79	L=(-47+23-0)=-24=			Pk=2	Total size:5
Job 3:	s=8	p=9	d=79	L=(-38+23-0)=-15=			Pk=9	Total size:8
Job 4:	s=4	p=16	d=103	L=(-46+34-0)=-12=			Pk=27	Total size:10
Job 5:	s=10	p=37	d=119	L=(-25+34-0)=9=			Pk=37	Total size:10
Job 6:	s=7	p=37	d=228	L=(-97+34-0)=-63=			Pk=37	Total size:7
Job 7:	s=6	p=84	d=307	L=(-92+34-0)=-58=			Pk=84	Total size:10
Job 8:	s=5	p=7	d=319	L=(-97+34-0)=-63=			Pk=7	Total size:10
Job 9:	s=8	p=24	d=327	L=(-81+34-0)=-47=			Pk=24	Total size:10
Job 10:	s=9	p=28	d=357	L=(-83+34-0)=-49=			Pk=28	Total size:9
Job 11:	s=6	p=81	d=359	L=(-4+34-0)=30=			Pk=81	Total size:10
Job 12:	s=8	p=34	d=392	L=(-3+34-0)=31=			Pk=34	Total size:10
Job 13:	s=6	p=27	d=428	L=(-12+7-162)=-167=			Pk=27	Total size:0
Job 14:	s=4	p=51	d=453	L=(14+-44-162)=-192=			Pk=51	Total size:0
Job 15:	s=7	p=71	d=533	L=(5+-44-0)=-39=			Pk=71	Total size:10
Job 16:	s=5	p=91	d=535	L=(94+-43-0)=51=			Pk=92	Total size:10
Job 17:	s=2	p=9	d=592	L=(46+-52-162)=-168=			Pk=9	Total size:0
Job 18:	s=7	p=36	d=594	L=(80+-52-0)=28=			Pk=36	Total size:10
Job 19:	s=3	p=69	d=611	L=(132+-121-162)=-151=			Pk=69	Total size:0
Job 20:	s=10	p=3	d=664	L=(82+-121-0)=-39=			Pk=3	Total size:10
Job 21:	s=9	p=4	d=671	L=(79+-121-0)=-42=			Pk=4	Total size:9
Job 22:	s=5	p=5	d=674	L=(81+-126-162)=-207=			Pk=5	Total size:0
Job 23:	s=3	p=25	d=703	L=(77+-151-162)=-236=			Pk=25	Total size:0
Job 24:	s=5	p=71	d=721	L=(130+-151-0)=-21=			Pk=71	Total size:9
Job 25:	s=1	p=5	d=738	L=(118+-156-162)=-200=			Pk=5	Total size:0
Job 26:	s=7	p=36	d=747	L=(145+-156-0)=-11=			Pk=36	Total size:7
Job 27:	s=5	p=92	d=791	L=(193+-248-162)=-217=			Pk=92	Total size:0
Job 28:	s=4	p=24	d=808	L=(200+-272-162)=-234=			Pk=24	Total size:0
Job 29:	s=7	p=70	d=839	L=(239+-272-0)=-33=			Pk=70	Total size:10
Job 30:	s=9	p=75	d=862	L=(291+-272-0)=19=			Pk=75	Total size:10
Job 31:	s=7	p=21	d=897	L=(277+-272-0)=5=			Pk=21	Total size:7
Job 32:	s=9	p=14	d=905	L=(283+-272-0)=11=			Pk=14	Total size:9
Job 33:	s=1	p=46	d=905	L=(329+-318-162)=-151=			Pk=46	Total size:0
Job 34:	s=6	p=46	d=911	L=(369+-364-162)=-157=			Pk=46	Total size:0
Job 35:	s=4	p=39	d=995	L=(324+-403-162)=-241=			Pk=39	Total size:0
Job 36:	s=10	p=68	d=1052	L=(335+-403-0)=-68=			Pk=68	Total size:10
Job 37:	s=6	p=3	d=1062	L=(328+-403-0)=-75=			Pk=3	Total size:6
Job 38:	s=7	p=76	d=1079	L=(387+-400-0)=-13=			Pk=79	Total size:8
Job 39:	s=3	p=62	d=1084	L=(444+-462-162)=-180=			Pk=62	Total size:0
Job 40:	s=8	p=41	d=1089	L=(480+-462-0)=18=			Pk=41	Total size:9
Job 41:	s=7	p=65	d=1102	L=(532+-462-0)=70=			Pk=65	Total size:9
Job 42:	s=9	p=60	d=1142	L=(552+-462-0)=90=			Pk=60	Total size:9
Job 43:	s=1	p=5	d=1172	L=(527+-437-162)=-72=			Pk=35	Total size:0
Job 44:	s=2	p=47	d=1206	L=(540+-484-162)=-106=			Pk=47	Total size:0
Job 45:	s=1	p=79	d=1226	L=(599+-563-162)=-126=			Pk=79	Total size:0
Job 46:	s=2	p=28	d=1254	L=(599+-591-162)=-154=			Pk=28	Total size:0
Job 47:	s=2	p=93	d=1295	L=(651+-591-0)=60=			Pk=93	Total size:2

-2147483648
1.54839
91
2.39 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-13.csv
38
39
51
51
54
63
65
73
77
82
82
84
97
102
112
112
116
117
130
130
131
136
141
144
145
146
150
157
163
164
165
166
174
174
174
178
179
188
194
199
205
216
220
221
226
233
248
253
280
294
Job 0: due 38
Job 1: due 39
Job 2: due 51
Job 3: due 51
Job 4: due 54
Job 5: due 63
Job 6: due 65
Job 7: due 73
Job 8: due 77
Job 9: due 82
Job 10: due 82
Job 11: due 84
Job 12: due 97
Job 13: due 102
Job 14: due 112
Job 15: due 112
Job 16: due 116
Job 17: due 117
Job 18: due 130
Job 19: due 130
Job 20: due 131
Job 21: due 136
Job 22: due 141
Job 23: due 144
Job 24: due 145
Job 25: due 146
Job 26: due 150
Job 27: due 157
Job 28: due 163
Job 29: due 164
Job 30: due 165
Job 31: due 166
Job 32: due 174
Job 33: due 174
Job 34: due 174
Job 35: due 178
Job 36: due 179
Job 37: due 188
Job 38: due 194
Job 39: due 199
Job 40: due 205
Job 41: due 216
Job 42: due 220
Job 43: due 221
Job 44: due 226
Job 45: due 233
Job 46: due 248
Job 47: due 253
Job 48: due 280
Job 49: due 294
Ignore all jobs after 50
Lmaxinc before safe moves: 2295
Now using unsafety tolerance 0
New Lmaxincnew: 1100
Difference: 1195
Lmaxinc after safe moves: 1.21e+06
Initial solution:
0 1 2 3 4 1 1 7 8 0 10 2 12 13 3 15 16 2 18 19 20 21 18 23 24 25 15 21 16 29 30 8 8 33 34 34 16 29 38 18 40 41 34 18 24 19 33 41 21 30 
Updating LmaxLB to -33.1. C=4.9, d=38Updating LmaxLB to -30.5. C=8.5, d=39same duedate: 2
Updating LmaxLB to -23.2. C=27.8, d=51Updating LmaxLB to -21.2. C=32.8, d=54Updating LmaxLB to -18.8. C=54.2, d=73Updating LmaxLB to 12.4. C=89.4, d=77same duedate: 9
Updating LmaxLB to 33.4. C=115.4, d=82Updating LmaxLB to 34.4. C=118.4, d=84Updating LmaxLB to 60. C=162, d=102same duedate: 14
Updating LmaxLB to 70. C=182, d=112Updating LmaxLB to 132.5. C=248.5, d=116Updating LmaxLB to 136.7. C=253.7, d=117same duedate: 18
Updating LmaxLB to 160.3. C=290.3, d=130Updating LmaxLB to 179.3. C=310.3, d=131Updating LmaxLB to 206.7. C=342.7, d=136Updating LmaxLB to 231.7. C=372.7, d=141Updating LmaxLB to 284.7. C=428.7, d=144Updating LmaxLB to 348.5. C=493.5, d=145Updating LmaxLB to 395.2. C=541.2, d=146Updating LmaxLB to 400.5. C=550.5, d=150Updating LmaxLB to 401.7. C=558.7, d=157Updating LmaxLB to 414.9. C=577.9, d=163Updating LmaxLB to 440.7. C=604.7, d=164Updating LmaxLB to 511.7. C=676.7, d=165Updating LmaxLB to 515.1. C=681.1, d=166same duedate: 32
same duedate: 33
Updating LmaxLB to 599.7. C=773.7, d=174Updating LmaxLB to 614.3. C=792.3, d=178Updating LmaxLB to 621.6. C=800.6, d=179Updating LmaxLB to 631.8. C=819.8, d=188Updating LmaxLB to 693. C=887, d=194Updating LmaxLB to 720.7. C=925.7, d=205Updating LmaxLB to 748. C=968, d=220Updating LmaxLB to 752.7. C=973.7, d=221Updating LmaxLB to 754.9. C=980.9, d=226Updating LmaxLB to 778.4. C=1011.4, d=233Updating LmaxLB to 797.8. C=1045.8, d=248Updating LmaxLB to 828.8. C=1081.8, d=253Updating LmaxLB to 842.8. C=1122.8, d=280Lower bound on Lmax based on areas:0
Max Lksingle:2295
Max reduction:2295
Now adding static psi-2-in-2 dominance rules ...
Added 208 safe move dominance lazy constraints
Added 201 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2497 rows and 1685 columns.
MIP Presolve modified 2207 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 1312 rows, 864 columns, and 6037 nonzeros.
Reduced MIP has 813 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1314.
Problem contains 201 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      483.2794   222                    483.2794      607         
      0     0      542.2054   201                   Cuts: 189      866         
      0     0      588.1602   185                   Cuts: 189     1113         
      0     0      609.3101   234                   Cuts: 180     1321         
      0     0      616.3911   229                   Cuts: 147     1449         
      0     0      620.8552   255                   Cuts: 120     1570         
      0     0      623.7364   228                    Cuts: 90     1677         
      0     0      627.7163   235                    Cuts: 56     1761         
      0     0      628.2677   244                    Cuts: 54     1818         
      0     0      628.6486   245                    Cuts: 42     1841         
      0     0      629.0150   250                    Cuts: 19     1870         
      0     0      629.1821   225                    Cuts: 50     1899         
      0     0      629.3864   240                    Cuts: 57     1929         
      0     0      629.4213   240                Impl Bds: 13     1945         
      0     0      629.5584   250                    Cuts: 17     1974         
      0     0      629.5812   257                Impl Bds: 15     1990         
*     0+    0                         1077.0000      629.5812     1990   41.54%
      0     2      629.5812   250     1077.0000      629.6182     1990   41.54%
Elapsed time =   0.88 sec. (tree size =  0.00 MB, solutions = 1)
    100    98      749.4355   177     1077.0000      638.3760    13227   40.73%
    200   186      852.7589   134     1077.0000      654.4695    24865   39.23%
    300   282      901.8290   106     1077.0000      654.5166    32267   39.23%
    400   377      976.3458    76     1077.0000      654.7539    40018   39.21%
    500   472     1042.0615    15     1077.0000      655.0016    50973   39.18%
*   521+  324                         1075.0000      849.5069    53678   20.98%
*   531+  222                          992.0000      861.9178    54474   13.11%
*   591+  192                          991.0000      861.9178    58841   13.03%
    600   197      932.0968    68      991.0000      861.9178    59209   13.03%
    700   242      934.0698    93      991.0000      862.3504    64256   12.98%
*   741+  241                          980.0000      862.3504    67512   12.01%
    800   265      924.9372   130      980.0000      867.3302    70602   11.50%
*   841+  291                          978.0000      867.3302    71636   11.32%
    900   342      973.8467    72      978.0000      869.8059    73931   11.06%
   1000   427      918.5211   105      978.0000      871.4165    77131   10.90%
Elapsed time =  15.20 sec. (tree size =  2.91 MB, solutions = 6)
*  1041+  437                          974.0000      871.4165    78692   10.53%
   1100   491      947.7688    94      974.0000      874.1408    80763   10.25%
   1200   583      969.5927    67      974.0000      876.7426    83816    9.99%
*  1281+  583                          965.0000      878.3139    86678    8.98%
   1300   603      954.6101    55      965.0000      878.3139    86880    8.98%
   1400   687      938.8335    82      965.0000      884.5230    89714    8.34%
   1500   777      955.2635   137      965.0000      885.1022    93479    8.28%
   1600   865      949.5334    92      965.0000      887.4830    97277    8.03%
   1700   951      964.7074    25      965.0000      889.3519   100247    7.84%
   1800  1038      953.5619   122      965.0000      890.7179   105970    7.70%
   1900  1129      961.9405    41      965.0000      892.5689   109300    7.51%
   2000  1216      958.2597    50      965.0000      893.8428   111422    7.37%
Elapsed time =  21.48 sec. (tree size = 10.54 MB, solutions = 8)
   2100  1296      939.8575    82      965.0000      895.7311   114579    7.18%
   2200  1385      957.7710   140      965.0000      896.2799   117903    7.12%
   2300  1467      961.5868   113      965.0000      896.9560   121889    7.05%
   2400  1555      962.9956    99      965.0000      898.0996   126015    6.93%
   2500  1640      957.5534   110      965.0000      899.6810   130032    6.77%
   2600  1724      942.7470   157      965.0000      900.5736   135499    6.68%
   2700  1805      964.6759   118      965.0000      901.1165   140795    6.62%
   2800  1891      942.6563   130      965.0000      901.8652   143609    6.54%
   2900  1972      931.7915    94      965.0000      902.2167   147397    6.51%
   3000  2058      961.0251   143      965.0000      903.4770   151467    6.38%
Elapsed time =  27.74 sec. (tree size = 17.99 MB, solutions = 8)
   3100  2149      932.6940    90      965.0000      904.0480   154576    6.32%
   3200  2243      954.6409   110      965.0000      904.2696   157939    6.29%
   3300  2335      954.5519    56      965.0000      904.5813   162145    6.26%
   3400  2426      959.4812    30      965.0000      904.7407   165511    6.24%
   3500  2505      964.3713   100      965.0000      905.4760   169209    6.17%
*  3521+ 1768                          954.0000      905.6641   169984    5.07%
   3600  1837      931.6646    93      954.0000      906.2023   172450    5.01%
   3700  1921      930.7865   127      954.0000      906.5594   176482    4.97%
   3800  1991      925.1086    87      954.0000      907.1956   182508    4.91%
   3900  2082      941.9320    69      954.0000      907.4052   187746    4.88%
   4000  2166      932.9644   124      954.0000      908.1412   192669    4.81%
Elapsed time =  34.62 sec. (tree size = 20.94 MB, solutions = 9)
   4100  2251      923.2371   129      954.0000      908.2547   196929    4.80%
   4200  2332        cutoff            954.0000      908.5370   201870    4.77%
   4300  2394      943.6039    43      954.0000      909.6110   207905    4.65%
   4400  2465      949.3519   135      954.0000      910.0639   213052    4.61%
   4500  2534      943.8255   133      954.0000      910.2503   218338    4.59%
   4600  2603      951.2419    79      954.0000      910.5587   223530    4.55%
   4700  2675      951.2847    83      954.0000      910.9167   227455    4.52%
   4800  2746      948.4976   116      954.0000      911.4792   231789    4.46%
   4900  2799      931.6844    69      954.0000      912.8183   237218    4.32%
   5000  2874      946.1686   105      954.0000      913.2142   242307    4.28%
Elapsed time =  42.58 sec. (tree size = 26.16 MB, solutions = 9)
   5100  2955      947.7563    90      954.0000      913.3734   247027    4.26%
   5200  3036      950.7875    13      954.0000      913.7766   251320    4.22%
   5300  3108      927.6017   121      954.0000      914.2583   256181    4.17%
   5400  3182      947.4681    70      954.0000      914.4728   261521    4.14%
   5500  3243      931.4150    72      954.0000      914.9890   267255    4.09%
   5600  3321      925.3312   148      954.0000      915.1869   272464    4.07%
   5700  3394      942.7216   110      954.0000      915.5975   278471    4.03%
   5800  3477      945.5112    95      954.0000      915.7448   282275    4.01%
   5900  3559        cutoff            954.0000      915.8720   285986    4.00%
   6000  3639      950.7185   124      954.0000      916.1931   291536    3.96%
Elapsed time =  50.61 sec. (tree size = 34.77 MB, solutions = 9)
   6100  3722      941.1202   116      954.0000      916.5220   295129    3.93%
   6200  3793        cutoff            954.0000      916.7704   299504    3.90%
   6300  3863        cutoff            954.0000      917.0794   305289    3.87%
   6400  3928      947.9957   121      954.0000      917.7412   310017    3.80%
   6500  3998        cutoff            954.0000      918.0664   314352    3.77%
   6600  4062      941.2297   110      954.0000      918.2887   319532    3.74%
   6700  4118      936.1208   119      954.0000      918.8849   324410    3.68%
   6800  4178      939.4318    65      954.0000      919.1050   328943    3.66%
   6900  4248      945.3354    62      954.0000      919.4329   333271    3.62%
   7000  4314      938.1504   100      954.0000      919.5872   337397    3.61%
Elapsed time =  58.49 sec. (tree size = 43.77 MB, solutions = 9)
   7100  4371      941.8443   112      954.0000      919.9730   342470    3.57%
   7200  4422      942.0459   140      954.0000      920.4821   347857    3.51%
   7300  4476      937.9608    90      954.0000      921.1931   353596    3.44%
   7400  4552      952.8031   105      954.0000      921.4953   358333    3.41%
   7500  4596      946.4246   124      954.0000      921.9245   363841    3.36%
   7600  4660      952.0390   100      954.0000      922.1889   369177    3.33%
   7700  4710      941.9435   122      954.0000      922.4869   375053    3.30%
   7800  4759      947.3073   123      954.0000      922.7496   380768    3.28%
   7900  4817      947.1580    40      954.0000      922.9449   386417    3.26%
   8000  4878      949.5277   121      954.0000      923.2351   390750    3.22%
Elapsed time =  67.07 sec. (tree size = 48.47 MB, solutions = 9)
   8100  4929      952.0403    95      954.0000      923.4688   395991    3.20%
   8200  4996      940.1037   117      954.0000      923.7361   400870    3.17%
   8300  5047        cutoff            954.0000      924.0541   406279    3.14%
   8400  5130      946.5106   107      954.0000      924.2019   412749    3.12%
   8500  5194      950.8239   118      954.0000      924.3429   418610    3.11%
   8600  5254      943.9102   100      954.0000      924.6094   423366    3.08%
   8700  5313      949.8548   122      954.0000      925.0069   428908    3.04%
   8800  5382        cutoff            954.0000      925.1813   433570    3.02%
   8900  5435      952.2454    75      954.0000      925.4037   438993    3.00%
   9000  5495      939.9964    78      954.0000      925.6604   443579    2.97%
Elapsed time =  75.90 sec. (tree size = 57.72 MB, solutions = 9)
   9100  5539      949.5530    79      954.0000      926.0348   447872    2.93%
   9200  5610      949.1044   116      954.0000      926.3168   451714    2.90%
   9300  5660      947.9794    76      954.0000      926.5081   456206    2.88%
   9400  5721      939.7590   115      954.0000      926.5704   460904    2.88%
   9500  5788      953.2747    67      954.0000      926.7200   465914    2.86%
   9600  5833      952.7024    56      954.0000      926.9801   470166    2.83%
   9700  5864      948.1595   102      954.0000      927.3466   476662    2.79%
   9800  5916        cutoff            954.0000      927.6634   481692    2.76%
   9900  5963      952.5609   103      954.0000      927.9298   487980    2.73%
  10000  6025      951.4899    82      954.0000      928.2508   492908    2.70%
Elapsed time =  83.60 sec. (tree size = 64.08 MB, solutions = 9)
  10100  6080      945.7876   100      954.0000      928.3881   497405    2.68%
  10200  6157      943.4769   122      954.0000      928.4648   503091    2.68%
  10300  6221      950.3593   128      954.0000      928.5983   508746    2.66%
* 10310  5554      integral     0      952.0000      928.5983   508977    2.46%
  10400  5613      940.3349    54      952.0000      928.7582   513790    2.44%
* 10410+ 5217                          951.0000      928.7582   514046    2.34%
  10500  5255      940.0480    53      951.0000      928.9862   518781    2.31%
  10600  5309      944.8157    63      951.0000      929.1641   524129    2.30%
  10700  5357      946.4798   117      951.0000      929.3795   528807    2.27%
  10800  5400      944.0553   102      951.0000      929.5760   534694    2.25%
  10900  5448      942.4756    93      951.0000      929.7142   538902    2.24%
Elapsed time =  90.28 sec. (tree size = 56.78 MB, solutions = 11)
  11000  5483        cutoff            951.0000      929.9500   544923    2.21%
  11100  5530        cutoff            951.0000      930.2266   549392    2.18%
  11200  5573      937.4814   103      951.0000      930.3653   554234    2.17%
  11300  5624      945.0297   124      951.0000      930.4992   559285    2.16%
  11400  5706      949.7808    72      951.0000      930.5725   564993    2.15%
  11500  5757      950.1708   124      951.0000      930.7851   571146    2.13%
  11600  5794      944.2610    28      951.0000      931.0484   576750    2.10%
  11700  5844      950.6552    46      951.0000      931.1976   581503    2.08%
  11800  5896      949.2944    75      951.0000      931.3220   586774    2.07%
  11900  5943      945.8908    98      951.0000      931.4204   591301    2.06%
Elapsed time = 104.40 sec. (tree size = 62.73 MB, solutions = 11)
  12000  5964      945.3023    81      951.0000      931.6530   597458    2.03%
  12100  6003        cutoff            951.0000      931.7818   601587    2.02%
  12200  6019        cutoff            951.0000      931.9568   606444    2.00%
  12300  6067      946.8391   105      951.0000      932.0984   610923    1.99%
  12400  6099      937.1526    99      951.0000      932.2856   615546    1.97%
  12500  6139      946.0539   101      951.0000      932.4281   620303    1.95%
  12600  6170      948.9176    41      951.0000      932.5932   624902    1.94%
  12700  6202      950.3867    87      951.0000      932.7922   629744    1.91%
  12800  6203      949.4139    50      951.0000      933.1096   635441    1.88%
  12900  6229        cutoff            951.0000      933.2301   641903    1.87%
Elapsed time = 113.10 sec. (tree size = 66.16 MB, solutions = 11)
  13000  6284        cutoff            951.0000      933.2911   645220    1.86%
  13100  6319      939.3154   139      951.0000      933.3723   650316    1.85%
  13200  6354      946.9856   127      951.0000      933.5207   655350    1.84%
  13300  6406      950.9947    20      951.0000      933.6401   659473    1.83%
  13400  6456      940.7164   111      951.0000      933.7615   663682    1.81%
  13500  6517      950.7900    92      951.0000      933.8262   668147    1.81%
  13600  6562      944.5500   100      951.0000      933.9263   672620    1.80%
  13700  6602      949.6902    49      951.0000      934.0327   677435    1.78%
  13800  6649      942.3013    60      951.0000      934.1558   681629    1.77%
  13900  6688      948.5652   100      951.0000      934.2828   686476    1.76%
Elapsed time = 119.80 sec. (tree size = 71.42 MB, solutions = 11)
  14000  6751      947.0295    84      951.0000      934.3151   690896    1.75%
  14100  6777      945.3278    21      951.0000      934.4459   694928    1.74%
  14200  6827      941.4467   120      951.0000      934.5489   698913    1.73%
  14300  6864        cutoff            951.0000      934.6782   703547    1.72%
  14400  6893      947.1593    71      951.0000      934.8213   708889    1.70%
  14500  6914      950.5651    75      951.0000      934.9158   713784    1.69%
  14600  6919      940.6213   129      951.0000      935.0634   719253    1.68%
  14700  6965      950.0054    57      951.0000      935.1458   723474    1.67%
  14800  6973      949.1323    86      951.0000      935.2978   728813    1.65%
  14900  6994      950.6875    13      951.0000      935.4868   733873    1.63%
Elapsed time = 127.30 sec. (tree size = 74.76 MB, solutions = 11)
  15000  7002      950.3003   131      951.0000      935.6658   738696    1.61%
  15100  7042        cutoff            951.0000      935.7901   742930    1.60%
  15200  7088      948.2958    59      951.0000      935.8594   748108    1.59%
  15300  7115      946.2012    91      951.0000      935.9717   753637    1.58%
  15400  7156      937.3732   122      951.0000      936.0488   758066    1.57%
  15500  7165      945.5155   111      951.0000      936.2130   762477    1.55%
  15600  7198      946.4138    83      951.0000      936.3370   766980    1.54%
  15700  7234      948.0898   113      951.0000      936.4860   771184    1.53%
  15800  7254        cutoff            951.0000      936.5631   775318    1.52%
  15900  7320      945.4162    87      951.0000      936.5995   779150    1.51%
Elapsed time = 133.99 sec. (tree size = 77.34 MB, solutions = 11)
  16000  7338      949.7569    68      951.0000      936.7059   783931    1.50%
  16100  7361      947.6129   106      951.0000      936.7865   789727    1.49%
  16200  7387      948.3346   126      951.0000      936.8866   793515    1.48%
  16300  7409        cutoff            951.0000      936.9772   797942    1.47%
  16400  7433        cutoff            951.0000      937.0803   805300    1.46%
  16500  7453      949.3073    98      951.0000      937.1979   809967    1.45%
  16600  7454      948.5210   136      951.0000      937.3253   815423    1.44%
  16700  7480      945.6289    83      951.0000      937.4257   820591    1.43%
  16800  7499      948.8750    17      951.0000      937.5393   825578    1.42%
  16900  7517        cutoff            951.0000      937.6295   829652    1.41%
Elapsed time = 142.14 sec. (tree size = 78.86 MB, solutions = 11)
  17000  7549      946.0040    56      951.0000      937.7203   834191    1.40%
  17100  7566      950.1983   105      951.0000      937.8363   839731    1.38%
  17200  7568      949.8400    97      951.0000      937.9212   844758    1.38%
  17300  7577        cutoff            951.0000      937.9950   850752    1.37%
  17400  7596      944.2447   110      951.0000      938.1197   856726    1.35%
  17500  7623        cutoff            951.0000      938.1554   861178    1.35%
  17600  7652      945.1474    95      951.0000      938.2246   865834    1.34%
  17700  7678      947.3209   101      951.0000      938.3137   870466    1.33%
  17800  7720      941.2187   119      951.0000      938.3610   874217    1.33%
  17900  7757      946.4460    99      951.0000      938.4163   879432    1.32%
Elapsed time = 149.87 sec. (tree size = 81.34 MB, solutions = 11)
  18000  7757      946.5553   102      951.0000      938.5215   883528    1.31%
  18100  7786      939.1848   135      951.0000      938.5679   887167    1.31%
  18200  7778        cutoff            951.0000      938.7038   891991    1.29%
  18300  7797      947.5653    83      951.0000      938.7708   896540    1.29%
  18400  7808      943.0114    96      951.0000      938.8668   902199    1.28%
  18500  7846        cutoff            951.0000      938.9333   906896    1.27%
  18600  7853      942.5809   100      951.0000      939.0222   911914    1.26%
  18700  7881        cutoff            951.0000      939.0845   915752    1.25%
  18800  7876      942.3991    56      951.0000      939.2015   919989    1.24%
  18900  7882      947.4110    98      951.0000      939.3110   924452    1.23%
Elapsed time = 157.15 sec. (tree size = 82.87 MB, solutions = 11)
  19000  7886        cutoff            951.0000      939.4154   929559    1.22%
  19100  7900      942.3718    35      951.0000      939.4905   933044    1.21%
  19200  7909        cutoff            951.0000      939.5607   937840    1.20%
  19300  7900      945.5973   119      951.0000      939.6700   942403    1.19%
  19400  7902      947.8939    92      951.0000      939.7581   946303    1.18%
  19500  7923      949.9403   107      951.0000      939.8191   950933    1.18%
  19600  7956        cutoff            951.0000      939.8756   954460    1.17%
  19700  7958      950.3930   119      951.0000      939.9597   960251    1.16%
  19800  7971        cutoff            951.0000      940.0281   964235    1.15%
  19900  7962        cutoff            951.0000      940.1206   969876    1.14%
Elapsed time = 164.14 sec. (tree size = 84.68 MB, solutions = 11)
  20000  7963        cutoff            951.0000      940.2149   974427    1.13%
  20100  7955      949.1790    74      951.0000      940.3325   978531    1.12%
  20200  7978      948.5667    56      951.0000      940.4006   982710    1.11%
  20300  7996      947.8903   111      951.0000      940.4804   987278    1.11%
  20400  7983      944.3918   106      951.0000      940.5822   991739    1.10%
  20500  8009        cutoff            951.0000      940.6495   995659    1.09%
  20600  7993        cutoff            951.0000      940.7517   999817    1.08%
  20700  7996        cutoff            951.0000      940.8247  1004360    1.07%
  20800  8008        cutoff            951.0000      940.8876  1008629    1.06%
  20900  8005        cutoff            951.0000      940.9927  1013285    1.05%
Elapsed time = 170.54 sec. (tree size = 84.28 MB, solutions = 11)
  21000  8013        cutoff            951.0000      941.0606  1017217    1.05%
  21100  8011        cutoff            951.0000      941.1340  1021941    1.04%
  21200  8006      948.7461   114      951.0000      941.2160  1027513    1.03%
  21300  8006        cutoff            951.0000      941.2923  1031577    1.02%
  21400  8001      950.2060    90      951.0000      941.3581  1037094    1.01%
  21500  7986        cutoff            951.0000      941.4387  1041433    1.01%
  21600  7965      950.2303    95      951.0000      941.5342  1046107    1.00%
  21700  7955        cutoff            951.0000      941.5997  1050541    0.99%
  21800  7964      941.9696    52      951.0000      941.6683  1054628    0.98%
  21900  7970      946.5597   105      951.0000      941.7503  1059172    0.97%
Elapsed time = 177.49 sec. (tree size = 83.02 MB, solutions = 11)
  22000  7986      949.2125    87      951.0000      941.7996  1063829    0.97%
  22100  7992        cutoff            951.0000      941.8883  1068001    0.96%
  22200  8008      948.8230   105      951.0000      941.9599  1071494    0.95%
  22300  8013      946.4394   102      951.0000      942.0102  1076341    0.95%
  22400  8003      950.4166    91      951.0000      942.0871  1080449    0.94%
  22500  7975        cutoff            951.0000      942.1581  1083902    0.93%
  22600  7994      949.3915    71      951.0000      942.2096  1086715    0.92%
  22700  7988        cutoff            951.0000      942.2667  1091340    0.92%
  22800  7966      946.9854   137      951.0000      942.3511  1095912    0.91%
  22900  7952      947.6723    98      951.0000      942.4632  1099705    0.90%
Elapsed time = 184.13 sec. (tree size = 81.87 MB, solutions = 11)
  23000  7944        cutoff            951.0000      942.5200  1104665    0.89%
  23100  7962      947.7036   100      951.0000      942.5746  1109049    0.89%
  23200  7942        cutoff            951.0000      942.6301  1112982    0.88%
  23300  7916        cutoff            951.0000      942.7042  1117589    0.87%
  23400  7912        cutoff            951.0000      942.7776  1121608    0.86%
* 23473  6900      integral     0      950.0000      942.8138  1125030    0.76%
  23500  6892        cutoff            950.0000      942.8360  1126140    0.75%
  23600  6857      948.2569    35      950.0000      942.9267  1130844    0.74%
  23700  6841      948.2846    50      950.0000      942.9875  1135092    0.74%
* 23774  4333      integral     0      948.0000      943.0390  1137773    0.52%
Elapsed time = 190.48 sec. (tree size = 43.80 MB, solutions = 13)
  23800  4322      943.7801    94      948.0000      943.0613  1138673    0.52%
  23900  4276        cutoff            948.0000      943.1409  1141894    0.51%
  24000  4222      947.7500    33      948.0000      943.2308  1146033    0.50%
  24100  4179        cutoff            948.0000      943.3375  1148856    0.49%
  24200  4108        cutoff            948.0000      943.4546  1152373    0.48%
  24300  4037        cutoff            948.0000      943.6092  1155468    0.46%
  24400  3968        cutoff            948.0000      943.7006  1158439    0.45%
  24500  3909        cutoff            948.0000      943.8074  1161892    0.44%
  24600  3843        cutoff            948.0000      943.9134  1165077    0.43%
  24700  3761        cutoff            948.0000      944.0112  1167785    0.42%
Elapsed time = 195.52 sec. (tree size = 37.98 MB, solutions = 13)
  24800  3693      945.6662   126      948.0000      944.1314  1169961    0.41%
  24900  3619        cutoff            948.0000      944.2448  1172606    0.40%
  25000  3546        cutoff            948.0000      944.3644  1175051    0.38%
  25100  3494        cutoff            948.0000      944.4516  1178227    0.37%
  25200  3416        cutoff            948.0000      944.5637  1180746    0.36%
  25300  3362      947.0542    59      948.0000      944.6443  1183538    0.35%
  25400  3283        cutoff            948.0000      944.7608  1185631    0.34%
  25500  3222        cutoff            948.0000      944.8417  1188521    0.33%
  25600  3160      947.0914   103      948.0000      944.9186  1191088    0.33%
  25700  3087        cutoff            948.0000      945.0080  1193427    0.32%
Elapsed time = 200.02 sec. (tree size = 30.60 MB, solutions = 13)
  25800  3017        cutoff            948.0000      945.1131  1196189    0.30%
  25900  2952        cutoff            948.0000      945.2073  1198475    0.29%
  26000  2866        cutoff            948.0000      945.3007  1200378    0.28%
  26100  2792        cutoff            948.0000      945.3947  1202478    0.27%
  26200  2713        cutoff            948.0000      945.4777  1204772    0.27%
  26300  2656      945.7805    90      948.0000      945.5458  1206769    0.26%
  26400  2582        cutoff            948.0000      945.6224  1208591    0.25%
  26500  2509        cutoff            948.0000      945.7016  1211298    0.24%
  26600  2422        cutoff            948.0000      945.7958  1213366    0.23%
  26700  2336      946.5816   100      948.0000      945.8890  1214738    0.22%
Elapsed time = 203.78 sec. (tree size = 23.15 MB, solutions = 13)
  26800  2245        cutoff            948.0000      945.9818  1216565    0.21%
  26900  2159      947.0297   109      948.0000      946.0772  1218028    0.20%
  27000  2089        cutoff            948.0000      946.1564  1220108    0.19%
  27100  2002        cutoff            948.0000      946.2484  1221945    0.18%
  27200  1904        cutoff            948.0000      946.3419  1223308    0.17%
  27300  1821        cutoff            948.0000      946.4284  1224957    0.17%
  27400  1729        cutoff            948.0000      946.5078  1226240    0.16%
  27500  1641        cutoff            948.0000      946.5844  1227445    0.15%
  27600  1551        cutoff            948.0000      946.6568  1229217    0.14%
  27700  1463        cutoff            948.0000      946.7184  1230376    0.14%
Elapsed time = 206.77 sec. (tree size = 14.48 MB, solutions = 13)
  27800  1366        cutoff            948.0000      946.8181  1231586    0.12%
  27900  1273        cutoff            948.0000      946.9024  1232651    0.12%
  28000  1180        cutoff            948.0000      946.9751  1233580    0.11%
  28100  1080        cutoff            948.0000      947.0813  1234302    0.10%
  28200   982        cutoff            948.0000      947.1636  1235010    0.09%
  28300   884        cutoff            948.0000      947.2440  1235556    0.08%
  28400   786        cutoff            948.0000      947.3222  1236404    0.07%
  28500   686        cutoff            948.0000      947.4053  1237086    0.06%
  28600   586        cutoff            948.0000      947.4812  1237653    0.05%
  28700   486        cutoff            948.0000      947.5786  1238202    0.04%
Elapsed time = 208.82 sec. (tree size =  4.71 MB, solutions = 13)
  28800   387        cutoff            948.0000      947.6663  1238732    0.04%
  28900   289        cutoff            948.0000      947.7575  1239098    0.03%
  29000   191        cutoff            948.0000      947.8517  1239429    0.02%

Clique cuts applied:  11
Cover cuts applied:  122
Implied bound cuts applied:  141
Flow cuts applied:  49
Mixed integer rounding cuts applied:  149
Zero-half cuts applied:  31
Gomory fractional cuts applied:  32
Lazy constraints applied:  24
Optimal
Lmax: 948
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 1
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 2
Job 9 into batch 0
Job 10 into batch 10
Job 11 into batch 6
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 10
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 1
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 15
Job 23 into batch 18
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 3
Job 27 into batch 21
Job 28 into batch 28
Job 29 into batch 21
Job 30 into batch 30
Job 31 into batch 2
Job 32 into batch 25
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 34
Job 36 into batch 21
Job 37 into batch 16
Job 38 into batch 28
Job 39 into batch 39
Job 40 into batch 39
Job 41 into batch 28
Job 42 into batch 33
Job 43 into batch 19
Job 44 into batch 24
Job 45 into batch 19
Job 46 into batch 34
Job 47 into batch 47
Job 48 into batch 47
Job 49 into batch 30
Job 0:	s=7	p=7	d=38	L=(-31+0-0)=-31=			Pk=7	Total size:8
Job 1:	s=4	p=9	d=39	L=(-23+3-0)=-20=			Pk=13	Total size:10
Job 2:	s=1	p=18	d=51	L=(-17+28-0)=11=			Pk=44	Total size:10
Job 3:	s=7	p=25	d=51	L=(8+33-0)=41=			Pk=31	Total size:10
Job 4:	s=10	p=5	d=54	L=(10+33-0)=43=			Pk=5	Total size:10
Job 5:	s=2	p=10	d=63	L=(11+23-1100)=-1066=			Pk=10	Total size:0
Job 6:	s=4	p=6	d=65	L=(15+23-0)=38=			Pk=6	Total size:9
Job 7:	s=10	p=17	d=73	L=(24+23-0)=47=			Pk=17	Total size:10
Job 8:	s=8	p=44	d=77	L=(64+-21-1100)=-1057=			Pk=44	Total size:0
Job 9:	s=1	p=4	d=82	L=(63+-25-1100)=-1062=			Pk=4	Total size:0
Job 10:	s=8	p=32	d=82	L=(95+-25-0)=70=			Pk=32	Total size:10
Job 11:	s=5	p=6	d=84	L=(99+-31-1100)=-1032=			Pk=6	Total size:0
Job 12:	s=4	p=4	d=97	L=(90+-31-2.44249e-13)=59=			Pk=4	Total size:4
Job 13:	s=10	p=42	d=102	L=(127+-31-0)=96=			Pk=42	Total size:10
Job 14:	s=2	p=25	d=112	L=(142+-55-1100)=-1013=			Pk=25	Total size:0
Job 15:	s=5	p=30	d=112	L=(172+-25-0)=147=			Pk=60	Total size:10
Job 16:	s=7	p=95	d=116	L=(263+-25-0)=238=			Pk=95	Total size:10
Job 17:	s=4	p=13	d=117	L=(275+-38-1100)=-863=			Pk=13	Total size:0
Job 18:	s=2	p=59	d=130	L=(321+-27-0)=294=			Pk=70	Total size:10
Job 19:	s=4	p=62	d=130	L=(383+-27-0)=356=			Pk=62	Total size:10
Job 20:	s=8	p=25	d=131	L=(407+-27-0)=380=			Pk=25	Total size:8
Job 21:	s=4	p=81	d=136	L=(483+-24-0)=459=			Pk=83	Total size:10
Job 22:	s=5	p=60	d=141	L=(538+-84-1100)=-646=			Pk=60	Total size:0
Job 23:	s=8	p=70	d=144	L=(605+-154-1100)=-649=			Pk=70	Total size:0
Job 24:	s=9	p=72	d=145	L=(676+-154-0)=522=			Pk=72	Total size:10
Job 25:	s=9	p=53	d=146	L=(728+-154-0)=574=			Pk=53	Total size:10
Job 26:	s=3	p=31	d=150	L=(755+-185-1100)=-530=			Pk=31	Total size:0
Job 27:	s=1	p=82	d=157	L=(830+-267-1100)=-537=			Pk=82	Total size:0
Job 28:	s=2	p=96	d=163	L=(920+-264-0)=656=			Pk=99	Total size:10
Job 29:	s=4	p=67	d=164	L=(986+-331-1100)=-445=			Pk=67	Total size:0
Job 30:	s=9	p=80	d=165	L=(1065+-331-0)=734=			Pk=80	Total size:10
Job 31:	s=1	p=44	d=166	L=(1108+-375-1100)=-367=			Pk=44	Total size:0
Job 32:	s=1	p=36	d=174	L=(1136+-411-1100)=-375=			Pk=36	Total size:0
Job 33:	s=6	p=87	d=174	L=(1223+-411-0)=812=			Pk=87	Total size:10
Job 34:	s=4	p=92	d=174	L=(1315+-410-0)=905=			Pk=93	Total size:10
Job 35:	s=2	p=93	d=178	L=(1404+-503-1100)=-199=			Pk=93	Total size:0
Job 36:	s=1	p=83	d=179	L=(1486+-586-1100)=-200=			Pk=83	Total size:0
Job 37:	s=3	p=64	d=188	L=(1541+-650-1100)=-209=			Pk=64	Total size:0
Job 38:	s=7	p=96	d=194	L=(1631+-746-1100)=-215=			Pk=96	Total size:0
Job 39:	s=1	p=36	d=199	L=(1662+-743-0)=919=			Pk=39	Total size:10
Job 40:	s=9	p=39	d=205	L=(1695+-782-1100)=-187=			Pk=39	Total size:0
Job 41:	s=1	p=99	d=216	L=(1783+-881-1100)=-198=			Pk=99	Total size:0
Job 42:	s=4	p=81	d=220	L=(1860+-962-1100)=-202=			Pk=81	Total size:0
Job 43:	s=1	p=57	d=221	L=(1916+-1019-1100)=-203=			Pk=57	Total size:0
Job 44:	s=1	p=72	d=226	L=(1983+-1091-1100)=-208=			Pk=72	Total size:0
Job 45:	s=5	p=61	d=233	L=(2037+-1152-1100)=-215=			Pk=61	Total size:0
Job 46:	s=4	p=86	d=248	L=(2108+-1238-1100)=-230=			Pk=86	Total size:0
Job 47:	s=5	p=72	d=253	L=(2175+-1228-0)=947=			Pk=82	Total size:10
Job 48:	s=5	p=82	d=280	L=(2230+-1310-1100)=-180=			Pk=82	Total size:0
Job 49:	s=1	p=79	d=294	L=(2295+-1389-1100)=-194=			Pk=79	Total size:0

0
2.17391
948
210.66 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-14.csv
84
87
114
125
129
146
150
153
156
158
165
171
185
186
192
202
207
208
232
233
243
246
250
264
265
276
277
279
281
281
285
298
298
299
322
325
325
326
328
340
348
371
411
415
424
428
432
440
445
513
Job 0: due 84
Job 1: due 87
Job 2: due 114
Job 3: due 125
Job 4: due 129
Job 5: due 146
Job 6: due 150
Job 7: due 153
Job 8: due 156
Job 9: due 158
Job 10: due 165
Job 11: due 171
Job 12: due 185
Job 13: due 186
Job 14: due 192
Job 15: due 202
Job 16: due 207
Job 17: due 208
Job 18: due 232
Job 19: due 233
Job 20: due 243
Job 21: due 246
Job 22: due 250
Job 23: due 264
Job 24: due 265
Job 25: due 276
Job 26: due 277
Job 27: due 279
Job 28: due 281
Job 29: due 281
Job 30: due 285
Job 31: due 298
Job 32: due 298
Job 33: due 299
Job 34: due 322
Job 35: due 325
Job 36: due 325
Job 37: due 326
Job 38: due 328
Job 39: due 340
Job 40: due 348
Job 41: due 371
Job 42: due 411
Job 43: due 415
Job 44: due 424
Job 45: due 428
Job 46: due 432
Job 47: due 440
Job 48: due 445
Job 49: due 513
Ignore all jobs after 50
Lmaxinc before safe moves: 2429
Now using unsafety tolerance 0
New Lmaxincnew: 1546
Difference: 883
Lmaxinc after safe moves: 2.39012e+06
Initial solution:
0 1 2 2 4 5 6 7 8 9 10 11 12 6 14 9 16 17 18 19 20 21 22 23 11 25 26 6 28 11 21 4 32 9 28 35 36 37 6 39 40 41 42 14 44 45 32 19 48 36 
Updating LmaxLB to -65.1. C=18.9, d=84Updating LmaxLB to -51.3. C=77.7, d=129Updating LmaxLB to -48.3. C=97.7, d=146Updating LmaxLB to -24.7. C=125.3, d=150Updating LmaxLB to -15.1. C=137.9, d=153Updating LmaxLB to 53. C=209, d=156Updating LmaxLB to 108.6. C=266.6, d=158Updating LmaxLB to 130.8. C=301.8, d=171Updating LmaxLB to 143.8. C=328.8, d=185Updating LmaxLB to 150.2. C=336.2, d=186Updating LmaxLB to 194.6. C=386.6, d=192Updating LmaxLB to 203.8. C=405.8, d=202Updating LmaxLB to 261.8. C=468.8, d=207Updating LmaxLB to 327.8. C=535.8, d=208Updating LmaxLB to 346.1. C=578.1, d=232Updating LmaxLB to 382.1. C=615.1, d=233Updating LmaxLB to 455.1. C=698.1, d=243Updating LmaxLB to 461.7. C=707.7, d=246Updating LmaxLB to 473. C=723, d=250Updating LmaxLB to 482. C=746, d=264Updating LmaxLB to 539.2. C=804.2, d=265Updating LmaxLB to 568.1. C=844.1, d=276Updating LmaxLB to 615.1. C=892.1, d=277Updating LmaxLB to 616.1. C=895.1, d=279same duedate: 28
Updating LmaxLB to 642.5. C=923.5, d=281Updating LmaxLB to 658.1. C=943.1, d=285same duedate: 31
Updating LmaxLB to 712.3. C=1010.3, d=298Updating LmaxLB to 728.9. C=1027.9, d=299Updating LmaxLB to 744.4. C=1066.4, d=322same duedate: 35
Updating LmaxLB to 807.8. C=1132.8, d=325Updating LmaxLB to 868.8. C=1194.8, d=326Updating LmaxLB to 871.3. C=1199.3, d=328Updating LmaxLB to 889.3. C=1229.3, d=340Updating LmaxLB to 919.8. C=1267.8, d=348Updating LmaxLB to 962.8. C=1333.8, d=371Updating LmaxLB to 963.8. C=1378.8, d=415Updating LmaxLB to 1010.8. C=1434.8, d=424Updating LmaxLB to 1034.7. C=1462.7, d=428Updating LmaxLB to 1055. C=1487, d=432Updating LmaxLB to 1078.5. C=1518.5, d=440Updating LmaxLB to 1151.8. C=1596.8, d=445Lower bound on Lmax based on areas:0
Max Lksingle:2429
Max reduction:2429
Now adding static psi-2-in-2 dominance rules ...
Added 357 safe move dominance lazy constraints
Added 176 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3131 rows and 1986 columns.
MIP Presolve modified 1936 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 736 rows, 561 columns, and 3046 nonzeros.
Reduced MIP has 510 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 4 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.03 sec.
Probing time =    0.00 sec.
Clique table members: 1198.
Problem contains 176 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0     1043.1421   126                   1043.1421      322         
      0     0     1148.2345   119                   Cuts: 135      501         
      0     0     1189.5328   148                   Cuts: 113      674         
      0     0     1203.8919   132                   Cuts: 100      794         
*     0+    0                         1461.0000     1203.8919      794   17.60%
      0     0     1206.6205   135     1461.0000      Cuts: 81      880   17.41%
      0     0     1208.4891   127     1461.0000      Cuts: 56      949   17.28%
      0     0     1209.6768   126     1461.0000      Cuts: 21      986   17.20%
      0     0     1211.0473   125     1461.0000      Cuts: 19     1012   17.11%
      0     0     1211.1967   130     1461.0000      Cuts: 13     1025   17.10%
      0     0     1211.2079   128     1461.0000      Cuts: 38     1033   17.10%
*     0+    0                         1422.0000     1211.2079     1033   14.82%
*     0+    0                         1397.0000     1211.2079     1033   13.30%
      0     2     1211.2079   127     1397.0000     1211.2540     1033   13.30%
Elapsed time =   0.32 sec. (tree size =  0.00 MB, solutions = 3)
*   100+   86                         1392.0000     1214.1622     5069   12.78%
    100    88     1329.2422    54     1392.0000     1214.1622     5069   12.78%
*   160+  114                         1356.0000     1214.1679     7545   10.46%
    200   150     1318.3391    59     1356.0000     1214.6064     9892   10.43%
*   260+  196                         1347.0000     1217.8437    12118    9.59%
    300   223     1267.3348   107     1347.0000     1218.0688    13364    9.57%
    400   314     1323.8061    45     1347.0000     1220.0462    17019    9.42%
*   477+  253                         1333.0000     1313.0981    21549    1.49%
*   477+  168                         1330.0000     1313.4442    21610    1.24%
*   477+  112                         1322.0000     1319.0177    22624    0.23%

Clique cuts applied:  10
Cover cuts applied:  18
Implied bound cuts applied:  39
Flow cuts applied:  6
Mixed integer rounding cuts applied:  46
Zero-half cuts applied:  21
Gomory fractional cuts applied:  9
Lazy constraints applied:  2
Optimal
Lmax: 1322
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 2
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 4
Job 14 into batch 14
Job 15 into batch 9
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 11
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 16
Job 28 into batch 25
Job 29 into batch 11
Job 30 into batch 6
Job 31 into batch 26
Job 32 into batch 32
Job 33 into batch 9
Job 34 into batch 21
Job 35 into batch 35
Job 36 into batch 35
Job 37 into batch 37
Job 38 into batch 8
Job 39 into batch 39
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 39
Job 43 into batch 43
Job 44 into batch 43
Job 45 into batch 32
Job 46 into batch 14
Job 47 into batch 19
Job 48 into batch 48
Job 49 into batch 49
Job 0:	s=9	p=21	d=84	L=(-63+0-0)=-63=			Pk=21	Total size:9
Job 1:	s=7	p=4	d=87	L=(-62+0-0)=-62=			Pk=4	Total size:7
Job 2:	s=7	p=10	d=114	L=(-79+0-0)=-79=			Pk=10	Total size:9
Job 3:	s=2	p=9	d=125	L=(-81+-9-1546)=-1636=			Pk=9	Total size:0
Job 4:	s=8	p=59	d=129	L=(-26+-8-0)=-34=			Pk=59	Total size:10
Job 5:	s=10	p=20	d=146	L=(-23+-8-0)=-31=			Pk=20	Total size:10
Job 6:	s=6	p=46	d=150	L=(19+-5-0)=14=			Pk=49	Total size:10
Job 7:	s=6	p=21	d=153	L=(37+-4-0)=33=			Pk=21	Total size:6
Job 8:	s=9	p=79	d=156	L=(113+-4-0)=109=			Pk=79	Total size:10
Job 9:	s=6	p=96	d=158	L=(207+-4-0)=203=			Pk=96	Total size:10
Job 10:	s=5	p=11	d=165	L=(211+-3-0)=208=			Pk=11	Total size:5
Job 11:	s=3	p=99	d=171	L=(304+-3-0)=301=			Pk=99	Total size:10
Job 12:	s=6	p=45	d=185	L=(335+-3-0)=332=			Pk=45	Total size:6
Job 13:	s=2	p=37	d=186	L=(371+-39-1546)=-1214=			Pk=37	Total size:0
Job 14:	s=7	p=72	d=192	L=(437+-30-0)=407=			Pk=81	Total size:10
Job 15:	s=2	p=96	d=202	L=(523+-126-1546)=-1149=			Pk=96	Total size:0
Job 16:	s=9	p=70	d=207	L=(588+-126-0)=462=			Pk=70	Total size:10
Job 17:	s=10	p=67	d=208	L=(654+-126-0)=528=			Pk=67	Total size:10
Job 18:	s=9	p=47	d=232	L=(677+-126-0)=551=			Pk=47	Total size:9
Job 19:	s=5	p=74	d=233	L=(750+-126-0)=624=			Pk=74	Total size:10
Job 20:	s=10	p=83	d=243	L=(823+-126-0)=697=			Pk=83	Total size:10
Job 21:	s=2	p=48	d=246	L=(868+-119-0)=749=			Pk=55	Total size:9
Job 22:	s=9	p=17	d=250	L=(881+-119-0)=762=			Pk=17	Total size:9
Job 23:	s=10	p=23	d=264	L=(890+-119-0)=771=			Pk=23	Total size:10
Job 24:	s=6	p=97	d=265	L=(986+-216-1546)=-776=			Pk=97	Total size:0
Job 25:	s=7	p=57	d=276	L=(1032+-211-0)=821=			Pk=62	Total size:10
Job 26:	s=8	p=60	d=277	L=(1091+-211-0)=880=			Pk=60	Total size:10
Job 27:	s=1	p=30	d=279	L=(1119+-241-1546)=-668=			Pk=30	Total size:0
Job 28:	s=3	p=62	d=281	L=(1179+-303-1546)=-670=			Pk=62	Total size:0
Job 29:	s=1	p=98	d=281	L=(1277+-401-1546)=-670=			Pk=98	Total size:0
Job 30:	s=4	p=49	d=285	L=(1322+-450-1546)=-674=			Pk=49	Total size:0
Job 31:	s=2	p=49	d=298	L=(1358+-499-1546)=-687=			Pk=49	Total size:0
Job 32:	s=7	p=82	d=298	L=(1440+-488-0)=952=			Pk=93	Total size:10
Job 33:	s=2	p=88	d=299	L=(1527+-576-1546)=-595=			Pk=88	Total size:0
Job 34:	s=7	p=55	d=322	L=(1559+-631-1546)=-618=			Pk=55	Total size:0
Job 35:	s=7	p=70	d=325	L=(1626+-614-0)=1012=			Pk=87	Total size:9
Job 36:	s=2	p=87	d=325	L=(1713+-701-1546)=-534=			Pk=87	Total size:0
Job 37:	s=10	p=62	d=326	L=(1774+-701-0)=1073=			Pk=62	Total size:10
Job 38:	s=1	p=45	d=328	L=(1817+-746-1546)=-475=			Pk=45	Total size:0
Job 39:	s=6	p=50	d=340	L=(1855+-720-0)=1135=			Pk=76	Total size:10
Job 40:	s=7	p=55	d=348	L=(1902+-720-0)=1182=			Pk=55	Total size:7
Job 41:	s=10	p=66	d=371	L=(1945+-720-0)=1225=			Pk=66	Total size:10
Job 42:	s=4	p=76	d=411	L=(1981+-796-1546)=-361=			Pk=76	Total size:0
Job 43:	s=2	p=73	d=415	L=(2050+-796-0)=1254=			Pk=73	Total size:10
Job 44:	s=8	p=70	d=424	L=(2111+-866-1546)=-301=			Pk=70	Total size:0
Job 45:	s=3	p=93	d=428	L=(2200+-959-1546)=-305=			Pk=93	Total size:0
Job 46:	s=3	p=81	d=432	L=(2277+-1040-1546)=-309=			Pk=81	Total size:0
Job 47:	s=5	p=63	d=440	L=(2332+-1103-1546)=-317=			Pk=63	Total size:0
Job 48:	s=9	p=87	d=445	L=(2414+-1103-0)=1311=			Pk=87	Total size:9
Job 49:	s=7	p=83	d=513	L=(2429+-1103-0)=1326=			Pk=83	Total size:7

0
1.5625
1322
3.98 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-15.csv
148
170
191
191
208
230
268
297
310
316
317
353
356
389
389
456
643
671
700
719
767
820
854
881
903
925
934
941
942
1012
1021
1153
1179
1183
1184
1278
1282
1283
1299
1307
1356
1396
1404
1418
1451
1501
1514
1538
1542
1576
Job 0: due 148
Job 1: due 170
Job 2: due 191
Job 3: due 191
Job 4: due 208
Job 5: due 230
Job 6: due 268
Job 7: due 297
Job 8: due 310
Job 9: due 316
Job 10: due 317
Job 11: due 353
Job 12: due 356
Job 13: due 389
Job 14: due 389
Job 15: due 456
Job 16: due 643
Job 17: due 671
Job 18: due 700
Job 19: due 719
Job 20: due 767
Job 21: due 820
Job 22: due 854
Job 23: due 881
Job 24: due 903
Job 25: due 925
Job 26: due 934
Job 27: due 941
Job 28: due 942
Job 29: due 1012
Job 30: due 1021
Job 31: due 1153
Job 32: due 1179
Job 33: due 1183
Job 34: due 1184
Job 35: due 1278
Job 36: due 1282
Job 37: due 1283
Job 38: due 1299
Job 39: due 1307
Job 40: due 1356
Job 41: due 1396
Job 42: due 1404
Job 43: due 1418
Job 44: due 1451
Job 45: due 1501
Job 46: due 1514
Job 47: due 1538
Job 48: due 1542
Job 49: due 1576
Ignore all jobs after 50
Lmaxinc before safe moves: 886
Now using unsafety tolerance 0
New Lmaxincnew: 199
Difference: 687
Lmaxinc after safe moves: 39601
Initial solution:
0 1 2 0 4 4 6 7 8 9 1 11 12 13 14 15 16 17 18 8 20 21 22 23 8 6 20 1 28 21 30 31 32 33 34 14 20 9 38 39 12 41 42 43 44 1 15 47 48 49 
Updating LmaxLB to -121.9. C=26.1, d=148Updating LmaxLB to -108.4. C=61.6, d=170same duedate: 2
Updating LmaxLB to -99.6. C=108.4, d=208Updating LmaxLB to -69.4. C=246.6, d=316Updating LmaxLB to -57.8. C=259.2, d=317Updating LmaxLB to -46.3. C=309.7, d=356same duedate: 13
Updating LmaxLB to -9.10004. C=379.9, d=389Updating LmaxLB to -4.90002. C=451.1, d=456Lower bound on Lmax based on areas:-2147483648
Max Lksingle:886
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 510 safe move dominance lazy constraints
Added 218 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3289 rows and 2057 columns.
MIP Presolve modified 1725 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 579 rows, 490 columns, and 3340 nonzeros.
Reduced MIP has 439 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.03 sec.
Probing time =    0.00 sec.
Clique table members: 1349.
Problem contains 218 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0       -1.9962    73                     -1.9962      345         
      0     0       37.0915    55                    Cuts: 39      437         
      0     0       54.3488    43                    Cuts: 45      551         
      0     0       57.4487    78                    Cuts: 34      684         
      0     0       64.8983    77                    Cuts: 24      732         
      0     0       67.0190    89                    Cuts: 44      767         
      0     0       68.3464    89                    Cuts: 26      790         
      0     0       69.1744    86                    Cuts: 19      808         
      0     0       70.5232    82                     Cuts: 9      820         
      0     0       70.9486    86                    Cuts: 11      832         
      0     0       71.0920    87                 Impl Bds: 4      836         
      0     0       71.1152    87                 Impl Bds: 1      837         
      0     0       71.1539    88                 Impl Bds: 2      839         
      0     0       71.1641    88                     Cuts: 8      842         
      0     2       73.0322    90                     73.0322      842         
Elapsed time =   0.22 sec. (tree size =  0.00 MB, solutions = 0)
    100    86      187.8464    30                     78.4972     3944         
    200   162      130.0000    38                     90.8304     6737         
*   239   180      integral     0      198.0000       90.8304     7540   54.13%
    300   233      194.9109    23      198.0000       92.7640     8770   53.15%
    400   311      126.0075    73      198.0000       95.7649    11428   51.63%
    500   390      189.5063    37      198.0000       97.4598    15181   50.78%
*   519+    0                          178.0000      178.0000    15910    0.00%

GUB cover cuts applied:  2
Clique cuts applied:  10
Cover cuts applied:  15
Implied bound cuts applied:  174
Flow cuts applied:  5
Mixed integer rounding cuts applied:  8
Zero-half cuts applied:  5
Gomory fractional cuts applied:  7
Lazy constraints applied:  7
Optimal
Lmax: 178
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 0
Job 4 into batch 4
Job 5 into batch 4
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 1
Job 10 into batch 8
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 12
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 8
Job 25 into batch 21
Job 26 into batch 26
Job 27 into batch 15
Job 28 into batch 28
Job 29 into batch 19
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 14
Job 36 into batch 23
Job 37 into batch 26
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 19
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 43
Job 44 into batch 44
Job 45 into batch 4
Job 46 into batch 22
Job 47 into batch 47
Job 48 into batch 48
Job 49 into batch 49
Job 0:	s=9	p=29	d=148	L=(-119+0-0)=-119=			Pk=29	Total size:10
Job 1:	s=5	p=71	d=170	L=(-70+6-0)=-64=			Pk=78	Total size:10
Job 2:	s=9	p=3	d=191	L=(-88+6-0)=-82=			Pk=3	Total size:9
Job 3:	s=1	p=21	d=191	L=(-67+-15-199)=-281=			Pk=21	Total size:0
Job 4:	s=7	p=60	d=208	L=(-24+-15-0)=-39=			Pk=60	Total size:10
Job 5:	s=2	p=41	d=230	L=(-5+-56-199)=-260=			Pk=41	Total size:0
Job 6:	s=7	p=18	d=268	L=(-25+-56-0)=-81=			Pk=18	Total size:7
Job 7:	s=10	p=14	d=297	L=(-40+-56-0)=-96=			Pk=14	Total size:10
Job 8:	s=7	p=92	d=310	L=(39+-56-0)=-17=			Pk=92	Total size:10
Job 9:	s=5	p=78	d=316	L=(111+-134-199)=-222=			Pk=78	Total size:0
Job 10:	s=2	p=63	d=317	L=(173+-197-199)=-223=			Pk=63	Total size:0
Job 11:	s=9	p=17	d=353	L=(154+-197-0)=-43=			Pk=17	Total size:9
Job 12:	s=4	p=88	d=356	L=(239+-195-0)=44=			Pk=90	Total size:10
Job 13:	s=9	p=42	d=389	L=(248+-195-0)=53=			Pk=42	Total size:9
Job 14:	s=6	p=54	d=389	L=(302+-195-0)=107=			Pk=54	Total size:9
Job 15:	s=8	p=89	d=456	L=(324+-195-0)=129=			Pk=89	Total size:10
Job 16:	s=6	p=21	d=643	L=(158+-195-0)=-37=			Pk=21	Total size:6
Job 17:	s=9	p=63	d=671	L=(193+-195-0)=-2=			Pk=63	Total size:9
Job 18:	s=8	p=9	d=700	L=(173+-195-0)=-22=			Pk=9	Total size:8
Job 19:	s=1	p=76	d=719	L=(230+-185-0)=45=			Pk=86	Total size:10
Job 20:	s=6	p=90	d=767	L=(272+-275-199)=-202=			Pk=90	Total size:0
Job 21:	s=7	p=65	d=820	L=(284+-275-0)=9=			Pk=65	Total size:10
Job 22:	s=7	p=88	d=854	L=(338+-275-0)=63=			Pk=88	Total size:9
Job 23:	s=8	p=32	d=881	L=(343+-275-0)=68=			Pk=32	Total size:10
Job 24:	s=1	p=83	d=903	L=(404+-358-199)=-153=			Pk=83	Total size:0
Job 25:	s=3	p=8	d=925	L=(390+-366-199)=-175=			Pk=8	Total size:0
Job 26:	s=2	p=30	d=934	L=(411+-318-0)=93=			Pk=78	Total size:7
Job 27:	s=2	p=51	d=941	L=(455+-369-199)=-113=			Pk=51	Total size:0
Job 28:	s=10	p=4	d=942	L=(458+-369-0)=89=			Pk=4	Total size:10
Job 29:	s=3	p=29	d=1012	L=(417+-398-199)=-180=			Pk=29	Total size:0
Job 30:	s=10	p=10	d=1021	L=(418+-398-0)=20=			Pk=10	Total size:10
Job 31:	s=9	p=66	d=1153	L=(352+-398-0)=-46=			Pk=66	Total size:9
Job 32:	s=7	p=87	d=1179	L=(413+-398-0)=15=			Pk=87	Total size:7
Job 33:	s=8	p=61	d=1183	L=(470+-398-0)=72=			Pk=61	Total size:8
Job 34:	s=7	p=81	d=1184	L=(550+-398-0)=152=			Pk=81	Total size:7
Job 35:	s=3	p=41	d=1278	L=(497+-439-199)=-141=			Pk=41	Total size:0
Job 36:	s=2	p=28	d=1282	L=(521+-467-199)=-145=			Pk=28	Total size:0
Job 37:	s=5	p=78	d=1283	L=(598+-545-199)=-146=			Pk=78	Total size:0
Job 38:	s=10	p=51	d=1299	L=(633+-545-0)=88=			Pk=51	Total size:10
Job 39:	s=9	p=47	d=1307	L=(672+-545-0)=127=			Pk=47	Total size:9
Job 40:	s=6	p=86	d=1356	L=(709+-631-199)=-121=			Pk=86	Total size:0
Job 41:	s=8	p=9	d=1396	L=(678+-631-0)=47=			Pk=9	Total size:8
Job 42:	s=9	p=73	d=1404	L=(743+-631-0)=112=			Pk=73	Total size:9
Job 43:	s=7	p=57	d=1418	L=(786+-631-0)=155=			Pk=57	Total size:7
Job 44:	s=10	p=49	d=1451	L=(802+-631-0)=171=			Pk=49	Total size:10
Job 45:	s=1	p=45	d=1501	L=(797+-676-199)=-78=			Pk=45	Total size:0
Job 46:	s=2	p=33	d=1514	L=(817+-709-199)=-91=			Pk=33	Total size:0
Job 47:	s=6	p=20	d=1538	L=(813+-709-0)=104=			Pk=20	Total size:6
Job 48:	s=8	p=51	d=1542	L=(860+-709-0)=151=			Pk=51	Total size:8
Job 49:	s=10	p=60	d=1576	L=(886+-709-0)=177=			Pk=60	Total size:10

-2147483648
1.42857
178
1.6 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-16.csv
60
160
194
343
415
423
426
458
458
503
507
533
565
576
577
588
600
613
617
623
662
689
778
824
831
864
866
915
928
943
1009
1021
1076
1091
1121
1139
1204
1282
1288
1305
1308
1340
1341
1427
1445
1453
1476
1490
1629
1659
Job 0: due 60
Job 1: due 160
Job 2: due 194
Job 3: due 343
Job 4: due 415
Job 5: due 423
Job 6: due 426
Job 7: due 458
Job 8: due 458
Job 9: due 503
Job 10: due 507
Job 11: due 533
Job 12: due 565
Job 13: due 576
Job 14: due 577
Job 15: due 588
Job 16: due 600
Job 17: due 613
Job 18: due 617
Job 19: due 623
Job 20: due 662
Job 21: due 689
Job 22: due 778
Job 23: due 824
Job 24: due 831
Job 25: due 864
Job 26: due 866
Job 27: due 915
Job 28: due 928
Job 29: due 943
Job 30: due 1009
Job 31: due 1021
Job 32: due 1076
Job 33: due 1091
Job 34: due 1121
Job 35: due 1139
Job 36: due 1204
Job 37: due 1282
Job 38: due 1288
Job 39: due 1305
Job 40: due 1308
Job 41: due 1340
Job 42: due 1341
Job 43: due 1427
Job 44: due 1445
Job 45: due 1453
Job 46: due 1476
Job 47: due 1490
Job 48: due 1629
Job 49: due 1659
Ignore all jobs after 48
Lmaxinc before safe moves: 952
Now using unsafety tolerance 0
New Lmaxincnew: 463
Difference: 489
Lmaxinc after safe moves: 214369
Initial solution:
0 1 2 3 4 5 6 7 8 7 10 11 2 13 14 15 16 17 18 19 4 7 4 23 24 25 26 8 24 15 30 1 32 4 34 35 36 13 38 30 0 41 38 3 4 45 19 47 
Updating LmaxLB to -42. C=18, d=60same duedate: 7
Updating LmaxLB to -28.9. C=559.1, d=588Updating LmaxLB to 38.3. C=638.3, d=600Updating LmaxLB to 68.5001. C=681.5, d=613Updating LmaxLB to 151.5. C=768.5, d=617Updating LmaxLB to 188. C=811, d=623Lower bound on Lmax based on areas:0
Max Lksingle:952
Max reduction:952
Now adding static psi-2-in-2 dominance rules ...
Added 810 safe move dominance lazy constraints
Added 241 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2929 rows and 1813 columns.
MIP Presolve modified 1453 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 642 rows, 537 columns, and 3790 nonzeros.
Reduced MIP has 488 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.01 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1262.
Problem contains 241 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      163.3394    67                    163.3394      196         
      0     0      195.0038    48                    Cuts: 54      254         
      0     0      209.7003    40                    Cuts: 48      298         
      0     0      211.6898    42                    Cuts: 14      311         
      0     0      214.4286    42                     Cuts: 7      329         
      0     0      215.1790    41                     Cuts: 8      334         
      0     0      216.2094    41                 Impl Bds: 3      339         
*     0+    0                          262.0000      216.2094      339   17.48%
      0     0      216.3065    41      262.0000   Impl Bds: 3      343   17.44%
      0     0      216.3530    44      262.0000       Cuts: 2      346   17.42%
      0     2      216.3530    44      262.0000      216.5265      346   17.36%
Elapsed time =   0.14 sec. (tree size =  0.00 MB, solutions = 1)
*    50+   12                          255.0000      244.8110     1009    4.00%
*    70+    1                          252.0000      252.0000     1257    0.00%

Clique cuts applied:  5
Cover cuts applied:  12
Implied bound cuts applied:  57
Flow cuts applied:  2
Zero-half cuts applied:  13
Gomory fractional cuts applied:  6
Lazy constraints applied:  4
Optimal
Lmax: 252
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 0
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 3
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 2
Job 13 into batch 7
Job 14 into batch 14
Job 15 into batch 1
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 8
Job 20 into batch 11
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 22
Job 25 into batch 25
Job 26 into batch 21
Job 27 into batch 27
Job 28 into batch 27
Job 29 into batch 27
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 17
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 37
Job 38 into batch 30
Job 39 into batch 39
Job 40 into batch 37
Job 41 into batch 41
Job 42 into batch 39
Job 43 into batch 43
Job 44 into batch 16
Job 45 into batch 45
Job 46 into batch 45
Job 47 into batch 47
Job 0:	s=4	p=45	d=60	L=(-15+23-0)=8=			Pk=68	Total size:9
Job 1:	s=2	p=8	d=160	L=(-107+71-0)=-36=			Pk=56	Total size:10
Job 2:	s=8	p=47	d=194	L=(-94+71-0)=-23=			Pk=47	Total size:10
Job 3:	s=5	p=71	d=343	L=(-172+73-0)=-99=			Pk=73	Total size:9
Job 4:	s=5	p=68	d=415	L=(-176+5-463)=-634=			Pk=68	Total size:0
Job 5:	s=10	p=76	d=423	L=(-108+5-0)=-103=			Pk=76	Total size:10
Job 6:	s=10	p=64	d=426	L=(-47+5-0)=-42=			Pk=64	Total size:10
Job 7:	s=3	p=80	d=458	L=(1+9-0)=10=			Pk=84	Total size:10
Job 8:	s=5	p=94	d=458	L=(95+9-0)=104=			Pk=94	Total size:10
Job 9:	s=4	p=73	d=503	L=(123+-64-463)=-404=			Pk=73	Total size:0
Job 10:	s=10	p=36	d=507	L=(155+-64-0)=91=			Pk=36	Total size:10
Job 11:	s=9	p=18	d=533	L=(147+-64-0)=83=			Pk=18	Total size:10
Job 12:	s=2	p=47	d=565	L=(162+-110-463)=-411=			Pk=47	Total size:0
Job 13:	s=7	p=84	d=576	L=(235+-194-463)=-422=			Pk=84	Total size:0
Job 14:	s=9	p=30	d=577	L=(264+-194-0)=70=			Pk=30	Total size:9
Job 15:	s=8	p=56	d=588	L=(309+-250-463)=-404=			Pk=56	Total size:0
Job 16:	s=9	p=88	d=600	L=(385+-250-0)=135=			Pk=88	Total size:10
Job 17:	s=9	p=48	d=613	L=(420+-250-0)=170=			Pk=48	Total size:10
Job 18:	s=10	p=87	d=617	L=(503+-250-0)=253=			Pk=87	Total size:10
Job 19:	s=5	p=85	d=623	L=(582+-335-463)=-216=			Pk=85	Total size:0
Job 20:	s=1	p=11	d=662	L=(554+-346-463)=-255=			Pk=11	Total size:0
Job 21:	s=3	p=64	d=689	L=(591+-340-0)=251=			Pk=70	Total size:10
Job 22:	s=2	p=65	d=778	L=(567+-319-0)=248=			Pk=86	Total size:9
Job 23:	s=10	p=2	d=824	L=(523+-319-0)=204=			Pk=2	Total size:10
Job 24:	s=7	p=86	d=831	L=(602+-405-463)=-266=			Pk=86	Total size:0
Job 25:	s=6	p=35	d=864	L=(604+-405-0)=199=			Pk=35	Total size:6
Job 26:	s=7	p=70	d=866	L=(672+-475-463)=-266=			Pk=70	Total size:0
Job 27:	s=4	p=86	d=915	L=(709+-475-0)=234=			Pk=86	Total size:9
Job 28:	s=3	p=19	d=928	L=(715+-494-463)=-242=			Pk=19	Total size:0
Job 29:	s=2	p=31	d=943	L=(731+-525-463)=-257=			Pk=31	Total size:0
Job 30:	s=4	p=51	d=1009	L=(716+-525-0)=191=			Pk=51	Total size:8
Job 31:	s=5	p=2	d=1021	L=(706+-525-0)=181=			Pk=2	Total size:5
Job 32:	s=8	p=60	d=1076	L=(711+-525-0)=186=			Pk=60	Total size:8
Job 33:	s=1	p=36	d=1091	L=(732+-561-463)=-292=			Pk=36	Total size:0
Job 34:	s=6	p=10	d=1121	L=(712+-561-0)=151=			Pk=10	Total size:6
Job 35:	s=8	p=64	d=1139	L=(758+-561-0)=197=			Pk=64	Total size:8
Job 36:	s=8	p=34	d=1204	L=(727+-561-0)=166=			Pk=34	Total size:8
Job 37:	s=3	p=47	d=1282	L=(696+-561-0)=135=			Pk=47	Total size:9
Job 38:	s=4	p=41	d=1288	L=(731+-602-463)=-334=			Pk=41	Total size:0
Job 39:	s=4	p=47	d=1305	L=(761+-602-0)=159=			Pk=47	Total size:10
Job 40:	s=6	p=46	d=1308	L=(804+-648-463)=-307=			Pk=46	Total size:0
Job 41:	s=10	p=16	d=1340	L=(788+-648-0)=140=			Pk=16	Total size:10
Job 42:	s=6	p=39	d=1341	L=(826+-687-463)=-324=			Pk=39	Total size:0
Job 43:	s=5	p=69	d=1427	L=(809+-687-0)=122=			Pk=69	Total size:5
Job 44:	s=1	p=65	d=1445	L=(856+-752-463)=-359=			Pk=65	Total size:0
Job 45:	s=6	p=26	d=1453	L=(874+-696-0)=178=			Pk=82	Total size:10
Job 46:	s=4	p=82	d=1476	L=(933+-778-463)=-308=			Pk=82	Total size:0
Job 47:	s=8	p=33	d=1490	L=(952+-778-0)=174=			Pk=33	Total size:8

0
1.54839
252
0.41 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-17.csv
24
35
36
40
49
50
51
57
58
62
65
67
83
92
93
101
103
105
108
110
125
126
132
136
136
138
143
145
148
151
153
154
161
169
186
198
199
202
204
206
213
215
220
233
240
252
262
282
309
327
Job 0: due 24
Job 1: due 35
Job 2: due 36
Job 3: due 40
Job 4: due 49
Job 5: due 50
Job 6: due 51
Job 7: due 57
Job 8: due 58
Job 9: due 62
Job 10: due 65
Job 11: due 67
Job 12: due 83
Job 13: due 92
Job 14: due 93
Job 15: due 101
Job 16: due 103
Job 17: due 105
Job 18: due 108
Job 19: due 110
Job 20: due 125
Job 21: due 126
Job 22: due 132
Job 23: due 136
Job 24: due 136
Job 25: due 138
Job 26: due 143
Job 27: due 145
Job 28: due 148
Job 29: due 151
Job 30: due 153
Job 31: due 154
Job 32: due 161
Job 33: due 169
Job 34: due 186
Job 35: due 198
Job 36: due 199
Job 37: due 202
Job 38: due 204
Job 39: due 206
Job 40: due 213
Job 41: due 215
Job 42: due 220
Job 43: due 233
Job 44: due 240
Job 45: due 252
Job 46: due 262
Job 47: due 282
Job 48: due 309
Job 49: due 327
Ignore all jobs after 50
Lmaxinc before safe moves: 1943
Now using unsafety tolerance 0
New Lmaxincnew: 1006
Difference: 937
Lmaxinc after safe moves: 1.01204e+06
Initial solution:
0 1 2 0 4 5 6 7 8 9 1 11 12 13 14 15 16 17 0 19 20 21 22 12 24 25 26 13 28 29 20 17 32 33 16 29 26 21 16 16 16 16 21 43 43 45 24 47 48 25 
Updating LmaxLB to -21.6. C=2.4, d=24Updating LmaxLB to -10.1. C=25.9, d=36Updating LmaxLB to -6.7. C=42.3, d=49Updating LmaxLB to -2.3. C=47.7, d=50Updating LmaxLB to 10.3. C=61.3, d=51Updating LmaxLB to 27.6. C=85.6, d=58Updating LmaxLB to 42. C=104, d=62Updating LmaxLB to 48.5. C=113.5, d=65Updating LmaxLB to 55.5. C=122.5, d=67Updating LmaxLB to 65.9. C=148.9, d=83Updating LmaxLB to 68.5. C=160.5, d=92Updating LmaxLB to 77.7. C=170.7, d=93Updating LmaxLB to 79.3. C=180.3, d=101Updating LmaxLB to 84.3. C=187.3, d=103Updating LmaxLB to 87.1. C=192.1, d=105Updating LmaxLB to 90. C=200, d=110Updating LmaxLB to 103.7. C=228.7, d=125Updating LmaxLB to 143.7. C=269.7, d=126Updating LmaxLB to 147.3. C=279.3, d=132same duedate: 23
Updating LmaxLB to 176.6. C=312.6, d=136Updating LmaxLB to 192. C=330, d=138Updating LmaxLB to 207. C=350, d=143Updating LmaxLB to 216.6. C=361.6, d=145Updating LmaxLB to 271.7. C=419.7, d=148Updating LmaxLB to 297.7. C=448.7, d=151Updating LmaxLB to 302.7. C=455.7, d=153Updating LmaxLB to 342.2. C=496.2, d=154Updating LmaxLB to 382.4. C=543.4, d=161Updating LmaxLB to 411.3. C=580.3, d=169Updating LmaxLB to 438.6. C=637.6, d=199Updating LmaxLB to 458.7. C=660.7, d=202Updating LmaxLB to 462.7. C=666.7, d=204Updating LmaxLB to 466. C=672, d=206Updating LmaxLB to 492.9. C=707.9, d=215Updating LmaxLB to 495.1. C=715.1, d=220Updating LmaxLB to 540.3. C=773.3, d=233Updating LmaxLB to 568.9. C=808.9, d=240Updating LmaxLB to 614.5. C=866.5, d=252Updating LmaxLB to 641.5. C=903.5, d=262Updating LmaxLB to 655.9. C=937.9, d=282Updating LmaxLB to 676.9. C=985.9, d=309Updating LmaxLB to 702.9. C=1029.9, d=327Lower bound on Lmax based on areas:0
Max Lksingle:1943
Max reduction:1943
Now adding static psi-2-in-2 dominance rules ...
Added 130 safe move dominance lazy constraints
Added 140 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2758 rows and 1794 columns.
MIP Presolve modified 2411 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 1113 rows, 755 columns, and 5416 nonzeros.
Reduced MIP has 704 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1116.
Problem contains 140 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.05 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      446.9489   227                    446.9489      717         
      0     0      501.5760   210                   Cuts: 187     1006         
      0     0      549.5569   189                   Cuts: 197     1293         
      0     0      576.2373   210                   Cuts: 165     1556         
      0     0      588.1951   199                   Cuts: 126     1720         
      0     0      600.7435   243                   Cuts: 148     1925         
*     0+    0                          999.0000      600.7435     1925   39.87%
      0     0      603.1580   240      999.0000     Cuts: 124     2016   39.62%
      0     0      604.9030   249      999.0000      Cuts: 95     2100   39.45%
      0     0      605.6687   243      999.0000      Cuts: 48     2153   39.37%
      0     0      606.1690   247      999.0000      Cuts: 63     2185   39.32%
      0     0      606.2938   247      999.0000      Cuts: 25     2218   39.31%
      0     0      606.4274   248      999.0000  Impl Bds: 31     2242   39.30%
      0     0      606.4436   241      999.0000  Impl Bds: 11     2251   39.29%
      0     0      606.4974   243      999.0000      Cuts: 32     2275   39.29%
      0     2      606.4974   242      999.0000      606.5771     2275   39.28%
Elapsed time =   0.84 sec. (tree size =  0.00 MB, solutions = 1)
*    20+   20                          986.0000      607.2436     4499   38.41%
*    70+   70                          985.0000      607.2436     9489   38.35%
*    70+   70                          945.0000      607.2436     9489   35.74%
    100    95      663.3139   158      945.0000      607.2723    12428   35.74%
    200   181      728.4463   145      945.0000      608.9377    20136   35.56%
    300   277      751.6669   121      945.0000      608.9655    23926   35.56%
    400   373      866.5185    76      945.0000      611.1205    28420   35.33%
    500   469      923.9634    22      945.0000      611.1701    33679   35.33%
*   523+  324                          922.0000      763.1041    36784   17.23%
*   523+  216                          907.0000      764.0174    36844   15.76%
*   523+  144                          865.0000      768.1051    37169   11.20%
*   523+   96                          855.0000      768.4543    37278   10.12%
*   523+   64                          849.0000      768.4543    37278    9.49%
*   553+   60                          845.0000      771.1979    38730    8.73%
*   573+   64                          827.0000      771.1979    39296    6.75%
    600    82      791.6173    20      827.0000      771.1979    40068    6.75%
*   633+  108                          826.0000      771.1979    41284    6.63%
    700   160      824.7438    92      826.0000      774.4791    45122    6.24%
    800   242      806.6409    34      826.0000      776.9976    48657    5.93%
*   863+  235                          819.0000      777.9744    49825    5.01%
    900   274      798.6152    32      819.0000      777.9744    50647    5.01%
*   947   308      integral     0      818.0000      777.9744    51619    4.89%
Elapsed time =  12.55 sec. (tree size =  0.22 MB, solutions = 14)
*   963+  275                          809.0000      778.1476    52651    3.81%
   1000   312      798.8843    26      809.0000      778.1476    53772    3.81%
*  1063+  289                          806.0000      778.9872    54987    3.35%
*  1063+  248                          803.0000      778.9872    54987    2.99%
   1100   285      802.5398    37      803.0000      778.9872    55875    2.99%
   1200   353      799.1985    72      803.0000      780.9249    61837    2.75%
   1300   423      795.2988    70      803.0000      782.1410    65774    2.60%
   1400   510      797.4641    58      803.0000      783.1235    70083    2.48%
   1500   581      793.7963    57      803.0000      784.0071    73669    2.37%
   1600   669      797.5450    75      803.0000      784.5719    76041    2.29%
   1700   750      802.4434    63      803.0000      785.5165    78890    2.18%
   1800   822      802.4367    36      803.0000      787.3272    81884    1.95%
   1900   887      797.5370    51      803.0000      788.6037    85427    1.79%
Elapsed time =  16.84 sec. (tree size =  0.56 MB, solutions = 17)
   2000   962        cutoff            803.0000      789.3604    89053    1.70%
   2100  1040      802.5754    64      803.0000      789.7482    93181    1.65%
   2200  1105      793.9388    50      803.0000      790.1512    96383    1.60%
   2300  1170      795.8004    82      803.0000      790.8760    99478    1.51%
   2400  1255        cutoff            803.0000      791.0565   102385    1.49%
   2500  1302        cutoff            803.0000      791.5611   106480    1.42%
   2600  1324      797.9987    94      803.0000      792.4158   112234    1.32%
   2700  1402      801.5571    40      803.0000      792.4776   115773    1.31%
   2800  1450      798.1720    60      803.0000      793.0132   119147    1.24%
   2900  1469      799.7008    49      803.0000      793.4866   122475    1.18%
Elapsed time =  20.70 sec. (tree size =  0.98 MB, solutions = 17)
   3000  1536      800.4292    68      803.0000      793.5932   125284    1.17%
   3100  1568      797.6490    41      803.0000      794.0529   128593    1.11%
   3200  1595      802.7069    21      803.0000      794.3955   133060    1.07%
*  3283+ 1475                          802.0000      794.6488   136656    0.92%
   3300  1472        cutoff            802.0000      794.7512   137298    0.90%
   3400  1464        cutoff            802.0000      795.1264   140921    0.86%
   3500  1465        cutoff            802.0000      795.4511   144469    0.82%
   3600  1509      798.8663    26      802.0000      795.6206   147838    0.80%
   3700  1516      798.0829    82      802.0000      795.8996   151605    0.76%
   3800  1479      798.2825    96      802.0000      796.2771   154610    0.71%
   3900  1468      799.0973    48      802.0000      796.6094   159023    0.67%
Elapsed time =  25.70 sec. (tree size =  1.12 MB, solutions = 18)
   4000  1452        cutoff            802.0000      796.7776   162404    0.65%
   4100  1423        cutoff            802.0000      797.0282   165868    0.62%
   4200  1361      798.5679    54      802.0000      797.3674   169386    0.58%
   4300  1357      801.1515    42      802.0000      797.5353   173136    0.56%
   4400  1321      799.8287    50      802.0000      797.7539   176418    0.53%
   4500  1289        cutoff            802.0000      797.9963   179484    0.50%
   4600  1237      801.8812    35      802.0000      798.2399   182998    0.47%
   4700  1208        cutoff            802.0000      798.4041   186514    0.45%
   4800  1151        cutoff            802.0000      798.6394   189593    0.42%
   4900  1103      801.2288    86      802.0000      798.8179   192185    0.40%
Elapsed time =  29.56 sec. (tree size =  0.84 MB, solutions = 18)
   5000  1062      801.6420    44      802.0000      799.0073   194980    0.37%
   5100  1007        cutoff            802.0000      799.2836   197503    0.34%
   5200   923        cutoff            802.0000      799.5004   199628    0.31%
   5300   855        cutoff            802.0000      799.6890   201052    0.29%
   5400   803        cutoff            802.0000      799.8959   203533    0.26%
   5500   758        cutoff            802.0000      800.0458   205218    0.24%
   5600   665      801.9420    28      802.0000      800.2713   207092    0.22%
   5700   575        cutoff            802.0000      800.5153   208626    0.19%
   5800   485        cutoff            802.0000      800.7557   209910    0.16%
   5900   388      801.0000    10      802.0000      801.0000   210657    0.12%
Elapsed time =  31.92 sec. (tree size =  0.31 MB, solutions = 18)
   6000   304        cutoff            802.0000      801.2397   211445    0.09%
   6100   204        cutoff            802.0000      801.4882   211956    0.06%
   6200   104        cutoff            802.0000      801.7208   212265    0.03%

Clique cuts applied:  6
Cover cuts applied:  90
Implied bound cuts applied:  366
Flow cuts applied:  31
Mixed integer rounding cuts applied:  59
Zero-half cuts applied:  28
Gomory fractional cuts applied:  13
Lazy constraints applied:  3
Optimal
Lmax: 802
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 3
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 1
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 13
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 4
Job 19 into batch 0
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 20
Job 24 into batch 24
Job 25 into batch 24
Job 26 into batch 12
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 17
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 32
Job 35 into batch 27
Job 36 into batch 17
Job 37 into batch 28
Job 38 into batch 32
Job 39 into batch 17
Job 40 into batch 16
Job 41 into batch 29
Job 42 into batch 24
Job 43 into batch 43
Job 44 into batch 43
Job 45 into batch 16
Job 46 into batch 21
Job 47 into batch 24
Job 48 into batch 48
Job 49 into batch 48
Job 0:	s=3	p=8	d=24	L=(-16+2-0)=-14=			Pk=11	Total size:10
Job 1:	s=5	p=21	d=35	L=(-6+2-0)=-4=			Pk=21	Total size:10
Job 2:	s=10	p=13	d=36	L=(6+2-0)=8=			Pk=13	Total size:10
Job 3:	s=5	p=4	d=40	L=(6+2-0)=8=			Pk=4	Total size:8
Job 4:	s=8	p=18	d=49	L=(15+2-0)=17=			Pk=18	Total size:9
Job 5:	s=9	p=6	d=50	L=(20+2-0)=22=			Pk=6	Total size:9
Job 6:	s=8	p=17	d=51	L=(36+2-0)=38=			Pk=17	Total size:8
Job 7:	s=3	p=1	d=57	L=(31+1-1006)=-974=			Pk=1	Total size:0
Job 8:	s=10	p=24	d=58	L=(54+1-0)=55=			Pk=24	Total size:10
Job 9:	s=8	p=23	d=62	L=(73+1-0)=74=			Pk=23	Total size:8
Job 10:	s=5	p=19	d=65	L=(89+-17-1006)=-934=			Pk=19	Total size:0
Job 11:	s=10	p=9	d=67	L=(96+-17-0)=79=			Pk=9	Total size:10
Job 12:	s=6	p=44	d=83	L=(124+-11-0)=113=			Pk=50	Total size:10
Job 13:	s=4	p=29	d=92	L=(144+-10-0)=134=			Pk=29	Total size:10
Job 14:	s=6	p=17	d=93	L=(160+-27-1006)=-873=			Pk=17	Total size:0
Job 15:	s=8	p=12	d=101	L=(164+-27-0)=137=			Pk=12	Total size:8
Job 16:	s=1	p=70	d=103	L=(232+-25-0)=207=			Pk=72	Total size:10
Job 17:	s=1	p=48	d=105	L=(278+-20-0)=258=			Pk=53	Total size:10
Job 18:	s=1	p=2	d=108	L=(277+-22-1006)=-751=			Pk=2	Total size:0
Job 19:	s=7	p=11	d=110	L=(286+-33-1006)=-753=			Pk=11	Total size:0
Job 20:	s=7	p=41	d=125	L=(312+-33-0)=279=			Pk=41	Total size:10
Job 21:	s=5	p=82	d=126	L=(393+-33-0)=360=			Pk=82	Total size:10
Job 22:	s=6	p=16	d=132	L=(403+-33-0)=370=			Pk=16	Total size:6
Job 23:	s=3	p=37	d=136	L=(436+-70-1006)=-640=			Pk=37	Total size:0
Job 24:	s=3	p=74	d=136	L=(510+-57-0)=453=			Pk=87	Total size:10
Job 25:	s=2	p=87	d=138	L=(595+-144-1006)=-555=			Pk=87	Total size:0
Job 26:	s=4	p=50	d=143	L=(640+-193-1006)=-559=			Pk=50	Total size:0
Job 27:	s=4	p=29	d=145	L=(667+-180-0)=487=			Pk=42	Total size:9
Job 28:	s=7	p=83	d=148	L=(747+-180-0)=567=			Pk=83	Total size:10
Job 29:	s=5	p=58	d=151	L=(802+-179-0)=623=			Pk=59	Total size:10
Job 30:	s=2	p=35	d=153	L=(835+-214-1006)=-385=			Pk=35	Total size:0
Job 31:	s=9	p=45	d=154	L=(879+-214-0)=665=			Pk=45	Total size:9
Job 32:	s=8	p=59	d=161	L=(931+-213-0)=718=			Pk=60	Total size:10
Job 33:	s=9	p=41	d=169	L=(964+-213-0)=751=			Pk=41	Total size:9
Job 34:	s=1	p=57	d=186	L=(1004+-270-1006)=-272=			Pk=57	Total size:0
Job 35:	s=5	p=42	d=198	L=(1034+-312-1006)=-284=			Pk=42	Total size:0
Job 36:	s=6	p=51	d=199	L=(1084+-363-1006)=-285=			Pk=51	Total size:0
Job 37:	s=3	p=77	d=202	L=(1158+-440-1006)=-288=			Pk=77	Total size:0
Job 38:	s=1	p=60	d=204	L=(1216+-500-1006)=-290=			Pk=60	Total size:0
Job 39:	s=1	p=53	d=206	L=(1267+-553-1006)=-292=			Pk=53	Total size:0
Job 40:	s=1	p=64	d=213	L=(1324+-617-1006)=-299=			Pk=64	Total size:0
Job 41:	s=5	p=59	d=215	L=(1381+-676-1006)=-301=			Pk=59	Total size:0
Job 42:	s=1	p=72	d=220	L=(1448+-748-1006)=-306=			Pk=72	Total size:0
Job 43:	s=6	p=97	d=233	L=(1532+-748-0)=784=			Pk=97	Total size:10
Job 44:	s=4	p=89	d=240	L=(1614+-837-1006)=-229=			Pk=89	Total size:0
Job 45:	s=8	p=72	d=252	L=(1674+-909-1006)=-241=			Pk=72	Total size:0
Job 46:	s=5	p=74	d=262	L=(1738+-983-1006)=-251=			Pk=74	Total size:0
Job 47:	s=4	p=86	d=282	L=(1804+-1069-1006)=-271=			Pk=86	Total size:0
Job 48:	s=5	p=96	d=309	L=(1873+-1069-0)=804=			Pk=96	Total size:10
Job 49:	s=5	p=88	d=327	L=(1943+-1157-1006)=-220=			Pk=88	Total size:0

0
1.85185
802
32.83 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-18.csv
21
40
41
56
70
80
82
91
108
127
132
134
139
141
144
152
154
165
166
167
181
183
185
191
192
199
202
207
211
220
234
235
260
264
266
278
291
324
333
334
349
363
370
378
389
396
443
455
483
506
Job 0: due 21
Job 1: due 40
Job 2: due 41
Job 3: due 56
Job 4: due 70
Job 5: due 80
Job 6: due 82
Job 7: due 91
Job 8: due 108
Job 9: due 127
Job 10: due 132
Job 11: due 134
Job 12: due 139
Job 13: due 141
Job 14: due 144
Job 15: due 152
Job 16: due 154
Job 17: due 165
Job 18: due 166
Job 19: due 167
Job 20: due 181
Job 21: due 183
Job 22: due 185
Job 23: due 191
Job 24: due 192
Job 25: due 199
Job 26: due 202
Job 27: due 207
Job 28: due 211
Job 29: due 220
Job 30: due 234
Job 31: due 235
Job 32: due 260
Job 33: due 264
Job 34: due 266
Job 35: due 278
Job 36: due 291
Job 37: due 324
Job 38: due 333
Job 39: due 334
Job 40: due 349
Job 41: due 363
Job 42: due 370
Job 43: due 378
Job 44: due 389
Job 45: due 396
Job 46: due 443
Job 47: due 455
Job 48: due 483
Job 49: due 506
Ignore all jobs after 50
Lmaxinc before safe moves: 1774
Now using unsafety tolerance 0
New Lmaxincnew: 1220
Difference: 554
Lmaxinc after safe moves: 1.4884e+06
Initial solution:
0 1 2 3 4 5 6 7 2 9 10 11 12 2 14 2 16 17 18 19 20 3 22 23 24 25 26 24 28 29 30 31 32 33 34 35 26 37 38 39 33 41 42 14 44 33 46 26 26 49 
Updating LmaxLB to -20.6. C=0.4, d=21Updating LmaxLB to -16.6. C=117.4, d=134Updating LmaxLB to -1.60001. C=137.4, d=139Updating LmaxLB to 2.09999. C=143.1, d=141Updating LmaxLB to 11.3. C=155.3, d=144Updating LmaxLB to 43.5. C=197.5, d=154Updating LmaxLB to 67.5. C=232.5, d=165Updating LmaxLB to 77. C=243, d=166Updating LmaxLB to 88. C=255, d=167Updating LmaxLB to 110. C=291, d=181Updating LmaxLB to 113.2. C=296.2, d=183Updating LmaxLB to 135.2. C=320.2, d=185Updating LmaxLB to 168.2. C=359.2, d=191Updating LmaxLB to 190.7. C=382.7, d=192Updating LmaxLB to 215.2. C=414.2, d=199Updating LmaxLB to 238.6. C=440.6, d=202Updating LmaxLB to 251.1. C=458.1, d=207Updating LmaxLB to 297.1. C=508.1, d=211Updating LmaxLB to 304.1. C=524.1, d=220Updating LmaxLB to 334.2. C=568.2, d=234Updating LmaxLB to 404.3. C=639.3, d=235Updating LmaxLB to 435.3. C=699.3, d=264Updating LmaxLB to 469.3. C=735.3, d=266Updating LmaxLB to 494.5. C=772.5, d=278Updating LmaxLB to 511.9. C=802.9, d=291Updating LmaxLB to 520.9. C=844.9, d=324Updating LmaxLB to 582.1. C=915.1, d=333Updating LmaxLB to 625.2. C=959.2, d=334Updating LmaxLB to 699. C=1062, d=363Updating LmaxLB to 758.5. C=1128.5, d=370Updating LmaxLB to 772.1. C=1150.1, d=378Updating LmaxLB to 821.9. C=1210.9, d=389Updating LmaxLB to 828.7. C=1224.7, d=396Updating LmaxLB to 845.6. C=1288.6, d=443Updating LmaxLB to 887.5. C=1393.5, d=506Lower bound on Lmax based on areas:0
Max Lksingle:1774
Max reduction:1774
Now adding static psi-2-in-2 dominance rules ...
Added 91 safe move dominance lazy constraints
Added 81 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3199 rows and 2093 columns.
MIP Presolve modified 2499 coefficients.
Aggregator did 13 substitutions.
Reduced MIP has 624 rows, 446 columns, and 3103 nonzeros.
Reduced MIP has 395 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.03 sec.
Probing time =    0.00 sec.
Clique table members: 582.
Problem contains 81 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      765.7214    95                    765.7214      281         
*     0+    0                         1209.0000      765.7214      281   36.66%
      0     0      813.3857    97     1209.0000     Cuts: 104      461   32.72%
      0     0      842.0423   107     1209.0000     Cuts: 113      602   30.35%
      0     0      856.1088   109     1209.0000     Cuts: 106      690   29.19%
      0     0      867.7783   111     1209.0000      Cuts: 85      790   28.22%
*     0+    0                         1197.0000      867.7783      790   27.50%
      0     0      877.8490   120     1197.0000      Cuts: 55      838   26.66%
      0     0      880.1973   118     1197.0000      Cuts: 55      882   26.47%
      0     0      880.8200   111     1197.0000      Cuts: 20      903   26.41%
*     0+    0                         1170.0000      880.8200      903   24.72%
      0     0      881.1302   126     1170.0000      Cuts: 27      918   24.69%
      0     0      881.2431   117     1170.0000   Impl Bds: 8      928   24.68%
      0     0      881.2593   125     1170.0000  Impl Bds: 11      930   24.68%
*     0+    0                         1151.0000      881.2593      930   23.44%
*     0+    0                         1132.0000      881.2593      930   22.15%
      0     2      881.2593   125     1132.0000      881.3477      930   22.14%
Elapsed time =   0.31 sec. (tree size =  0.00 MB, solutions = 5)
*    60+   60                         1108.0000      883.5250     3271   20.26%
    100    98     1044.2911    40     1108.0000      883.7469     4910   20.24%
*   160+  147                         1102.0000      887.8808     7170   19.43%
*   160+  145                         1094.0000      887.8808     7170   18.84%
    200   183      938.2417    87     1094.0000      889.0133     8832   18.74%
    300   270      917.3172   106     1094.0000      894.9017    12360   18.20%
*   360+  304                         1078.0000      895.4877    14745   16.93%
    400   342     1043.0503    37     1078.0000      899.1717    16071   16.59%
*   450+  379                         1077.0000      900.9170    18524   16.35%
    500   428     1006.1405    74     1077.0000      901.9280    20248   16.26%
*   530+  428                         1066.0000      902.9016    21230   15.30%
    600   493     1054.0630    25     1066.0000      903.5455    24215   15.24%
*   630+  471                         1052.0000      903.7716    25430   14.09%
    700   527      955.0975    81     1052.0000      905.2388    28322   13.95%
*   740+  374                         1051.0000      993.0704    30319    5.51%
*   740+  249                         1032.0000      996.8478    30431    3.41%
*   740+  165                         1025.0000      996.9581    30458    2.74%
    800   144     1013.0681    36     1025.0000     1005.3976    32154    1.91%
*   852    59      integral     0     1022.0000     1012.1573    33653    0.96%
    900    12        cutoff           1022.0000     1018.5284    34610    0.34%
Elapsed time =   4.61 sec. (tree size =  0.02 MB, solutions = 16)

Clique cuts applied:  7
Cover cuts applied:  34
Implied bound cuts applied:  155
Flow cuts applied:  7
Mixed integer rounding cuts applied:  29
Zero-half cuts applied:  14
Gomory fractional cuts applied:  4
Optimal
Lmax: 1022
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 6
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 15
Job 18 into batch 18
Job 19 into batch 3
Job 20 into batch 20
Job 21 into batch 4
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 24
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 8
Job 33 into batch 2
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 35
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 14
Job 40 into batch 2
Job 41 into batch 41
Job 42 into batch 26
Job 43 into batch 23
Job 44 into batch 44
Job 45 into batch 44
Job 46 into batch 46
Job 47 into batch 31
Job 48 into batch 35
Job 49 into batch 49
Job 0:	s=4	p=1	d=21	L=(-20+0-0)=-20=			Pk=1	Total size:4
Job 1:	s=7	p=10	d=40	L=(-29+0-0)=-29=			Pk=10	Total size:7
Job 2:	s=1	p=33	d=41	L=(3+39-0)=42=			Pk=73	Total size:9
Job 3:	s=5	p=20	d=56	L=(8+42-0)=50=			Pk=24	Total size:10
Job 4:	s=4	p=10	d=70	L=(4+44-0)=48=			Pk=13	Total size:8
Job 5:	s=8	p=17	d=80	L=(11+44-0)=55=			Pk=17	Total size:8
Job 6:	s=7	p=24	d=82	L=(33+44-0)=77=			Pk=24	Total size:10
Job 7:	s=7	p=8	d=91	L=(32+44-0)=76=			Pk=8	Total size:7
Job 8:	s=4	p=28	d=108	L=(43+44-0)=87=			Pk=28	Total size:10
Job 9:	s=9	p=22	d=127	L=(46+44-0)=90=			Pk=22	Total size:9
Job 10:	s=7	p=7	d=132	L=(48+44-0)=92=			Pk=7	Total size:7
Job 11:	s=8	p=26	d=134	L=(72+44-0)=116=			Pk=26	Total size:8
Job 12:	s=8	p=25	d=139	L=(92+44-0)=136=			Pk=25	Total size:8
Job 13:	s=3	p=19	d=141	L=(109+25-1220)=-1086=			Pk=19	Total size:0
Job 14:	s=2	p=61	d=144	L=(167+27--1.76081e-11)=194=			Pk=63	Total size:9
Job 15:	s=2	p=31	d=152	L=(190+45-1.35447e-13)=235=			Pk=50	Total size:9
Job 16:	s=10	p=36	d=154	L=(224+45-0)=269=			Pk=36	Total size:10
Job 17:	s=7	p=50	d=165	L=(263+-5-1220)=-962=			Pk=50	Total size:0
Job 18:	s=7	p=15	d=166	L=(277+-5-0)=272=			Pk=15	Total size:7
Job 19:	s=5	p=24	d=167	L=(300+-29-1220)=-949=			Pk=24	Total size:0
Job 20:	s=10	p=36	d=181	L=(322+-29-0)=293=			Pk=36	Total size:10
Job 21:	s=4	p=13	d=183	L=(333+-42-1220)=-929=			Pk=13	Total size:0
Job 22:	s=8	p=30	d=185	L=(361+-42-0)=319=			Pk=30	Total size:8
Job 23:	s=6	p=65	d=191	L=(420+-42-0)=378=			Pk=65	Total size:10
Job 24:	s=5	p=47	d=192	L=(466+-42-0)=424=			Pk=47	Total size:10
Job 25:	s=9	p=35	d=199	L=(494+-42-0)=452=			Pk=35	Total size:9
Job 26:	s=3	p=88	d=202	L=(579+-35-0)=544=			Pk=95	Total size:10
Job 27:	s=5	p=35	d=207	L=(609+-70-1220)=-681=			Pk=35	Total size:0
Job 28:	s=10	p=50	d=211	L=(655+-70-0)=585=			Pk=50	Total size:10
Job 29:	s=10	p=16	d=220	L=(662+-70-0)=592=			Pk=16	Total size:10
Job 30:	s=9	p=49	d=234	L=(697+-70-0)=627=			Pk=49	Total size:9
Job 31:	s=9	p=79	d=235	L=(775+-70-0)=705=			Pk=79	Total size:10
Job 32:	s=6	p=27	d=260	L=(777+-97-1220)=-540=			Pk=27	Total size:0
Job 33:	s=6	p=73	d=264	L=(846+-170-1220)=-544=			Pk=73	Total size:0
Job 34:	s=8	p=45	d=266	L=(889+-170-0)=719=			Pk=45	Total size:8
Job 35:	s=4	p=93	d=278	L=(970+-170-0)=800=			Pk=93	Total size:10
Job 36:	s=4	p=76	d=291	L=(1033+-246-1220)=-433=			Pk=76	Total size:0
Job 37:	s=10	p=42	d=324	L=(1042+-246-0)=796=			Pk=42	Total size:10
Job 38:	s=9	p=78	d=333	L=(1111+-246-0)=865=			Pk=78	Total size:9
Job 39:	s=7	p=63	d=334	L=(1173+-309-1220)=-356=			Pk=63	Total size:0
Job 40:	s=2	p=73	d=349	L=(1231+-382-1220)=-371=			Pk=73	Total size:0
Job 41:	s=9	p=98	d=363	L=(1315+-382-0)=933=			Pk=98	Total size:9
Job 42:	s=7	p=95	d=370	L=(1403+-477-1220)=-294=			Pk=95	Total size:0
Job 43:	s=4	p=54	d=378	L=(1449+-531-1220)=-302=			Pk=54	Total size:0
Job 44:	s=8	p=76	d=389	L=(1514+-531-0)=983=			Pk=76	Total size:10
Job 45:	s=2	p=69	d=396	L=(1576+-600-1220)=-244=			Pk=69	Total size:0
Job 46:	s=9	p=71	d=443	L=(1600+-600-0)=1000=			Pk=71	Total size:9
Job 47:	s=1	p=73	d=455	L=(1661+-673-1220)=-232=			Pk=73	Total size:0
Job 48:	s=2	p=83	d=483	L=(1716+-756-1220)=-260=			Pk=83	Total size:0
Job 49:	s=10	p=81	d=506	L=(1774+-756-0)=1018=			Pk=81	Total size:10

0
1.42857
1022
4.74 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-19.csv
121
156
210
220
285
305
347
350
453
455
475
495
503
506
517
526
567
578
586
610
619
621
633
649
667
755
776
789
818
851
877
889
902
930
939
948
992
1009
1013
1042
1049
1067
1100
1196
1299
1321
1453
1468
1511
1564
Job 0: due 121
Job 1: due 156
Job 2: due 210
Job 3: due 220
Job 4: due 285
Job 5: due 305
Job 6: due 347
Job 7: due 350
Job 8: due 453
Job 9: due 455
Job 10: due 475
Job 11: due 495
Job 12: due 503
Job 13: due 506
Job 14: due 517
Job 15: due 526
Job 16: due 567
Job 17: due 578
Job 18: due 586
Job 19: due 610
Job 20: due 619
Job 21: due 621
Job 22: due 633
Job 23: due 649
Job 24: due 667
Job 25: due 755
Job 26: due 776
Job 27: due 789
Job 28: due 818
Job 29: due 851
Job 30: due 877
Job 31: due 889
Job 32: due 902
Job 33: due 930
Job 34: due 939
Job 35: due 948
Job 36: due 992
Job 37: due 1009
Job 38: due 1013
Job 39: due 1042
Job 40: due 1049
Job 41: due 1067
Job 42: due 1100
Job 43: due 1196
Job 44: due 1299
Job 45: due 1321
Job 46: due 1453
Job 47: due 1468
Job 48: due 1511
Job 49: due 1564
Ignore all jobs after 43
Lmaxinc before safe moves: 1007
Now using unsafety tolerance 0
New Lmaxincnew: 555
Difference: 452
Lmaxinc after safe moves: 308025
Initial solution:
0 1 0 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 8 20 21 16 23 24 6 10 3 5 29 30 31 32 20 34 35 36 37 4 12 1 41 42 
Updating LmaxLB to -69.8. C=51.2, d=121Updating LmaxLB to -63.4. C=92.6, d=156Updating LmaxLB to -19.1. C=330.9, d=350Updating LmaxLB to -1.39999. C=501.6, d=503Updating LmaxLB to 6.09998. C=512.1, d=506Updating LmaxLB to 38.3. C=616.3, d=578Updating LmaxLB to 40.5. C=659.5, d=619Updating LmaxLB to 45.7. C=666.7, d=621Updating LmaxLB to 53.2. C=686.2, d=633Updating LmaxLB to 110.8. C=759.8, d=649Updating LmaxLB to 116. C=783, d=667Updating LmaxLB to 129. C=1077, d=948Updating LmaxLB to 174.6. C=1241.6, d=1067Updating LmaxLB to 200.1. C=1300.1, d=1100Lower bound on Lmax based on areas:0
Max Lksingle:1007
Max reduction:1007
Now adding static psi-2-in-2 dominance rules ...
Added 202 safe move dominance lazy constraints
Added 125 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2404 rows and 1539 columns.
MIP Presolve modified 1294 coefficients.
Aggregator did 11 substitutions.
Reduced MIP has 439 rows, 344 columns, and 2944 nonzeros.
Reduced MIP has 300 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
MIP Presolve eliminated 6 rows and 0 columns.
Reduced MIP has 433 rows, 344 columns, and 2610 nonzeros.
Reduced MIP has 300 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 435.
Problem contains 125 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      246.4044    67                    246.4044      231         
      0     0      286.7095    65                    Cuts: 65      305         
      0     0      311.7065    74                    Cuts: 54      387         
      0     0      322.6102    67                    Cuts: 52      438         
      0     0      325.2539    73                    Cuts: 29      470         
      0     0      327.8416    73                    Cuts: 18      489         
      0     0      328.3507    74                    Cuts: 17      506         
      0     0      328.9340    68                     Cuts: 6      517         
      0     0      330.7586    64                    Cuts: 27      546         
      0     0      330.9243    65                    Cuts: 20      552         
      0     0      330.9888    65                 Impl Bds: 4      556         
*     0+    0                          417.0000      330.9888      556   20.63%
*     0+    0                          414.0000      330.9888      556   20.05%
      0     2      330.9888    65      414.0000      331.2182      556   20.00%
Elapsed time =   0.15 sec. (tree size =  0.00 MB, solutions = 2)
*    80+   53                          404.0000      339.0671     2854   16.07%
    100    62      366.6227    51      404.0000      342.3507     3439   15.26%
*   110+   34                          380.0000      342.3622     3826    9.90%
*   110+   22                          375.0000      342.3622     3826    8.70%
*   114    19      integral     0      368.0000      342.3622     3906    6.97%
*   115    18      integral     0      367.0000      342.3622     3924    6.71%
    200    40        cutoff            367.0000      358.0994     6217    2.43%
    300    35      363.0656    43      367.0000      362.6556     8390    1.18%

Clique cuts applied:  4
Cover cuts applied:  22
Implied bound cuts applied:  196
Flow cuts applied:  7
Zero-half cuts applied:  18
Gomory fractional cuts applied:  5
Lazy constraints applied:  15
Optimal
Lmax: 367
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 2
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 4
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 16
Job 21 into batch 6
Job 22 into batch 8
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 3
Job 28 into batch 7
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 12
Job 32 into batch 19
Job 33 into batch 10
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 17
Job 38 into batch 26
Job 39 into batch 34
Job 40 into batch 0
Job 41 into batch 41
Job 42 into batch 42
Job 0:	s=8	p=64	d=121	L=(-57+0-0)=-57=			Pk=64	Total size:9
Job 1:	s=9	p=46	d=156	L=(-46+0-0)=-46=			Pk=46	Total size:9
Job 2:	s=2	p=46	d=210	L=(-54+50-0)=-4=			Pk=97	Total size:10
Job 3:	s=8	p=66	d=220	L=(2+49-1.84852e-13)=51=			Pk=66	Total size:10
Job 4:	s=4	p=17	d=285	L=(-46+53-0)=7=			Pk=21	Total size:9
Job 5:	s=8	p=97	d=305	L=(31+-44-555)=-568=			Pk=97	Total size:0
Job 6:	s=4	p=16	d=347	L=(5+-44-0)=-39=			Pk=16	Total size:10
Job 7:	s=9	p=95	d=350	L=(97+-44-0)=53=			Pk=95	Total size:10
Job 8:	s=7	p=59	d=453	L=(53+-38-0)=15=			Pk=65	Total size:10
Job 9:	s=8	p=49	d=455	L=(100+-38-5.54556e-13)=62=			Pk=49	Total size:8
Job 10:	s=4	p=38	d=475	L=(118+-38-0)=80=			Pk=38	Total size:10
Job 11:	s=10	p=41	d=495	L=(139+-38-0)=101=			Pk=41	Total size:10
Job 12:	s=4	p=85	d=503	L=(216+-38-0)=178=			Pk=85	Total size:10
Job 13:	s=5	p=21	d=506	L=(234+-59-555)=-380=			Pk=21	Total size:0
Job 14:	s=10	p=2	d=517	L=(225+-59-0)=166=			Pk=2	Total size:10
Job 15:	s=9	p=4	d=526	L=(220+-59-0)=161=			Pk=4	Total size:9
Job 16:	s=6	p=64	d=567	L=(243+-59-0)=184=			Pk=64	Total size:10
Job 17:	s=7	p=86	d=578	L=(318+-53-0)=265=			Pk=92	Total size:10
Job 18:	s=7	p=9	d=586	L=(319+-53-0)=266=			Pk=9	Total size:7
Job 19:	s=3	p=39	d=610	L=(334+-33-0)=301=			Pk=59	Total size:10
Job 20:	s=4	p=63	d=619	L=(388+-96-555)=-263=			Pk=63	Total size:0
Job 21:	s=6	p=12	d=621	L=(398+-108-555)=-265=			Pk=12	Total size:0
Job 22:	s=3	p=65	d=633	L=(451+-173-555)=-277=			Pk=65	Total size:0
Job 23:	s=8	p=92	d=649	L=(527+-172--7.39409e-13)=355=			Pk=92	Total size:8
Job 24:	s=8	p=29	d=667	L=(538+-172-0)=366=			Pk=29	Total size:8
Job 25:	s=6	p=16	d=755	L=(466+-172-0)=294=			Pk=16	Total size:6
Job 26:	s=5	p=27	d=776	L=(472+-172-0)=300=			Pk=27	Total size:10
Job 27:	s=2	p=42	d=789	L=(501+-214-555)=-268=			Pk=42	Total size:0
Job 28:	s=1	p=82	d=818	L=(554+-296-555)=-297=			Pk=82	Total size:0
Job 29:	s=8	p=51	d=851	L=(572+-296-0)=276=			Pk=51	Total size:8
Job 30:	s=7	p=14	d=877	L=(560+-296-0)=264=			Pk=14	Total size:7
Job 31:	s=6	p=67	d=889	L=(615+-363-555)=-303=			Pk=67	Total size:0
Job 32:	s=7	p=59	d=902	L=(661+-422-555)=-316=			Pk=59	Total size:0
Job 33:	s=6	p=23	d=930	L=(656+-445-555)=-344=			Pk=23	Total size:0
Job 34:	s=6	p=66	d=939	L=(713+-436-0)=277=			Pk=75	Total size:10
Job 35:	s=8	p=86	d=948	L=(790+-436-0)=354=			Pk=86	Total size:8
Job 36:	s=9	p=26	d=992	L=(772+-436-0)=336=			Pk=26	Total size:9
Job 37:	s=3	p=92	d=1009	L=(847+-528-555)=-236=			Pk=92	Total size:0
Job 38:	s=5	p=17	d=1013	L=(860+-545-555)=-240=			Pk=17	Total size:0
Job 39:	s=4	p=75	d=1042	L=(906+-620-555)=-269=			Pk=75	Total size:0
Job 40:	s=1	p=21	d=1049	L=(920+-641-555)=-276=			Pk=21	Total size:0
Job 41:	s=10	p=73	d=1067	L=(975+-641-0)=334=			Pk=73	Total size:10
Job 42:	s=9	p=65	d=1100	L=(1007+-641-0)=366=			Pk=65	Total size:9

0
1.53571
367
0.72 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-20.csv
182
215
218
228
262
283
291
335
366
385
399
441
442
454
512
567
621
625
627
733
773
802
804
828
831
835
857
866
960
976
985
988
988
1004
1011
1120
1135
1192
1194
1232
1260
1261
1264
1309
1343
1365
1369
1396
1460
1481
Job 0: due 182
Job 1: due 215
Job 2: due 218
Job 3: due 228
Job 4: due 262
Job 5: due 283
Job 6: due 291
Job 7: due 335
Job 8: due 366
Job 9: due 385
Job 10: due 399
Job 11: due 441
Job 12: due 442
Job 13: due 454
Job 14: due 512
Job 15: due 567
Job 16: due 621
Job 17: due 625
Job 18: due 627
Job 19: due 733
Job 20: due 773
Job 21: due 802
Job 22: due 804
Job 23: due 828
Job 24: due 831
Job 25: due 835
Job 26: due 857
Job 27: due 866
Job 28: due 960
Job 29: due 976
Job 30: due 985
Job 31: due 988
Job 32: due 988
Job 33: due 1004
Job 34: due 1011
Job 35: due 1120
Job 36: due 1135
Job 37: due 1192
Job 38: due 1194
Job 39: due 1232
Job 40: due 1260
Job 41: due 1261
Job 42: due 1264
Job 43: due 1309
Job 44: due 1343
Job 45: due 1365
Job 46: due 1369
Job 47: due 1396
Job 48: due 1460
Job 49: due 1481
Ignore all jobs after 50
Lmaxinc before safe moves: 949
Now using unsafety tolerance 0
New Lmaxincnew: 379
Difference: 570
Lmaxinc after safe moves: 143641
Initial solution:
0 1 2 3 4 5 6 7 8 9 8 11 12 2 14 5 16 7 18 19 1 21 9 23 0 3 26 27 28 29 30 31 32 33 11 35 36 4 38 16 12 29 2 12 19 14 46 47 48 38 
Updating LmaxLB to -163.1. C=18.9, d=182Updating LmaxLB to -159.7. C=102.3, d=262Updating LmaxLB to -123.3. C=159.7, d=283Updating LmaxLB to -33.3. C=257.7, d=291same duedate: 31
Updating LmaxLB to -29.9999. C=958, d=988Updating LmaxLB to -28.4999. C=975.5, d=1004Updating LmaxLB to -16.2999. C=994.7, d=1011Lower bound on Lmax based on areas:-2147483648
Max Lksingle:949
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 700 safe move dominance lazy constraints
Added 253 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3108 rows and 1894 columns.
MIP Presolve modified 1894 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 745 rows, 655 columns, and 4576 nonzeros.
Reduced MIP has 604 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.01 sec.
Tried aggregator 1 time.
MIP Presolve eliminated 1 rows and 0 columns.
Reduced MIP has 744 rows, 655 columns, and 4538 nonzeros.
Reduced MIP has 604 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1588.
Problem contains 253 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0       12.1557   111                     12.1557      511         
      0     0       52.9371   126                    Cuts: 77      678         
      0     0       57.8243   115                    Cuts: 84      819         
      0     0       67.3842   110                    Cuts: 60      969         
      0     0       75.2604   117                    Cuts: 53     1044         
      0     0       82.2816   106                    Cuts: 50     1106         
      0     0       84.2937   122                    Cuts: 30     1145         
      0     0       86.6554   125                    Cuts: 29     1168         
      0     0       87.5118   128                    Cuts: 23     1208         
      0     0       87.6765   122                    Cuts: 13     1222         
      0     0       87.7192   127                     Cuts: 7     1233         
      0     0       87.7231   133                     Cuts: 2     1240         
      0     0       87.8972   129                     Cuts: 2     1261         
      0     0       87.9086   129                     Cuts: 3     1266         
*     0+    0                          333.0000       87.9086     1266   73.60%
      0     2       87.9086   129      333.0000       87.9174     1266   73.60%
Elapsed time =   0.45 sec. (tree size =  0.00 MB, solutions = 1)
    100    94      243.7384    29      333.0000       91.3240     6687   72.58%
*   170+  154                          321.0000       91.5868     9879   71.47%
*   177   140      integral     0      269.0000       91.5868    10025   65.95%
    200   163      227.5294    38      269.0000       98.5947    12428   63.35%
*   267   198      integral     0      259.0000       99.0382    15566   61.76%
    300   228      258.0000    13      259.0000      101.6785    17584   60.74%
*   367+  189                          214.0000      103.3079    21540   51.73%
    400   217      169.6142    84      214.0000      105.5733    24034   50.67%
    500   300      202.7268    87      214.0000      112.4745    30746   47.44%
*   524+  212                          211.0000      196.3350    33256    6.95%
*   524+  141                          203.0000      197.1554    33396    2.88%
*   524+   93                          202.0000      197.1554    33396    2.40%

GUB cover cuts applied:  2
Clique cuts applied:  11
Cover cuts applied:  30
Implied bound cuts applied:  37
Flow cuts applied:  3
Mixed integer rounding cuts applied:  19
Zero-half cuts applied:  10
Gomory fractional cuts applied:  8
Lazy constraints applied:  7
Optimal
Lmax: 202
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 3
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 8
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 7
Job 14 into batch 11
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 7
Job 18 into batch 15
Job 19 into batch 2
Job 20 into batch 1
Job 21 into batch 21
Job 22 into batch 9
Job 23 into batch 23
Job 24 into batch 0
Job 25 into batch 23
Job 26 into batch 12
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 29
Job 34 into batch 28
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 30
Job 38 into batch 16
Job 39 into batch 39
Job 40 into batch 40
Job 41 into batch 39
Job 42 into batch 42
Job 43 into batch 40
Job 44 into batch 44
Job 45 into batch 42
Job 46 into batch 44
Job 47 into batch 47
Job 48 into batch 48
Job 49 into batch 4
Job 0:	s=7	p=27	d=182	L=(-155+0-0)=-155=			Pk=27	Total size:10
Job 1:	s=8	p=10	d=215	L=(-178+0-0)=-178=			Pk=10	Total size:10
Job 2:	s=4	p=39	d=218	L=(-142+0-0)=-142=			Pk=39	Total size:10
Job 3:	s=3	p=1	d=228	L=(-151+80-0)=-71=			Pk=82	Total size:10
Job 4:	s=7	p=85	d=262	L=(-100+88-0)=-12=			Pk=94	Total size:10
Job 5:	s=7	p=82	d=283	L=(-39+6-379)=-412=			Pk=82	Total size:0
Job 6:	s=10	p=98	d=291	L=(51+6-0)=57=			Pk=98	Total size:10
Job 7:	s=5	p=44	d=335	L=(51+6-0)=57=			Pk=44	Total size:10
Job 8:	s=8	p=40	d=366	L=(60+6-0)=66=			Pk=40	Total size:10
Job 9:	s=7	p=19	d=385	L=(60+6-0)=66=			Pk=19	Total size:10
Job 10:	s=2	p=23	d=399	L=(69+-16-379)=-326=			Pk=23	Total size:0
Job 11:	s=5	p=49	d=441	L=(76+12-0)=88=			Pk=78	Total size:10
Job 12:	s=1	p=92	d=442	L=(167+12-0)=179=			Pk=92	Total size:10
Job 13:	s=1	p=35	d=454	L=(190+-23-379)=-212=			Pk=35	Total size:0
Job 14:	s=5	p=78	d=512	L=(210+-101-379)=-270=			Pk=78	Total size:0
Job 15:	s=3	p=32	d=567	L=(187+-98-0)=89=			Pk=35	Total size:10
Job 16:	s=7	p=84	d=621	L=(217+-85-0)=132=			Pk=97	Total size:10
Job 17:	s=4	p=43	d=625	L=(256+-128-379)=-251=			Pk=43	Total size:0
Job 18:	s=7	p=35	d=627	L=(289+-163-379)=-253=			Pk=35	Total size:0
Job 19:	s=6	p=19	d=733	L=(202+-182-379)=-359=			Pk=19	Total size:0
Job 20:	s=2	p=3	d=773	L=(165+-185-379)=-399=			Pk=3	Total size:0
Job 21:	s=10	p=92	d=802	L=(228+-185-0)=43=			Pk=92	Total size:10
Job 22:	s=3	p=10	d=804	L=(236+-195-379)=-338=			Pk=10	Total size:0
Job 23:	s=8	p=86	d=828	L=(298+-195-0)=103=			Pk=86	Total size:10
Job 24:	s=3	p=26	d=831	L=(321+-221-379)=-279=			Pk=26	Total size:0
Job 25:	s=2	p=1	d=835	L=(318+-222-379)=-283=			Pk=1	Total size:0
Job 26:	s=9	p=90	d=857	L=(386+-312-379)=-305=			Pk=90	Total size:0
Job 27:	s=7	p=5	d=866	L=(382+-312-0)=70=			Pk=5	Total size:7
Job 28:	s=6	p=74	d=960	L=(362+-312-0)=50=			Pk=74	Total size:10
Job 29:	s=5	p=32	d=976	L=(378+-309-0)=69=			Pk=35	Total size:10
Job 30:	s=7	p=62	d=985	L=(431+-309-0)=122=			Pk=62	Total size:9
Job 31:	s=8	p=29	d=988	L=(457+-309-0)=148=			Pk=29	Total size:8
Job 32:	s=9	p=52	d=988	L=(509+-309-0)=200=			Pk=52	Total size:9
Job 33:	s=5	p=35	d=1004	L=(528+-344-379)=-195=			Pk=35	Total size:0
Job 34:	s=4	p=48	d=1011	L=(569+-392-379)=-202=			Pk=48	Total size:0
Job 35:	s=9	p=95	d=1120	L=(555+-392-0)=163=			Pk=95	Total size:9
Job 36:	s=8	p=21	d=1135	L=(561+-392-0)=169=			Pk=21	Total size:8
Job 37:	s=2	p=59	d=1192	L=(563+-451-379)=-267=			Pk=59	Total size:0
Job 38:	s=3	p=97	d=1194	L=(658+-548-379)=-269=			Pk=97	Total size:0
Job 39:	s=3	p=7	d=1232	L=(627+-532-0)=95=			Pk=23	Total size:8
Job 40:	s=5	p=92	d=1260	L=(691+-532-0)=159=			Pk=92	Total size:9
Job 41:	s=5	p=8	d=1261	L=(698+-540-379)=-221=			Pk=8	Total size:0
Job 42:	s=4	p=40	d=1264	L=(735+-540-0)=195=			Pk=40	Total size:8
Job 43:	s=4	p=80	d=1309	L=(770+-620-379)=-229=			Pk=80	Total size:0
Job 44:	s=4	p=17	d=1343	L=(753+-606-0)=147=			Pk=31	Total size:10
Job 45:	s=4	p=39	d=1365	L=(770+-645-379)=-254=			Pk=39	Total size:0
Job 46:	s=6	p=31	d=1369	L=(797+-676-379)=-258=			Pk=31	Total size:0
Job 47:	s=8	p=75	d=1396	L=(845+-676-0)=169=			Pk=75	Total size:8
Job 48:	s=8	p=95	d=1460	L=(876+-676-0)=200=			Pk=95	Total size:8
Job 49:	s=3	p=94	d=1481	L=(949+-770-379)=-200=			Pk=94	Total size:0

-2147483648
1.72414
202
5.02 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-21.csv
59
63
65
69
69
72
85
88
91
96
109
117
118
119
122
125
133
134
138
139
140
142
146
147
153
156
162
167
169
175
178
188
194
195
200
204
215
220
223
224
243
249
251
258
274
302
302
306
323
360
Job 0: due 59
Job 1: due 63
Job 2: due 65
Job 3: due 69
Job 4: due 69
Job 5: due 72
Job 6: due 85
Job 7: due 88
Job 8: due 91
Job 9: due 96
Job 10: due 109
Job 11: due 117
Job 12: due 118
Job 13: due 119
Job 14: due 122
Job 15: due 125
Job 16: due 133
Job 17: due 134
Job 18: due 138
Job 19: due 139
Job 20: due 140
Job 21: due 142
Job 22: due 146
Job 23: due 147
Job 24: due 153
Job 25: due 156
Job 26: due 162
Job 27: due 167
Job 28: due 169
Job 29: due 175
Job 30: due 178
Job 31: due 188
Job 32: due 194
Job 33: due 195
Job 34: due 200
Job 35: due 204
Job 36: due 215
Job 37: due 220
Job 38: due 223
Job 39: due 224
Job 40: due 243
Job 41: due 249
Job 42: due 251
Job 43: due 258
Job 44: due 274
Job 45: due 302
Job 46: due 302
Job 47: due 306
Job 48: due 323
Job 49: due 360
Ignore all jobs after 50
Lmaxinc before safe moves: 2052
Now using unsafety tolerance 0
New Lmaxincnew: 1301
Difference: 751
Lmaxinc after safe moves: 1.6926e+06
Initial solution:
0 1 0 3 4 5 6 7 8 9 10 11 12 13 9 15 3 11 18 19 4 21 22 15 3 25 26 27 28 25 30 31 32 5 34 35 36 15 38 39 18 18 42 30 44 45 46 46 36 44 
Updating LmaxLB to -32.6. C=26.4, d=59Updating LmaxLB to -31.8. C=33.2, d=65same duedate: 3
Updating LmaxLB to -3.9. C=65.1, d=69Updating LmaxLB to 1.2. C=73.2, d=72Updating LmaxLB to 7.1. C=92.1, d=85Updating LmaxLB to 32.9. C=120.9, d=88Updating LmaxLB to 59.9. C=150.9, d=91Updating LmaxLB to 69.6. C=165.6, d=96Updating LmaxLB to 72.7. C=190.7, d=118Updating LmaxLB to 107.7. C=226.7, d=119Updating LmaxLB to 133.4. C=255.4, d=122Updating LmaxLB to 173. C=298, d=125Updating LmaxLB to 181. C=315, d=134Updating LmaxLB to 211.5. C=349.5, d=138Updating LmaxLB to 212.5. C=351.5, d=139Updating LmaxLB to 215.3. C=355.3, d=140Updating LmaxLB to 287.3. C=429.3, d=142Updating LmaxLB to 291.1. C=437.1, d=146Updating LmaxLB to 303.5. C=450.5, d=147Updating LmaxLB to 305.6. C=461.6, d=156Updating LmaxLB to 330.6. C=492.6, d=162Updating LmaxLB to 401.6. C=568.6, d=167Updating LmaxLB to 432.4. C=601.4, d=169Updating LmaxLB to 446.7. C=621.7, d=175Updating LmaxLB to 458.7. C=636.7, d=178Updating LmaxLB to 467.9. C=655.9, d=188Updating LmaxLB to 484.1. C=678.1, d=194Updating LmaxLB to 496.6. C=691.6, d=195Updating LmaxLB to 528.4. C=728.4, d=200Updating LmaxLB to 560.4. C=764.4, d=204Updating LmaxLB to 605.8. C=820.8, d=215Updating LmaxLB to 607.9. C=827.9, d=220Updating LmaxLB to 676.9. C=899.9, d=223Updating LmaxLB to 740.7. C=964.7, d=224Updating LmaxLB to 743.8. C=992.8, d=249Updating LmaxLB to 815.6. C=1066.6, d=251Updating LmaxLB to 866.2. C=1124.2, d=258Updating LmaxLB to 876. C=1150, d=274same duedate: 45
Updating LmaxLB to 954.8. C=1256.8, d=302Updating LmaxLB to 995.3. C=1301.3, d=306Updating LmaxLB to 996.5. C=1319.5, d=323Updating LmaxLB to 1011.1. C=1371.1, d=360Lower bound on Lmax based on areas:0
Max Lksingle:2052
Max reduction:2052
Now adding static psi-2-in-2 dominance rules ...
Added 134 safe move dominance lazy constraints
Added 108 safe move requirement lazy constraints
Tried aggregator 1 time.
MIP Presolve eliminated 3080 rows and 2001 columns.
MIP Presolve modified 2349 coefficients.
Reduced MIP has 793 rows, 551 columns, and 3861 nonzeros.
Reduced MIP has 500 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 664.
Problem contains 108 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      852.7703   129                    852.7703      402         
      0     0      934.7383   115                   Cuts: 107      546         
      0     0      985.2635   108                   Cuts: 110      700         
      0     0     1004.7758   149                   Cuts: 104      852         
      0     0     1013.4207   148                    Cuts: 96      947         
      0     0     1016.8791   140                    Cuts: 62      987         
      0     0     1018.8295   148                    Cuts: 28     1028         
      0     0     1019.7030   156                    Cuts: 56     1059         
*     0+    0                         1294.0000     1019.7030     1059   21.20%
      0     0     1019.7798   153     1294.0000  Impl Bds: 25     1072   21.19%
      0     0     1019.8262   154     1294.0000  Impl Bds: 16     1081   21.19%
      0     2     1019.8262   154     1294.0000     1019.8262     1081   21.19%
Elapsed time =   0.34 sec. (tree size =  0.00 MB, solutions = 1)
*    70    65      integral     0     1230.0000     1020.0831     5003   17.07%
    100    95     1119.6510    58     1230.0000     1020.0972     7168   17.07%
*   133   122      integral     0     1226.0000     1020.0972     8205   16.79%
*   160+  142                         1221.0000     1023.8482     9385   16.15%
*   180   162      integral     0     1220.0000     1023.8482     9660   16.08%
    200   180     1129.5353    84     1220.0000     1023.8554    10576   16.08%
*   230+  201                         1216.0000     1027.1496    11623   15.53%
    300   262     1067.8235   123     1216.0000     1029.8914    14895   15.30%
*   340   292      integral     0     1210.0000     1029.8914    16282   14.89%
    400   343     1124.6638   102     1210.0000     1035.0183    19296   14.46%
*   440+  356                         1202.0000     1035.0883    20785   13.89%
*   480+  373                         1196.0000     1035.2102    23341   13.44%
*   490+  316                         1172.0000     1035.2102    23652   11.67%
    500   322     1053.9192   150     1172.0000     1037.9598    23927   11.44%
*   590+  396                         1171.0000     1040.0289    28473   11.18%
    600   408     1120.3062    98     1171.0000     1040.0289    29030   11.18%
Elapsed time =   3.32 sec. (tree size =  0.87 MB, solutions = 11)
*   700+  328                         1157.0000     1152.0587    35039    0.43%
    700   329     1155.8077    20     1157.0000     1155.8077    35479    0.10%
*   704    54      integral     0     1156.0000     1155.9130    35493    0.01%

Clique cuts applied:  5
Cover cuts applied:  25
Implied bound cuts applied:  14
Flow cuts applied:  5
Mixed integer rounding cuts applied:  16
Zero-half cuts applied:  17
Gomory fractional cuts applied:  11
Lazy constraints applied:  5
Optimal
Lmax: 1156
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 0
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 9
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 15
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 7
Job 25 into batch 4
Job 26 into batch 18
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 5
Job 30 into batch 30
Job 31 into batch 11
Job 32 into batch 2
Job 33 into batch 16
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 15
Job 41 into batch 38
Job 42 into batch 37
Job 43 into batch 23
Job 44 into batch 44
Job 45 into batch 30
Job 46 into batch 36
Job 47 into batch 44
Job 48 into batch 44
Job 49 into batch 49
Job 0:	s=8	p=33	d=59	L=(-26+0-0)=-26=			Pk=33	Total size:10
Job 1:	s=6	p=1	d=63	L=(-29+0-0)=-29=			Pk=1	Total size:6
Job 2:	s=2	p=31	d=65	L=(0+6-0)=6=			Pk=37	Total size:8
Job 3:	s=2	p=23	d=69	L=(19+-17-1301)=-1299=			Pk=23	Total size:0
Job 4:	s=7	p=39	d=69	L=(58+-17-0)=41=			Pk=39	Total size:10
Job 5:	s=3	p=27	d=72	L=(82+-15-0)=67=			Pk=29	Total size:10
Job 6:	s=9	p=21	d=85	L=(90+-15-0)=75=			Pk=21	Total size:9
Job 7:	s=9	p=32	d=88	L=(119+-15-0)=104=			Pk=32	Total size:10
Job 8:	s=10	p=30	d=91	L=(146+-15-0)=131=			Pk=30	Total size:10
Job 9:	s=3	p=49	d=96	L=(190+-15-0)=175=			Pk=49	Total size:10
Job 10:	s=10	p=8	d=109	L=(185+-15-0)=170=			Pk=8	Total size:10
Job 11:	s=3	p=15	d=117	L=(192+2-0)=194=			Pk=32	Total size:9
Job 12:	s=9	p=14	d=118	L=(205+2-0)=207=			Pk=14	Total size:9
Job 13:	s=10	p=36	d=119	L=(240+2-0)=242=			Pk=36	Total size:10
Job 14:	s=7	p=41	d=122	L=(278+-39-1301)=-1062=			Pk=41	Total size:0
Job 15:	s=6	p=71	d=125	L=(346+-39-0)=307=			Pk=71	Total size:10
Job 16:	s=5	p=16	d=133	L=(354+-28-0)=326=			Pk=27	Total size:10
Job 17:	s=6	p=15	d=134	L=(368+-28-0)=340=			Pk=15	Total size:6
Job 18:	s=5	p=69	d=138	L=(433+-28-0)=405=			Pk=69	Total size:10
Job 19:	s=10	p=2	d=139	L=(434+-28-0)=406=			Pk=2	Total size:10
Job 20:	s=1	p=38	d=140	L=(471+-65-1301)=-895=			Pk=38	Total size:3.9968e-15
Job 21:	s=10	p=74	d=142	L=(543+-65-0)=478=			Pk=74	Total size:10
Job 22:	s=6	p=13	d=146	L=(552+-65-0)=487=			Pk=13	Total size:6
Job 23:	s=2	p=67	d=147	L=(618+-60-0)=558=			Pk=72	Total size:10
Job 24:	s=1	p=21	d=153	L=(633+-81-1301)=-749=			Pk=21	Total size:0
Job 25:	s=3	p=30	d=156	L=(660+-111-1301)=-752=			Pk=30	Total size:0
Job 26:	s=5	p=62	d=162	L=(716+-173-1301)=-758=			Pk=62	Total size:0
Job 27:	s=10	p=76	d=167	L=(787+-173-0)=614=			Pk=76	Total size:10
Job 28:	s=8	p=41	d=169	L=(826+-173-0)=653=			Pk=41	Total size:8
Job 29:	s=7	p=29	d=175	L=(849+-202-1301)=-654=			Pk=29	Total size:0
Job 30:	s=2	p=75	d=178	L=(921+-188-0)=733=			Pk=89	Total size:10
Job 31:	s=6	p=32	d=188	L=(943+-220-1301)=-578=			Pk=32	Total size:0
Job 32:	s=6	p=37	d=194	L=(974+-257-1301)=-584=			Pk=37	Total size:0
Job 33:	s=5	p=27	d=195	L=(1000+-284-1301)=-585=			Pk=27	Total size:0
Job 34:	s=8	p=46	d=200	L=(1041+-284-0)=757=			Pk=46	Total size:8
Job 35:	s=8	p=45	d=204	L=(1082+-284-0)=798=			Pk=45	Total size:8
Job 36:	s=6	p=94	d=215	L=(1165+-284-8.6664e-13)=881=			Pk=94	Total size:10
Job 37:	s=1	p=71	d=220	L=(1231+-273-0)=958=			Pk=82	Total size:10
Job 38:	s=8	p=90	d=223	L=(1318+-273-0)=1045=			Pk=90	Total size:10
Job 39:	s=9	p=72	d=224	L=(1389+-273-0)=1116=			Pk=72	Total size:9
Job 40:	s=3	p=51	d=243	L=(1421+-324-1301)=-204=			Pk=51	Total size:0
Job 41:	s=2	p=64	d=249	L=(1479+-388-1301)=-210=			Pk=64	Total size:0
Job 42:	s=9	p=82	d=251	L=(1559+-470-1301)=-212=			Pk=82	Total size:0
Job 43:	s=8	p=72	d=258	L=(1624+-542-1301)=-219=			Pk=72	Total size:0
Job 44:	s=3	p=86	d=274	L=(1694+-537-0)=1157=			Pk=91	Total size:10
Job 45:	s=8	p=89	d=302	L=(1755+-626-1301)=-172=			Pk=89	Total size:0
Job 46:	s=4	p=89	d=302	L=(1844+-715-1301)=-172=			Pk=89	Total size:0
Job 47:	s=5	p=89	d=306	L=(1929+-804-1301)=-176=			Pk=89	Total size:0
Job 48:	s=2	p=91	d=323	L=(2003+-895-1301)=-193=			Pk=91	Total size:0
Job 49:	s=6	p=86	d=360	L=(2052+-895-0)=1157=			Pk=86	Total size:6

0
1.5625
1156
4.88 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-22.csv
14
87
103
105
110
119
124
127
131
131
138
140
151
153
162
171
184
194
196
206
212
219
219
225
230
233
241
245
250
257
260
260
261
263
276
294
295
351
354
369
383
395
410
418
421
446
455
487
504
536
Job 0: due 14
Job 1: due 87
Job 2: due 103
Job 3: due 105
Job 4: due 110
Job 5: due 119
Job 6: due 124
Job 7: due 127
Job 8: due 131
Job 9: due 131
Job 10: due 138
Job 11: due 140
Job 12: due 151
Job 13: due 153
Job 14: due 162
Job 15: due 171
Job 16: due 184
Job 17: due 194
Job 18: due 196
Job 19: due 206
Job 20: due 212
Job 21: due 219
Job 22: due 219
Job 23: due 225
Job 24: due 230
Job 25: due 233
Job 26: due 241
Job 27: due 245
Job 28: due 250
Job 29: due 257
Job 30: due 260
Job 31: due 260
Job 32: due 261
Job 33: due 263
Job 34: due 276
Job 35: due 294
Job 36: due 295
Job 37: due 351
Job 38: due 354
Job 39: due 369
Job 40: due 383
Job 41: due 395
Job 42: due 410
Job 43: due 418
Job 44: due 421
Job 45: due 446
Job 46: due 455
Job 47: due 487
Job 48: due 504
Job 49: due 536
Ignore all jobs after 50
Lmaxinc before safe moves: 2124
Now using unsafety tolerance 0
New Lmaxincnew: 1392
Difference: 732
Lmaxinc after safe moves: 1.93766e+06
Initial solution:
0 1 2 3 4 4 6 7 8 9 9 11 12 0 14 15 16 17 18 19 20 18 22 23 24 20 26 23 28 26 30 31 32 33 34 35 20 26 23 39 40 41 42 43 20 20 46 47 48 49 
Updating LmaxLB to -11.6. C=2.4, d=14same duedate: 8
Updating LmaxLB to -5.10001. C=132.9, d=138Updating LmaxLB to -3.10001. C=136.9, d=140Updating LmaxLB to 0.399994. C=151.4, d=151Updating LmaxLB to 2.89999. C=164.9, d=162Updating LmaxLB to 40.9. C=211.9, d=171Updating LmaxLB to 45.3. C=229.3, d=184Updating LmaxLB to 88.4. C=282.4, d=194Updating LmaxLB to 96. C=292, d=196Updating LmaxLB to 105.2. C=311.2, d=206Updating LmaxLB to 152.6. C=364.6, d=212same duedate: 21
Updating LmaxLB to 194.1. C=413.1, d=219Updating LmaxLB to 202.1. C=427.1, d=225Updating LmaxLB to 250.3. C=480.3, d=230Updating LmaxLB to 256. C=489, d=233Updating LmaxLB to 257.8. C=498.8, d=241Updating LmaxLB to 271.2. C=516.2, d=245Updating LmaxLB to 353.2. C=603.2, d=250Updating LmaxLB to 415.5. C=672.5, d=257same duedate: 30
Updating LmaxLB to 472.5. C=732.5, d=260Updating LmaxLB to 502.1. C=763.1, d=261Updating LmaxLB to 538.6. C=801.6, d=263Updating LmaxLB to 602.6. C=878.6, d=276Updating LmaxLB to 624.6. C=918.6, d=294Updating LmaxLB to 630.9. C=925.9, d=295Updating LmaxLB to 640.2. C=1009.2, d=369Updating LmaxLB to 660.2. C=1043.2, d=383Updating LmaxLB to 713. C=1108, d=395Updating LmaxLB to 779. C=1189, d=410Updating LmaxLB to 822.2. C=1240.2, d=418Updating LmaxLB to 825.4. C=1246.4, d=421Updating LmaxLB to 858.9. C=1313.9, d=455Updating LmaxLB to 903.4. C=1390.4, d=487Updating LmaxLB to 939.2. C=1443.2, d=504Updating LmaxLB to 994.5. C=1530.5, d=536Lower bound on Lmax based on areas:0
Max Lksingle:2124
Max reduction:2124
Now adding static psi-2-in-2 dominance rules ...
Added 149 safe move dominance lazy constraints
Added 107 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3111 rows and 2004 columns.
MIP Presolve modified 2402 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 757 rows, 544 columns, and 3462 nonzeros.
Reduced MIP has 493 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1170.
Problem contains 107 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      832.7983   125                    832.7983      444         
      0     0      875.1790   132                   Cuts: 105      648         
      0     0      927.5164   123                   Cuts: 140      821         
      0     0      960.8794   136                   Cuts: 122      957         
      0     0      980.9812   132                    Cuts: 84     1047         
      0     0      987.4859   137                    Cuts: 42     1110         
      0     0      989.7866   124                    Cuts: 23     1167         
      0     0      991.5791   135                    Cuts: 25     1220         
      0     0      992.2986   129                    Cuts: 20     1247         
*     0+    0                         1319.0000      992.2986     1247   24.77%
      0     0      993.2424   128     1319.0000      Cuts: 35     1283   24.70%
      0     0      993.9214   144     1319.0000      Cuts: 39     1303   24.65%
      0     0      994.1388   144     1319.0000      Cuts: 25     1321   24.63%
      0     0      994.2951   145     1319.0000      Cuts: 17     1328   24.62%
      0     0      994.4079   146     1319.0000   Impl Bds: 9     1331   24.61%
      0     2      994.4079   143     1319.0000      994.4079     1331   24.61%
Elapsed time =   0.35 sec. (tree size =  0.00 MB, solutions = 1)
    100    99     1035.8425    67     1319.0000      994.8971     5261   24.57%
*   120+  110                         1278.0000      994.8971     5732   22.15%
*   140+  118                         1209.0000      994.8971     6230   17.71%
*   190+  157                         1189.0000      997.5646     7568   16.10%
    200   163     1047.1307   118     1189.0000      998.4828     8063   16.02%
*   270+  197                         1156.0000      999.8869    10490   13.50%
*   270+  191                         1152.0000      999.8869    10490   13.20%
*   278   194      integral     0     1144.0000      999.8869    10693   12.60%
*   280   189      integral     0     1140.0000      999.8869    10752   12.29%
    300   207     1076.0001    97     1140.0000     1000.7711    11434   12.21%
    400   294     1093.2105   104     1140.0000     1002.7565    14940   12.04%
    500   377     1095.7291    92     1140.0000     1004.4538    19501   11.89%
*   536+  272                         1139.0000     1127.4737    21517    1.01%
*   536+  181                         1136.0000     1127.6124    21765    0.74%
*   536+  120                         1128.0000     1127.6124    21765    0.03%

Clique cuts applied:  10
Cover cuts applied:  27
Implied bound cuts applied:  103
Flow cuts applied:  7
Mixed integer rounding cuts applied:  14
Zero-half cuts applied:  17
Gomory fractional cuts applied:  7
Lazy constraints applied:  1
Optimal
Lmax: 1128
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 0
Job 4 into batch 4
Job 5 into batch 4
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 11
Job 13 into batch 7
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 2
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 9
Job 20 into batch 20
Job 21 into batch 10
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 26
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 22
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 26
Job 38 into batch 24
Job 39 into batch 18
Job 40 into batch 20
Job 41 into batch 36
Job 42 into batch 25
Job 43 into batch 43
Job 44 into batch 43
Job 45 into batch 45
Job 46 into batch 23
Job 47 into batch 45
Job 48 into batch 27
Job 49 into batch 49
Job 0:	s=4	p=6	d=14	L=(-8+7-0)=-1=			Pk=13	Total size:10
Job 1:	s=9	p=7	d=87	L=(-74+7-0)=-67=			Pk=7	Total size:9
Job 2:	s=4	p=4	d=103	L=(-86+31-0)=-55=			Pk=29	Total size:10
Job 3:	s=6	p=13	d=105	L=(-75+18-1392)=-1449=			Pk=13	Total size:0
Job 4:	s=8	p=32	d=110	L=(-48+18-0)=-30=			Pk=32	Total size:10
Job 5:	s=2	p=29	d=119	L=(-28+-11-1392)=-1431=			Pk=29	Total size:0
Job 6:	s=10	p=41	d=124	L=(8+-11-0)=-3=			Pk=41	Total size:10
Job 7:	s=7	p=15	d=127	L=(20+-11-0)=9=			Pk=15	Total size:10
Job 8:	s=9	p=1	d=131	L=(17+-11-0)=6=			Pk=1	Total size:9
Job 9:	s=4	p=35	d=131	L=(52+-11-0)=41=			Pk=35	Total size:10
Job 10:	s=5	p=34	d=138	L=(79+-2-0)=77=			Pk=43	Total size:10
Job 11:	s=5	p=8	d=140	L=(85+19-0)=104=			Pk=29	Total size:10
Job 12:	s=5	p=29	d=151	L=(103+-10-1392)=-1299=			Pk=29	Total size:0
Job 13:	s=3	p=5	d=153	L=(106+-15-1392)=-1301=			Pk=5	Total size:0
Job 14:	s=8	p=15	d=162	L=(112+-15-0)=97=			Pk=15	Total size:8
Job 15:	s=10	p=47	d=171	L=(150+-15-0)=135=			Pk=47	Total size:10
Job 16:	s=6	p=29	d=184	L=(166+-44-1392)=-1270=			Pk=29	Total size:0
Job 17:	s=9	p=59	d=194	L=(215+-44-0)=171=			Pk=59	Total size:9
Job 18:	s=2	p=48	d=196	L=(261+-36-0)=225=			Pk=55	Total size:10
Job 19:	s=6	p=32	d=206	L=(283+-68-1392)=-1177=			Pk=32	Total size:0
Job 20:	s=6	p=89	d=212	L=(366+-67--3.09086e-13)=299=			Pk=89	Total size:10
Job 21:	s=5	p=43	d=219	L=(402+-110-1392)=-1100=			Pk=43	Total size:0
Job 22:	s=5	p=54	d=219	L=(456+-87-0)=369=			Pk=77	Total size:10
Job 23:	s=2	p=70	d=225	L=(520+-72-0)=448=			Pk=85	Total size:9
Job 24:	s=7	p=76	d=230	L=(591+-72-0)=519=			Pk=76	Total size:10
Job 25:	s=1	p=87	d=233	L=(675+-69-0)=606=			Pk=90	Total size:10
Job 26:	s=1	p=98	d=241	L=(765+-67--3.09086e-13)=698=			Pk=99	Total size:10
Job 27:	s=3	p=58	d=245	L=(819+-37-3.09086e-12)=782=			Pk=88	Total size:9
Job 28:	s=10	p=87	d=250	L=(901+-37-0)=864=			Pk=87	Total size:10
Job 29:	s=7	p=99	d=257	L=(993+-136-1392)=-535=			Pk=99	Total size:0
Job 30:	s=7	p=33	d=260	L=(1023+-136-0)=887=			Pk=33	Total size:7
Job 31:	s=9	p=41	d=260	L=(1064+-136-0)=928=			Pk=41	Total size:9
Job 32:	s=9	p=34	d=261	L=(1097+-136-0)=961=			Pk=34	Total size:9
Job 33:	s=5	p=77	d=263	L=(1172+-213-1392)=-433=			Pk=77	Total size:0
Job 34:	s=10	p=77	d=276	L=(1236+-213-0)=1023=			Pk=77	Total size:10
Job 35:	s=10	p=40	d=294	L=(1258+-213-0)=1045=			Pk=40	Total size:10
Job 36:	s=1	p=73	d=295	L=(1330+-204--3.09086e-12)=1126=			Pk=81	Total size:9
Job 37:	s=2	p=96	d=351	L=(1370+-300-1392)=-322=			Pk=96	Total size:0
Job 38:	s=3	p=67	d=354	L=(1434+-366-1392)=-324=			Pk=67	Total size:0
Job 39:	s=8	p=55	d=369	L=(1474+-421-1392)=-339=			Pk=55	Total size:0
Job 40:	s=4	p=85	d=383	L=(1545+-506-1392)=-353=			Pk=85	Total size:0
Job 41:	s=8	p=81	d=395	L=(1614+-587-1392)=-365=			Pk=81	Total size:0
Job 42:	s=9	p=90	d=410	L=(1689+-677-1392)=-380=			Pk=90	Total size:0
Job 43:	s=8	p=64	d=418	L=(1745+-677-0)=1068=			Pk=64	Total size:9
Job 44:	s=1	p=62	d=421	L=(1804+-739-1392)=-327=			Pk=62	Total size:0
Job 45:	s=1	p=80	d=446	L=(1859+-734-0)=1125=			Pk=85	Total size:10
Job 46:	s=7	p=85	d=455	L=(1935+-819-1392)=-276=			Pk=85	Total size:0
Job 47:	s=9	p=85	d=487	L=(1988+-904-1392)=-308=			Pk=85	Total size:0
Job 48:	s=6	p=88	d=504	L=(2059+-992-1392)=-325=			Pk=88	Total size:0
Job 49:	s=9	p=97	d=536	L=(2124+-992-0)=1132=			Pk=97	Total size:9

0
1.6129
1128
2.78 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-23.csv
177
218
257
283
306
343
355
396
427
439
454
472
474
484
485
611
646
657
725
728
770
819
820
848
880
884
930
934
937
983
983
1031
1141
1201
1202
1206
1220
1225
1252
1254
1296
1342
1413
1418
1424
1429
1461
1463
1482
1630
Job 0: due 177
Job 1: due 218
Job 2: due 257
Job 3: due 283
Job 4: due 306
Job 5: due 343
Job 6: due 355
Job 7: due 396
Job 8: due 427
Job 9: due 439
Job 10: due 454
Job 11: due 472
Job 12: due 474
Job 13: due 484
Job 14: due 485
Job 15: due 611
Job 16: due 646
Job 17: due 657
Job 18: due 725
Job 19: due 728
Job 20: due 770
Job 21: due 819
Job 22: due 820
Job 23: due 848
Job 24: due 880
Job 25: due 884
Job 26: due 930
Job 27: due 934
Job 28: due 937
Job 29: due 983
Job 30: due 983
Job 31: due 1031
Job 32: due 1141
Job 33: due 1201
Job 34: due 1202
Job 35: due 1206
Job 36: due 1220
Job 37: due 1225
Job 38: due 1252
Job 39: due 1254
Job 40: due 1296
Job 41: due 1342
Job 42: due 1413
Job 43: due 1418
Job 44: due 1424
Job 45: due 1429
Job 46: due 1461
Job 47: due 1463
Job 48: due 1482
Job 49: due 1630
Ignore all jobs after 49
Lmaxinc before safe moves: 1083
Now using unsafety tolerance 0
New Lmaxincnew: 389
Difference: 694
Lmaxinc after safe moves: 151321
Initial solution:
0 0 2 3 4 5 6 7 3 9 10 11 12 13 14 15 6 17 2 19 20 17 22 23 2 25 26 27 28 29 5 6 25 33 34 35 20 37 3 2 40 41 42 6 44 4 46 5 48 
Updating LmaxLB to -150.9. C=26.1, d=177Updating LmaxLB to -131. C=87, d=218Updating LmaxLB to -110.5. C=285.5, d=396Updating LmaxLB to -104.6. C=334.4, d=439Updating LmaxLB to -72. C=382, d=454Updating LmaxLB to -60.3. C=411.7, d=472Updating LmaxLB to -2.29996. C=481.7, d=484Updating LmaxLB to 24.3. C=509.3, d=485Updating LmaxLB to 73.5. C=1010.5, d=937same duedate: 29
Lower bound on Lmax based on areas:0
Max Lksingle:1083
Max reduction:1083
Now adding static psi-2-in-2 dominance rules ...
Added 958 safe move dominance lazy constraints
Added 279 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2917 rows and 1847 columns.
MIP Presolve modified 1655 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 712 rows, 600 columns, and 3973 nonzeros.
Reduced MIP has 550 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
MIP Presolve modified 1 coefficients.
Reduced MIP has 712 rows, 600 columns, and 3973 nonzeros.
Reduced MIP has 550 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time =    0.03 sec.
Probing time =    0.00 sec.
Clique table members: 1279.
Problem contains 279 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0       28.7074    74                     28.7074      437         
      0     0       87.0911    60                    Cuts: 71      529         
      0     0      112.7183    58                    Cuts: 42      623         
      0     0      116.8002    68                    Cuts: 36      666         
      0     0      121.3246    73                    Cuts: 20      708         
      0     0      122.4521    71                    Cuts: 19      722         
      0     0      123.6435    67                     Cuts: 5      741         
      0     0      123.7156    71                    Cuts: 20      751         
      0     0      123.7361    71                 Impl Bds: 1      755         
*     0+    0                          286.0000      123.7361      755   56.74%
      0     0      123.7361    71      286.0000   Flowcuts: 1      756   56.74%
*     0+    0                          237.0000      123.7361      756   47.79%
*     0+    0                          210.0000      123.7361      756   41.08%
      0     2      123.7361    71      210.0000      123.7361      756   41.08%
Elapsed time =   0.21 sec. (tree size =  0.00 MB, solutions = 3)
*    50+   42                          208.0000      127.2719     2166   38.81%
*    52    40      integral     0      198.0000      127.2719     2191   35.72%
    100    74        cutoff            198.0000      130.0477     3266   34.32%
*   140+   99                          195.0000      133.7607     4549   31.40%
*   186   120      integral     0      193.0000      135.9391     5882   29.57%
    200   130      178.4852    46      193.0000      137.0813     6456   28.97%
*   280+  152                          188.0000      143.8532     8861   23.48%
*   285   150      integral     0      187.0000      143.8532     8992   23.07%
    300   161      181.0000     4      187.0000      144.5985     9430   22.67%
*   360+  153                          181.0000      145.9195    11503   19.38%
    400   156        cutoff            181.0000      149.8126    12938   17.23%
    500   174      176.9594    41      181.0000      157.8384    15494   12.80%

Clique cuts applied:  5
Cover cuts applied:  27
Implied bound cuts applied:  35
Flow cuts applied:  3
Mixed integer rounding cuts applied:  8
Zero-half cuts applied:  7
Gomory fractional cuts applied:  10
Lazy constraints applied:  7
Optimal
Lmax: 181
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 0
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 2
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 2
Job 9 into batch 9
Job 10 into batch 6
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 13
Job 17 into batch 17
Job 18 into batch 14
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 5
Job 22 into batch 22
Job 23 into batch 3
Job 24 into batch 7
Job 25 into batch 17
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 20
Job 31 into batch 28
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 33
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 29
Job 40 into batch 40
Job 41 into batch 38
Job 42 into batch 42
Job 43 into batch 43
Job 44 into batch 44
Job 45 into batch 9
Job 46 into batch 32
Job 47 into batch 43
Job 48 into batch 48
Job 0:	s=3	p=87	d=177	L=(-90+0-0)=-90=			Pk=87	Total size:10
Job 1:	s=7	p=87	d=218	L=(-44+-87-389)=-520=			Pk=87	Total size:0
Job 2:	s=1	p=17	d=257	L=(-66+-53-0)=-119=			Pk=51	Total size:10
Job 3:	s=4	p=53	d=283	L=(-39+-49-0)=-88=			Pk=57	Total size:10
Job 4:	s=7	p=44	d=306	L=(-18+-93-389)=-500=			Pk=44	Total size:0
Job 5:	s=4	p=77	d=343	L=(22+-93-0)=-71=			Pk=77	Total size:10
Job 6:	s=3	p=86	d=355	L=(96+-93-0)=3=			Pk=86	Total size:10
Job 7:	s=9	p=98	d=396	L=(153+-93-0)=60=			Pk=98	Total size:10
Job 8:	s=2	p=51	d=427	L=(173+-144-389)=-360=			Pk=51	Total size:0
Job 9:	s=9	p=43	d=439	L=(204+-144-0)=60=			Pk=43	Total size:10
Job 10:	s=7	p=68	d=454	L=(257+-212-389)=-344=			Pk=68	Total size:0
Job 11:	s=9	p=33	d=472	L=(272+-212-0)=60=			Pk=33	Total size:9
Job 12:	s=4	p=1	d=474	L=(271+-212-0)=59=			Pk=1	Total size:4
Job 13:	s=8	p=87	d=484	L=(348+-212-0)=136=			Pk=87	Total size:10
Job 14:	s=6	p=46	d=485	L=(393+-212-0)=181=			Pk=46	Total size:10
Job 15:	s=10	p=7	d=611	L=(274+-212-0)=62=			Pk=7	Total size:10
Job 16:	s=2	p=87	d=646	L=(326+-299-389)=-362=			Pk=87	Total size:0
Job 17:	s=4	p=77	d=657	L=(392+-287-0)=105=			Pk=89	Total size:9
Job 18:	s=4	p=12	d=725	L=(336+-299-389)=-352=			Pk=12	Total size:0
Job 19:	s=10	p=28	d=728	L=(361+-299-0)=62=			Pk=28	Total size:10
Job 20:	s=8	p=90	d=770	L=(409+-299-0)=110=			Pk=90	Total size:10
Job 21:	s=6	p=76	d=819	L=(436+-375-389)=-328=			Pk=76	Total size:0
Job 22:	s=6	p=5	d=820	L=(440+-375-0)=65=			Pk=5	Total size:6
Job 23:	s=6	p=57	d=848	L=(469+-432-389)=-352=			Pk=57	Total size:0
Job 24:	s=1	p=11	d=880	L=(448+-443-389)=-384=			Pk=11	Total size:0
Job 25:	s=5	p=89	d=884	L=(533+-532-389)=-388=			Pk=89	Total size:0
Job 26:	s=10	p=93	d=930	L=(580+-532-0)=48=			Pk=93	Total size:10
Job 27:	s=10	p=43	d=934	L=(619+-532-0)=87=			Pk=43	Total size:10
Job 28:	s=8	p=96	d=937	L=(712+-532-0)=180=			Pk=96	Total size:10
Job 29:	s=7	p=44	d=983	L=(710+-532-0)=178=			Pk=44	Total size:9
Job 30:	s=2	p=72	d=983	L=(782+-604-389)=-211=			Pk=72	Total size:0
Job 31:	s=2	p=80	d=1031	L=(814+-684-389)=-259=			Pk=80	Total size:0
Job 32:	s=4	p=64	d=1141	L=(768+-684-0)=84=			Pk=64	Total size:10
Job 33:	s=8	p=44	d=1201	L=(752+-629-0)=123=			Pk=99	Total size:10
Job 34:	s=7	p=27	d=1202	L=(778+-629-0)=149=			Pk=27	Total size:7
Job 35:	s=6	p=9	d=1206	L=(783+-629-0)=154=			Pk=9	Total size:6
Job 36:	s=2	p=89	d=1220	L=(858+-718-389)=-249=			Pk=89	Total size:0
Job 37:	s=7	p=29	d=1225	L=(882+-718-0)=164=			Pk=29	Total size:7
Job 38:	s=4	p=36	d=1252	L=(891+-711-0)=180=			Pk=43	Total size:9
Job 39:	s=2	p=17	d=1254	L=(906+-728-389)=-211=			Pk=17	Total size:0
Job 40:	s=6	p=24	d=1296	L=(888+-728-0)=160=			Pk=24	Total size:6
Job 41:	s=5	p=43	d=1342	L=(885+-771-389)=-275=			Pk=43	Total size:0
Job 42:	s=9	p=22	d=1413	L=(836+-771-0)=65=			Pk=22	Total size:9
Job 43:	s=2	p=71	d=1418	L=(902+-765-0)=137=			Pk=77	Total size:5
Job 44:	s=8	p=26	d=1424	L=(922+-765-0)=157=			Pk=26	Total size:8
Job 45:	s=1	p=34	d=1429	L=(951+-799-389)=-237=			Pk=34	Total size:0
Job 46:	s=6	p=64	d=1461	L=(983+-863-389)=-269=			Pk=64	Total size:0
Job 47:	s=3	p=77	d=1463	L=(1058+-940-389)=-271=			Pk=77	Total size:0
Job 48:	s=10	p=44	d=1482	L=(1083+-940-0)=143=			Pk=44	Total size:10

0
1.58065
181
2.13 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-24.csv
144
287
288
309
311
332
355
358
385
428
431
468
510
585
598
656
684
728
804
804
836
861
961
966
1020
1024
1057
1092
1141
1145
1237
1242
1266
1305
1332
1347
1368
1378
1400
1425
1463
1478
1484
1513
1537
1543
1587
1633
1645
1797
Job 0: due 144
Job 1: due 287
Job 2: due 288
Job 3: due 309
Job 4: due 311
Job 5: due 332
Job 6: due 355
Job 7: due 358
Job 8: due 385
Job 9: due 428
Job 10: due 431
Job 11: due 468
Job 12: due 510
Job 13: due 585
Job 14: due 598
Job 15: due 656
Job 16: due 684
Job 17: due 728
Job 18: due 804
Job 19: due 804
Job 20: due 836
Job 21: due 861
Job 22: due 961
Job 23: due 966
Job 24: due 1020
Job 25: due 1024
Job 26: due 1057
Job 27: due 1092
Job 28: due 1141
Job 29: due 1145
Job 30: due 1237
Job 31: due 1242
Job 32: due 1266
Job 33: due 1305
Job 34: due 1332
Job 35: due 1347
Job 36: due 1368
Job 37: due 1378
Job 38: due 1400
Job 39: due 1425
Job 40: due 1463
Job 41: due 1478
Job 42: due 1484
Job 43: due 1513
Job 44: due 1537
Job 45: due 1543
Job 46: due 1587
Job 47: due 1633
Job 48: due 1645
Job 49: due 1797
Ignore all jobs after 49
Lmaxinc before safe moves: 866
Now using unsafety tolerance 0
New Lmaxincnew: 80
Difference: 786
Lmaxinc after safe moves: 6400
Initial solution:
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 5 1 17 18 19 13 21 2 23 11 8 26 7 28 29 30 1 32 33 34 13 9 37 38 39 1 41 5 7 5 45 37 13 48 
Updating LmaxLB to -102. C=42, d=144same duedate: 18
Lower bound on Lmax based on areas:-2147483648
Max Lksingle:866
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 531 safe move dominance lazy constraints
Added 224 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2897 rows and 1861 columns.
MIP Presolve modified 1967 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 734 rows, 589 columns, and 4172 nonzeros.
Reduced MIP has 539 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1171.
Problem contains 224 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0     -102.0000   114                   -102.0000      278         
      0     0     -102.0000    27                    Cuts: 14      314         
      0     0     -102.0000    33                    Cuts: 19      380         
      0     0     -102.0000    15                 ZeroHalf: 1      381         
      0     0     -102.0000    19                    Cuts: 11      412         
*     0+    0                           77.0000     -102.0000      412  232.47%
*     0+    0                          -28.0000     -102.0000      412  264.29%
      0     2     -102.0000    24      -28.0000     -102.0000      412  264.29%
Elapsed time =   0.28 sec. (tree size =  0.00 MB, solutions = 2)
    100    92    infeasible            -28.0000     -102.0000     9324  264.29%
    200   176      -28.4503    39      -28.0000     -102.0000    16405  264.29%
    300   276     -102.0000    71      -28.0000     -102.0000    18872  264.29%
    400   373     -102.0000    35      -28.0000     -102.0000    22098  264.29%
    500   459      -34.0000    22      -28.0000     -102.0000    25928  264.29%
*   503+  460                          -28.0000     -102.0000    25946  264.29%
*   504+  459                          -32.0000     -102.0000    26209  218.75%
*   504+  459                          -32.0000     -102.0000    26209  218.75%
*   505+  404                          -62.0000     -102.0000    26326   64.52%
*   505+  404                          -62.0000     -102.0000    26326   64.52%
*   506+  270                          -86.0000     -102.0000    27064   18.60%
    600   224     -102.0000    29      -86.0000     -102.0000    32216   18.60%
*   625   120      integral     0      -99.0000     -102.0000    34053    3.03%
    700   100     -102.0000    18      -99.0000     -102.0000    39256    3.03%
*   725     0      integral     0     -102.0000     -102.0000    40953    0.00%

Clique cuts applied:  7
Cover cuts applied:  44
Implied bound cuts applied:  37
Mixed integer rounding cuts applied:  25
Zero-half cuts applied:  7
Gomory fractional cuts applied:  4
Lazy constraints applied:  8
Optimal
Lmax: -102
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 1
Job 6 into batch 6
Job 7 into batch 1
Job 8 into batch 1
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 9
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 14
Job 16 into batch 14
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 13
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 2
Job 23 into batch 23
Job 24 into batch 23
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 13
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 10
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 20
Job 35 into batch 9
Job 36 into batch 36
Job 37 into batch 36
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 40
Job 41 into batch 25
Job 42 into batch 21
Job 43 into batch 43
Job 44 into batch 44
Job 45 into batch 44
Job 46 into batch 46
Job 47 into batch 46
Job 48 into batch 48
Job 0:	s=10	p=42	d=144	L=(-102+0-0)=-102=			Pk=42	Total size:10
Job 1:	s=1	p=33	d=287	L=(-212+36-0)=-176=			Pk=69	Total size:10
Job 2:	s=7	p=9	d=288	L=(-204+36-0)=-168=			Pk=9	Total size:8
Job 3:	s=10	p=28	d=309	L=(-197+36-0)=-161=			Pk=28	Total size:10
Job 4:	s=8	p=3	d=311	L=(-196+36-0)=-160=			Pk=3	Total size:8
Job 5:	s=2	p=52	d=332	L=(-165+-16-80)=-261=			Pk=52	Total size:0
Job 6:	s=10	p=28	d=355	L=(-160+-16-0)=-176=			Pk=28	Total size:10
Job 7:	s=2	p=69	d=358	L=(-94+-85-80)=-259=			Pk=69	Total size:0
Job 8:	s=5	p=66	d=385	L=(-55+-151-80)=-286=			Pk=66	Total size:0
Job 9:	s=3	p=87	d=428	L=(-11+-142-0)=-153=			Pk=96	Total size:10
Job 10:	s=8	p=15	d=431	L=(1+-142-0)=-141=			Pk=15	Total size:10
Job 11:	s=5	p=80	d=468	L=(44+-222-80)=-258=			Pk=80	Total size:0
Job 12:	s=4	p=19	d=510	L=(21+-222-0)=-201=			Pk=19	Total size:4
Job 13:	s=3	p=97	d=585	L=(43+-222-0)=-179=			Pk=97	Total size:10
Job 14:	s=7	p=49	d=598	L=(79+-222-0)=-143=			Pk=49	Total size:10
Job 15:	s=2	p=38	d=656	L=(59+-260-80)=-281=			Pk=38	Total size:0
Job 16:	s=1	p=4	d=684	L=(35+-264-80)=-309=			Pk=4	Total size:0
Job 17:	s=7	p=25	d=728	L=(16+-264-0)=-248=			Pk=25	Total size:7
Job 18:	s=10	p=78	d=804	L=(18+-264-0)=-246=			Pk=78	Total size:10
Job 19:	s=6	p=96	d=804	L=(114+-360-80)=-326=			Pk=96	Total size:0
Job 20:	s=3	p=98	d=836	L=(180+-360-0)=-180=			Pk=98	Total size:10
Job 21:	s=8	p=54	d=861	L=(209+-360-0)=-151=			Pk=54	Total size:10
Job 22:	s=1	p=3	d=961	L=(112+-363-80)=-331=			Pk=3	Total size:0
Job 23:	s=6	p=62	d=966	L=(169+-345-0)=-176=			Pk=80	Total size:10
Job 24:	s=4	p=80	d=1020	L=(195+-425-80)=-310=			Pk=80	Total size:0
Job 25:	s=3	p=57	d=1024	L=(248+-409-0)=-161=			Pk=73	Total size:10
Job 26:	s=10	p=26	d=1057	L=(241+-409-0)=-168=			Pk=26	Total size:10
Job 27:	s=1	p=62	d=1092	L=(268+-471-80)=-283=			Pk=62	Total size:0
Job 28:	s=9	p=47	d=1141	L=(266+-471-0)=-205=			Pk=47	Total size:9
Job 29:	s=10	p=65	d=1145	L=(327+-471-0)=-144=			Pk=65	Total size:10
Job 30:	s=10	p=50	d=1237	L=(285+-471-0)=-186=			Pk=50	Total size:10
Job 31:	s=2	p=14	d=1242	L=(294+-485-80)=-271=			Pk=14	Total size:0
Job 32:	s=10	p=40	d=1266	L=(310+-485-0)=-175=			Pk=40	Total size:10
Job 33:	s=7	p=17	d=1305	L=(288+-485-0)=-197=			Pk=17	Total size:7
Job 34:	s=7	p=83	d=1332	L=(344+-568-80)=-304=			Pk=83	Total size:0
Job 35:	s=2	p=96	d=1347	L=(425+-664-80)=-319=			Pk=96	Total size:0
Job 36:	s=5	p=84	d=1368	L=(488+-649-0)=-161=			Pk=99	Total size:9
Job 37:	s=4	p=99	d=1378	L=(577+-748-80)=-251=			Pk=99	Total size:0
Job 38:	s=8	p=1	d=1400	L=(556+-748-0)=-192=			Pk=1	Total size:8
Job 39:	s=8	p=22	d=1425	L=(553+-748-0)=-195=			Pk=22	Total size:8
Job 40:	s=6	p=33	d=1463	L=(548+-748-0)=-200=			Pk=33	Total size:6
Job 41:	s=7	p=73	d=1478	L=(606+-821-80)=-295=			Pk=73	Total size:0
Job 42:	s=2	p=46	d=1484	L=(646+-867-80)=-301=			Pk=46	Total size:0
Job 43:	s=7	p=69	d=1513	L=(686+-867-0)=-181=			Pk=69	Total size:7
Job 44:	s=4	p=51	d=1537	L=(713+-863-0)=-150=			Pk=55	Total size:10
Job 45:	s=6	p=55	d=1543	L=(762+-918-80)=-236=			Pk=55	Total size:0
Job 46:	s=6	p=67	d=1587	L=(785+-893-0)=-108=			Pk=92	Total size:8
Job 47:	s=2	p=92	d=1633	L=(831+-985-80)=-234=			Pk=92	Total size:0
Job 48:	s=8	p=47	d=1645	L=(866+-985-0)=-119=			Pk=47	Total size:8

-2147483648
1.58065
-102
4.89 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-25.csv
26
28
35
51
60
60
69
80
80
94
96
106
115
122
132
134
136
136
144
150
158
160
162
166
176
178
182
188
189
192
193
204
206
218
218
229
246
251
253
255
257
261
267
272
278
287
287
298
320
339
Job 0: due 26
Job 1: due 28
Job 2: due 35
Job 3: due 51
Job 4: due 60
Job 5: due 60
Job 6: due 69
Job 7: due 80
Job 8: due 80
Job 9: due 94
Job 10: due 96
Job 11: due 106
Job 12: due 115
Job 13: due 122
Job 14: due 132
Job 15: due 134
Job 16: due 136
Job 17: due 136
Job 18: due 144
Job 19: due 150
Job 20: due 158
Job 21: due 160
Job 22: due 162
Job 23: due 166
Job 24: due 176
Job 25: due 178
Job 26: due 182
Job 27: due 188
Job 28: due 189
Job 29: due 192
Job 30: due 193
Job 31: due 204
Job 32: due 206
Job 33: due 218
Job 34: due 218
Job 35: due 229
Job 36: due 246
Job 37: due 251
Job 38: due 253
Job 39: due 255
Job 40: due 257
Job 41: due 261
Job 42: due 267
Job 43: due 272
Job 44: due 278
Job 45: due 287
Job 46: due 287
Job 47: due 298
Job 48: due 320
Job 49: due 339
Ignore all jobs after 50
Lmaxinc before safe moves: 2265
Now using unsafety tolerance 0
New Lmaxincnew: 1764
Difference: 501
Lmaxinc after safe moves: 3.1117e+06
Initial solution:
0 1 2 3 4 5 6 2 8 5 10 11 12 13 14 5 16 17 18 19 4 21 22 3 3 25 12 27 28 29 30 31 32 33 34 32 21 31 38 39 40 41 42 43 44 45 38 47 13 49 
Updating LmaxLB to -25.6. C=0.4, d=26Updating LmaxLB to -15.6. C=12.4, d=28same duedate: 4
Updating LmaxLB to -13.8. C=46.2, d=60same duedate: 7
Updating LmaxLB to 12.6. C=134.6, d=122Updating LmaxLB to 34.6. C=166.6, d=132Updating LmaxLB to 56.1. C=190.1, d=134same duedate: 16
Updating LmaxLB to 118.9. C=254.9, d=136Updating LmaxLB to 203.9. C=347.9, d=144Updating LmaxLB to 239.9. C=389.9, d=150Updating LmaxLB to 299.6. C=459.6, d=160Updating LmaxLB to 375.6. C=537.6, d=162Updating LmaxLB to 384.1. C=550.1, d=166Updating LmaxLB to 421.6. C=599.6, d=178Updating LmaxLB to 429.3. C=611.3, d=182Updating LmaxLB to 446.3. C=634.3, d=188Updating LmaxLB to 492.5. C=681.5, d=189Updating LmaxLB to 549.5. C=741.5, d=192Updating LmaxLB to 595.7. C=788.7, d=193Updating LmaxLB to 613.2. C=817.2, d=204Updating LmaxLB to 643.7. C=849.7, d=206same duedate: 33
Updating LmaxLB to 770.5. C=988.5, d=218Updating LmaxLB to 781. C=1010, d=229Updating LmaxLB to 841.7. C=1092.7, d=251Updating LmaxLB to 874.9. C=1127.9, d=253Updating LmaxLB to 951.2. C=1206.2, d=255Updating LmaxLB to 985.2. C=1242.2, d=257Updating LmaxLB to 1067.6. C=1328.6, d=261Updating LmaxLB to 1111.6. C=1378.6, d=267Updating LmaxLB to 1157.8. C=1429.8, d=272Updating LmaxLB to 1200.8. C=1478.8, d=278same duedate: 45
Updating LmaxLB to 1280. C=1567, d=287Updating LmaxLB to 1333.4. C=1631.4, d=298Lower bound on Lmax based on areas:0
Max Lksingle:2265
Max reduction:2265
Now adding static psi-2-in-2 dominance rules ...
Added 78 safe move dominance lazy constraints
Added 79 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3105 rows and 2053 columns.
MIP Presolve modified 2528 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 701 rows, 491 columns, and 2460 nonzeros.
Reduced MIP has 440 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.03 sec.
Probing time =    0.00 sec.
Clique table members: 782.
Problem contains 79 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0     1106.2766   110                   1106.2766      278         
      0     0     1199.3310   107                   Cuts: 109      442         
      0     0     1285.1483   104                   Cuts: 119      567         
      0     0     1307.7118   102                    Cuts: 67      633         
      0     0     1314.1308   106                    Cuts: 67      682         
*     0+    0                         1724.0000     1314.1308      682   23.77%
      0     0     1317.6530   118     1724.0000      Cuts: 30      727   23.57%
      0     0     1319.1622   112     1724.0000      Cuts: 28      741   23.48%
*     0+    0                         1676.0000     1319.1622      741   21.29%
      0     0     1321.0221   117     1676.0000      Cuts: 38      756   21.18%
      0     0     1321.5871   115     1676.0000      Cuts: 34      765   21.15%
*     0+    0                         1671.0000     1321.5871      765   20.91%
      0     0     1321.5871   116     1671.0000   Impl Bds: 1      766   20.91%
      0     2     1321.5871   113     1671.0000     1321.8079      766   20.90%
Elapsed time =   0.24 sec. (tree size =  0.00 MB, solutions = 3)
*    10+   10                         1670.0000     1325.1223     1240   20.65%
*    30+   30                         1652.0000     1325.1223     2107   19.79%
    100    98     1611.2061    21     1652.0000     1325.1386     4939   19.79%
*   130+  113                         1621.0000     1333.6521     6032   17.73%
*   130+  113                         1620.0000     1333.6521     6032   17.68%
    200   178     1413.6998    81     1620.0000     1336.3972     7734   17.51%
    300   273     1563.2649    45     1620.0000     1339.7129    10954   17.30%
    400   362     1511.0171    68     1620.0000     1339.7906    15309   17.30%
    500   454     1447.5643    86     1620.0000     1342.0400    18904   17.16%
*   532+  323                         1618.0000     1554.6393    21159    3.92%
*   552+  233                         1599.0000     1554.6393    21380    2.77%
*   554   140      integral     0     1578.0000     1554.6393    21424    1.48%
    600   139     1568.7500    12     1578.0000     1564.9685    22749    0.83%
    700   109     1577.0000    21     1578.0000     1568.5000    24497    0.60%
*   716    60      integral     0     1574.0000     1568.5000    24642    0.35%

Clique cuts applied:  4
Cover cuts applied:  19
Implied bound cuts applied:  18
Flow cuts applied:  5
Mixed integer rounding cuts applied:  30
Zero-half cuts applied:  20
Gomory fractional cuts applied:  6
Lazy constraints applied:  11
Optimal
Lmax: 1574
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 6
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 9
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 2
Job 20 into batch 4
Job 21 into batch 12
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 9
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 15
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 23
Job 36 into batch 12
Job 37 into batch 31
Job 38 into batch 13
Job 39 into batch 39
Job 40 into batch 17
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 43
Job 44 into batch 3
Job 45 into batch 45
Job 46 into batch 5
Job 47 into batch 47
Job 48 into batch 39
Job 49 into batch 41
Job 0:	s=4	p=1	d=26	L=(-25+0-0)=-25=			Pk=1	Total size:4
Job 1:	s=8	p=15	d=28	L=(-12+0-0)=-12=			Pk=15	Total size:8
Job 2:	s=3	p=11	d=35	L=(-8+48-0)=40=			Pk=60	Total size:10
Job 3:	s=1	p=25	d=51	L=(1+92-0)=93=			Pk=70	Total size:8
Job 4:	s=4	p=20	d=60	L=(12+92-0)=104=			Pk=20	Total size:8
Job 5:	s=4	p=50	d=60	L=(62+98-0)=160=			Pk=57	Total size:10
Job 6:	s=4	p=13	d=69	L=(66+98-0)=164=			Pk=13	Total size:8
Job 7:	s=4	p=3	d=80	L=(58+95-1764)=-1611=			Pk=3	Total size:0
Job 8:	s=10	p=8	d=80	L=(66+95-0)=161=			Pk=8	Total size:10
Job 9:	s=1	p=38	d=94	L=(90+96-0)=186=			Pk=40	Total size:10
Job 10:	s=8	p=10	d=96	L=(98+96-0)=194=			Pk=10	Total size:8
Job 11:	s=8	p=20	d=106	L=(108+96-0)=204=			Pk=20	Total size:8
Job 12:	s=1	p=30	d=115	L=(129+156-0)=285=			Pk=91	Total size:10
Job 13:	s=6	p=72	d=122	L=(194+171-0)=365=			Pk=88	Total size:10
Job 14:	s=8	p=40	d=132	L=(224+131-1764)=-1409=			Pk=40	Total size:1.03562e-12
Job 15:	s=5	p=47	d=134	L=(269+149-0)=418=			Pk=65	Total size:10
Job 16:	s=9	p=32	d=136	L=(299+148-2.50288e-10)=447=			Pk=32	Total size:9
Job 17:	s=6	p=60	d=136	L=(359+177-0)=536=			Pk=90	Total size:10
Job 18:	s=10	p=93	d=144	L=(444+177-0)=621=			Pk=93	Total size:10
Job 19:	s=7	p=60	d=150	L=(498+117-1764)=-1149=			Pk=60	Total size:0
Job 20:	s=4	p=15	d=158	L=(505+102-1764)=-1157=			Pk=15	Total size:0
Job 21:	s=7	p=91	d=160	L=(594+11-1764)=-1159=			Pk=91	Total size:0
Job 22:	s=10	p=78	d=162	L=(670+11-0)=681=			Pk=78	Total size:10
Job 23:	s=5	p=25	d=166	L=(691+28-2.28353e-10)=719=			Pk=43	Total size:10
Job 24:	s=1	p=23	d=176	L=(704+5-1764)=-1055=			Pk=23	Total size:1.97276e-12
Job 25:	s=8	p=59	d=178	L=(761+5-0)=766=			Pk=59	Total size:8
Job 26:	s=9	p=13	d=182	L=(770+5-0)=775=			Pk=13	Total size:9
Job 27:	s=10	p=23	d=188	L=(787+5-0)=792=			Pk=23	Total size:10
Job 28:	s=8	p=59	d=189	L=(845+5-0)=850=			Pk=59	Total size:8
Job 29:	s=8	p=75	d=192	L=(917+5-0)=922=			Pk=75	Total size:8
Job 30:	s=8	p=59	d=193	L=(975+5-0)=980=			Pk=59	Total size:8
Job 31:	s=3	p=95	d=204	L=(1059+5-0)=1064=			Pk=95	Total size:10
Job 32:	s=5	p=65	d=206	L=(1122+-60-1764)=-702=			Pk=65	Total size:0
Job 33:	s=8	p=56	d=218	L=(1166+-60-0)=1106=			Pk=56	Total size:8
Job 34:	s=10	p=94	d=218	L=(1260+-60-0)=1200=			Pk=94	Total size:10
Job 35:	s=5	p=43	d=229	L=(1292+-103-1764)=-575=			Pk=43	Total size:0
Job 36:	s=2	p=81	d=246	L=(1356+-184-1764)=-592=			Pk=81	Total size:0
Job 37:	s=7	p=95	d=251	L=(1446+-279-1764)=-597=			Pk=95	Total size:0
Job 38:	s=4	p=88	d=253	L=(1532+-367-1764)=-599=			Pk=88	Total size:0
Job 39:	s=9	p=87	d=255	L=(1617+-367-0)=1250=			Pk=87	Total size:10
Job 40:	s=4	p=90	d=257	L=(1705+-457-1764)=-516=			Pk=90	Total size:0
Job 41:	s=9	p=96	d=261	L=(1797+-455-0)=1342=			Pk=98	Total size:10
Job 42:	s=10	p=50	d=267	L=(1841+-455-0)=1386=			Pk=50	Total size:10
Job 43:	s=8	p=64	d=272	L=(1900+-455-0)=1445=			Pk=64	Total size:8
Job 44:	s=7	p=70	d=278	L=(1964+-525-1764)=-325=			Pk=70	Total size:0
Job 45:	s=10	p=54	d=287	L=(2009+-525-0)=1484=			Pk=54	Total size:10
Job 46:	s=6	p=57	d=287	L=(2066+-582-1764)=-280=			Pk=57	Total size:0
Job 47:	s=7	p=92	d=298	L=(2147+-582-0)=1565=			Pk=92	Total size:7
Job 48:	s=1	p=61	d=320	L=(2186+-643-1764)=-221=			Pk=61	Total size:0
Job 49:	s=1	p=98	d=339	L=(2265+-741-1764)=-240=			Pk=98	Total size:0

0
1.51515
1574
3.46 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-26.csv
37
45
82
91
97
106
111
116
127
135
142
145
158
159
162
167
172
181
185
188
201
212
214
217
220
227
235
243
246
246
256
264
270
272
278
280
286
291
294
323
328
338
339
348
356
373
411
446
447
541
Job 0: due 37
Job 1: due 45
Job 2: due 82
Job 3: due 91
Job 4: due 97
Job 5: due 106
Job 6: due 111
Job 7: due 116
Job 8: due 127
Job 9: due 135
Job 10: due 142
Job 11: due 145
Job 12: due 158
Job 13: due 159
Job 14: due 162
Job 15: due 167
Job 16: due 172
Job 17: due 181
Job 18: due 185
Job 19: due 188
Job 20: due 201
Job 21: due 212
Job 22: due 214
Job 23: due 217
Job 24: due 220
Job 25: due 227
Job 26: due 235
Job 27: due 243
Job 28: due 246
Job 29: due 246
Job 30: due 256
Job 31: due 264
Job 32: due 270
Job 33: due 272
Job 34: due 278
Job 35: due 280
Job 36: due 286
Job 37: due 291
Job 38: due 294
Job 39: due 323
Job 40: due 328
Job 41: due 338
Job 42: due 339
Job 43: due 348
Job 44: due 356
Job 45: due 373
Job 46: due 411
Job 47: due 446
Job 48: due 447
Job 49: due 541
Ignore all jobs after 50
Lmaxinc before safe moves: 2336
Now using unsafety tolerance 0
New Lmaxincnew: 1485
Difference: 851
Lmaxinc after safe moves: 2.20522e+06
Initial solution:
0 1 2 3 4 5 1 0 8 9 2 11 12 13 14 15 9 17 18 12 4 21 22 23 24 12 12 27 13 29 23 31 13 33 12 15 22 37 38 39 40 41 39 18 44 45 45 47 48 49 
Updating LmaxLB to -23.4. C=13.6, d=37Updating LmaxLB to -19.4. C=25.6, d=45Updating LmaxLB to 63.9. C=169.9, d=106Updating LmaxLB to 72.7. C=199.7, d=127Updating LmaxLB to 78.7. C=213.7, d=135Updating LmaxLB to 101.8. C=246.8, d=145Updating LmaxLB to 116. C=274, d=158Updating LmaxLB to 133. C=292, d=159Updating LmaxLB to 174.1. C=336.1, d=162Updating LmaxLB to 249.2. C=416.2, d=167Updating LmaxLB to 255. C=427, d=172Updating LmaxLB to 318. C=499, d=181Updating LmaxLB to 398.6. C=583.6, d=185Updating LmaxLB to 399.6. C=587.6, d=188Updating LmaxLB to 423.1. C=624.1, d=201Updating LmaxLB to 449.9. C=661.9, d=212Updating LmaxLB to 491.1. C=705.1, d=214Updating LmaxLB to 503.7. C=720.7, d=217Updating LmaxLB to 509.1. C=729.1, d=220Updating LmaxLB to 516.8. C=743.8, d=227Updating LmaxLB to 522.5. C=765.5, d=243same duedate: 28
Updating LmaxLB to 626.5. C=872.5, d=246Updating LmaxLB to 632. C=888, d=256Updating LmaxLB to 696.8. C=960.8, d=264Updating LmaxLB to 707.2. C=977.2, d=270Updating LmaxLB to 717.2. C=989.2, d=272Updating LmaxLB to 722.9. C=1002.9, d=280Updating LmaxLB to 736.1. C=1022.1, d=286Updating LmaxLB to 767.1. C=1058.1, d=291Updating LmaxLB to 845.1. C=1139.1, d=294Updating LmaxLB to 845.5. C=1168.5, d=323Updating LmaxLB to 889.3. C=1217.3, d=328Updating LmaxLB to 927.3. C=1265.3, d=338Updating LmaxLB to 993.5. C=1332.5, d=339Updating LmaxLB to 1050.8. C=1406.8, d=356Updating LmaxLB to 1062.6. C=1435.6, d=373Updating LmaxLB to 1074.4. C=1485.4, d=411Updating LmaxLB to 1137.4. C=1583.4, d=446Updating LmaxLB to 1215.6. C=1662.6, d=447Lower bound on Lmax based on areas:0
Max Lksingle:2336
Max reduction:2336
Now adding static psi-2-in-2 dominance rules ...
Added 247 safe move dominance lazy constraints
Added 138 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3028 rows and 1934 columns.
MIP Presolve modified 2241 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 841 rows, 613 columns, and 3244 nonzeros.
Reduced MIP has 562 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1564.
Problem contains 138 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      965.1784   138                    965.1784      387         
      0     0     1019.2177   131                   Cuts: 144      641         
      0     0     1062.7770   118                   Cuts: 124      865         
      0     0     1088.5486   142                   Cuts: 111      996         
      0     0     1097.5671   146                    Cuts: 79     1075         
      0     0     1100.7687   154                    Cuts: 63     1138         
      0     0     1103.0276   170                    Cuts: 75     1190         
      0     0     1138.6783   152                    Cuts: 64     1280         
      0     0     1145.9108   159                    Cuts: 66     1352         
      0     0     1147.9463   126                    Cuts: 50     1384         
      0     0     1148.6944   130                    Cuts: 28     1402         
      0     0     1149.1918   133                    Cuts: 51     1427         
      0     0     1149.3539   134                    Cuts: 50     1439         
      0     0     1149.5075   143                    Cuts: 36     1452         
      0     0     1149.5719   146                    Cuts: 27     1458         
      0     0     1149.8926   144                 Impl Bds: 4     1464         
      0     0     1149.8926   139                    Table: 1     1468         
*     0+    0                         1430.0000     1149.8926     1468   19.59%
      0     2     1149.8926   139     1430.0000     1149.8926     1468   19.59%
Elapsed time =   0.48 sec. (tree size =  0.00 MB, solutions = 1)
*    80+   74                         1414.0000     1150.9917     5922   18.60%
    100    92     1254.9227   104     1414.0000     1151.8728     6764   18.54%
    200   184     1260.5019   120     1414.0000     1162.5851    11582   17.78%
*   283   246      integral     0     1391.0000     1163.8264    16253   16.33%
    300   260     1244.6494    98     1391.0000     1169.3306    17005   15.94%
*   383+  326                         1383.0000     1173.6785    19827   15.14%
*   383+  311                         1372.0000     1173.6785    19827   14.45%
    400   330     1295.3366    77     1372.0000     1173.6785    20217   14.45%
*   493+  266                         1364.0000     1324.3368    24412    2.91%
*   493+  177                         1356.0000     1329.4174    24735    1.96%
    500   182     1335.5094    31     1356.0000     1333.0095    24870    1.70%
*   548    91      integral     0     1354.0000     1336.0000    25814    1.33%
    600    72     1353.0000    14     1354.0000     1338.0000    26662    1.18%
    700    71     1345.3686    40     1354.0000     1343.0000    28196    0.81%
    800    92     1352.0000     8     1354.0000     1347.3204    29907    0.49%
Elapsed time =   4.82 sec. (tree size =  0.20 MB, solutions = 8)
    900    80     1353.0000     6     1354.0000     1352.0000    31232    0.15%
   1000    69     1353.5000    12     1354.0000     1352.4776    32475    0.11%

Clique cuts applied:  15
Cover cuts applied:  42
Implied bound cuts applied:  134
Flow cuts applied:  11
Mixed integer rounding cuts applied:  26
Zero-half cuts applied:  33
Gomory fractional cuts applied:  5
Lazy constraints applied:  17
Optimal
Lmax: 1354
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 0
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 2
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 9
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 4
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 21
Job 26 into batch 12
Job 27 into batch 24
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 7
Job 32 into batch 23
Job 33 into batch 30
Job 34 into batch 14
Job 35 into batch 15
Job 36 into batch 22
Job 37 into batch 12
Job 38 into batch 38
Job 39 into batch 19
Job 40 into batch 40
Job 41 into batch 13
Job 42 into batch 42
Job 43 into batch 18
Job 44 into batch 28
Job 45 into batch 42
Job 46 into batch 19
Job 47 into batch 47
Job 48 into batch 48
Job 49 into batch 49
Job 0:	s=8	p=17	d=37	L=(-20+0-0)=-20=			Pk=17	Total size:10
Job 1:	s=8	p=15	d=45	L=(-13+0-0)=-13=			Pk=15	Total size:8
Job 2:	s=5	p=7	d=82	L=(-43+0-0)=-43=			Pk=7	Total size:10
Job 3:	s=6	p=13	d=91	L=(-39+0-0)=-39=			Pk=13	Total size:6
Job 4:	s=5	p=80	d=97	L=(35+0-0)=35=			Pk=80	Total size:10
Job 5:	s=10	p=93	d=106	L=(119+0-0)=119=			Pk=93	Total size:10
Job 6:	s=2	p=15	d=111	L=(129+-15-1485)=-1371=			Pk=15	Total size:0
Job 7:	s=2	p=17	d=116	L=(141+58-0)=199=			Pk=91	Total size:10
Job 8:	s=9	p=26	d=127	L=(156+58-0)=214=			Pk=26	Total size:9
Job 9:	s=5	p=28	d=135	L=(176+58-0)=234=			Pk=28	Total size:9
Job 10:	s=5	p=7	d=142	L=(176+51-1485)=-1258=			Pk=7	Total size:0
Job 11:	s=8	p=37	d=145	L=(210+51-0)=261=			Pk=37	Total size:8
Job 12:	s=4	p=68	d=158	L=(265+54-0)=319=			Pk=72	Total size:10
Job 13:	s=4	p=45	d=159	L=(309+89-0)=398=			Pk=80	Total size:10
Job 14:	s=9	p=49	d=162	L=(355+89-0)=444=			Pk=49	Total size:10
Job 15:	s=9	p=89	d=167	L=(439+89-0)=528=			Pk=89	Total size:10
Job 16:	s=4	p=27	d=172	L=(461+62-1485)=-962=			Pk=27	Total size:0
Job 17:	s=10	p=72	d=181	L=(524+62-0)=586=			Pk=72	Total size:10
Job 18:	s=9	p=94	d=185	L=(614+62-0)=676=			Pk=94	Total size:10
Job 19:	s=1	p=40	d=188	L=(651+120-0)=771=			Pk=98	Total size:10
Job 20:	s=5	p=73	d=201	L=(711+47-1485)=-727=			Pk=73	Total size:0
Job 21:	s=7	p=54	d=212	L=(754+47-0)=801=			Pk=54	Total size:10
Job 22:	s=6	p=72	d=214	L=(824+47-0)=871=			Pk=72	Total size:10
Job 23:	s=4	p=39	d=217	L=(860+49-0)=909=			Pk=41	Total size:8
Job 24:	s=4	p=21	d=220	L=(878+54-0)=932=			Pk=27	Total size:10
Job 25:	s=3	p=49	d=227	L=(920+5-1485)=-560=			Pk=49	Total size:0
Job 26:	s=1	p=55	d=235	L=(967+-50-1485)=-568=			Pk=55	Total size:0
Job 27:	s=6	p=27	d=243	L=(986+-77-1485)=-576=			Pk=27	Total size:0
Job 28:	s=2	p=45	d=246	L=(1028+-40-0)=988=			Pk=82	Total size:10
Job 29:	s=10	p=98	d=246	L=(1126+-40-0)=1086=			Pk=98	Total size:10
Job 30:	s=5	p=31	d=256	L=(1147+-40-0)=1107=			Pk=31	Total size:9
Job 31:	s=8	p=91	d=264	L=(1230+-131-1485)=-386=			Pk=91	Total size:0
Job 32:	s=4	p=41	d=270	L=(1265+-172-1485)=-392=			Pk=41	Total size:0
Job 33:	s=4	p=30	d=272	L=(1293+-202-1485)=-394=			Pk=30	Total size:0
Job 34:	s=1	p=49	d=278	L=(1336+-251-1485)=-400=			Pk=49	Total size:0
Job 35:	s=1	p=88	d=280	L=(1422+-339-1485)=-402=			Pk=88	Total size:0
Job 36:	s=4	p=48	d=286	L=(1464+-387-1485)=-408=			Pk=48	Total size:0
Job 37:	s=5	p=72	d=291	L=(1531+-459-1485)=-413=			Pk=72	Total size:0
Job 38:	s=10	p=81	d=294	L=(1609+-459-0)=1150=			Pk=81	Total size:10
Job 39:	s=3	p=98	d=323	L=(1678+-557-1485)=-364=			Pk=98	Total size:0
Job 40:	s=8	p=61	d=328	L=(1734+-557-0)=1177=			Pk=61	Total size:8
Job 41:	s=6	p=80	d=338	L=(1804+-637-1485)=-318=			Pk=80	Total size:0
Job 42:	s=7	p=96	d=339	L=(1899+-637-0)=1262=			Pk=96	Total size:10
Job 43:	s=1	p=87	d=348	L=(1977+-724-1485)=-232=			Pk=87	Total size:0
Job 44:	s=8	p=82	d=356	L=(2051+-806-1485)=-240=			Pk=82	Total size:0
Job 45:	s=3	p=96	d=373	L=(2130+-902-1485)=-257=			Pk=96	Total size:0
Job 46:	s=6	p=83	d=411	L=(2175+-985-1485)=-295=			Pk=83	Total size:0
Job 47:	s=10	p=98	d=446	L=(2238+-985-0)=1253=			Pk=98	Total size:10
Job 48:	s=8	p=99	d=447	L=(2336+-985-0)=1351=			Pk=99	Total size:8
Job 49:	s=8	p=94	d=541	L=(2336+-985-0)=1351=			Pk=94	Total size:8

0
1.66667
1354
5.26 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-27.csv
104
106
129
175
181
183
186
198
217
248
281
308
315
323
349
368
481
492
501
512
528
536
617
632
657
674
703
718
746
781
814
820
876
934
960
966
1009
1034
1075
1100
1115
1117
1148
1205
1206
1225
1304
1316
1362
1396
Job 0: due 104
Job 1: due 106
Job 2: due 129
Job 3: due 175
Job 4: due 181
Job 5: due 183
Job 6: due 186
Job 7: due 198
Job 8: due 217
Job 9: due 248
Job 10: due 281
Job 11: due 308
Job 12: due 315
Job 13: due 323
Job 14: due 349
Job 15: due 368
Job 16: due 481
Job 17: due 492
Job 18: due 501
Job 19: due 512
Job 20: due 528
Job 21: due 536
Job 22: due 617
Job 23: due 632
Job 24: due 657
Job 25: due 674
Job 26: due 703
Job 27: due 718
Job 28: due 746
Job 29: due 781
Job 30: due 814
Job 31: due 820
Job 32: due 876
Job 33: due 934
Job 34: due 960
Job 35: due 966
Job 36: due 1009
Job 37: due 1034
Job 38: due 1075
Job 39: due 1100
Job 40: due 1115
Job 41: due 1117
Job 42: due 1148
Job 43: due 1205
Job 44: due 1206
Job 45: due 1225
Job 46: due 1304
Job 47: due 1316
Job 48: due 1362
Job 49: due 1396
Ignore all jobs after 50
Lmaxinc before safe moves: 1100
Now using unsafety tolerance 0
New Lmaxincnew: 194
Difference: 906
Lmaxinc after safe moves: 37636
Initial solution:
0 1 2 3 4 0 6 3 8 8 10 11 6 13 14 15 16 17 2 19 20 21 21 4 14 25 26 6 28 14 16 31 17 25 34 35 3 2 38 39 38 28 39 4 44 6 10 47 48 49 
Updating LmaxLB to -94.9. C=9.1, d=104Updating LmaxLB to -87.1. C=18.9, d=106Updating LmaxLB to -82.7. C=92.3, d=175Updating LmaxLB to -45.5. C=135.5, d=181Updating LmaxLB to -45.1. C=137.9, d=183Updating LmaxLB to -0.600006. C=185.4, d=186Updating LmaxLB to 8.69998. C=225.7, d=217Updating LmaxLB to 40.7. C=348.7, d=308Updating LmaxLB to 42.4. C=357.4, d=315Updating LmaxLB to 65. C=388, d=323Lower bound on Lmax based on areas:0
Max Lksingle:1100
Max reduction:1100
Now adding static psi-2-in-2 dominance rules ...
Added 877 safe move dominance lazy constraints
Added 300 safe move requirement lazy constraints
Tried aggregator 1 time.
MIP Presolve eliminated 2845 rows and 1802 columns.
MIP Presolve modified 1966 coefficients.
Reduced MIP has 941 rows, 750 columns, and 5168 nonzeros.
Reduced MIP has 699 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 4 vars, tightened 0 bounds.
Probing time =    0.02 sec.
Tried aggregator 1 time.
MIP Presolve eliminated 6 rows and 4 columns.
MIP Presolve modified 1 coefficients.
Reduced MIP has 935 rows, 746 columns, and 5148 nonzeros.
Reduced MIP has 695 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time =    0.03 sec.
Probing time =    0.01 sec.
Clique table members: 1596.
Problem contains 300 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      124.0679    95                    124.0679      390         
      0     0      149.8066    90                    Cuts: 37      498         
      0     0      160.8799    77                    Cuts: 73      617         
      0     0      162.0000    24                    Cuts: 48      743         
      0     0      162.0000    20                    Cuts: 12      755         
      0     0      162.0000    30                     Cuts: 7      831         
      0     0      162.0000    30                     Cuts: 3      961         
*     0+    0                          194.0000      162.0000      961   16.49%
      0     2      162.0000     9      194.0000      162.0000      961   16.49%
Elapsed time =   0.34 sec. (tree size =  0.00 MB, solutions = 1)
*    30+   30                          192.0000      162.0000     3609   15.62%
    100    81      162.0000    36      192.0000      162.0000     6659   15.62%
    200   168      162.0000    36      192.0000      162.0000    13883   15.62%
    300   254      191.1753    40      192.0000      162.0000    17666   15.62%
*   340+  250                          181.0000      162.0000    20546   10.50%
*   350   209      integral     0      170.0000      162.0000    20624    4.71%
    400   234      162.0000    37      170.0000      162.0000    24183    4.71%
*   480+    1                          162.0000      162.0000    29319    0.00%

Clique cuts applied:  7
Cover cuts applied:  42
Implied bound cuts applied:  178
Mixed integer rounding cuts applied:  2
Zero-half cuts applied:  6
Gomory fractional cuts applied:  9
Lazy constraints applied:  16
Optimal
Lmax: 162
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 0
Job 6 into batch 2
Job 7 into batch 3
Job 8 into batch 8
Job 9 into batch 8
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 3
Job 13 into batch 13
Job 14 into batch 4
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 10
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 21
Job 23 into batch 17
Job 24 into batch 16
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 17
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 29
Job 31 into batch 31
Job 32 into batch 28
Job 33 into batch 33
Job 34 into batch 25
Job 35 into batch 35
Job 36 into batch 26
Job 37 into batch 33
Job 38 into batch 38
Job 39 into batch 38
Job 40 into batch 33
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 35
Job 44 into batch 41
Job 45 into batch 45
Job 46 into batch 46
Job 47 into batch 45
Job 48 into batch 48
Job 49 into batch 49
Job 0:	s=7	p=13	d=104	L=(-91+0-0)=-91=			Pk=13	Total size:10
Job 1:	s=7	p=14	d=106	L=(-79+0-0)=-79=			Pk=14	Total size:7
Job 2:	s=5	p=30	d=129	L=(-72+65-0)=-7=			Pk=95	Total size:10
Job 3:	s=8	p=73	d=175	L=(-45+78-0)=33=			Pk=87	Total size:10
Job 4:	s=6	p=72	d=181	L=(21+78-0)=99=			Pk=72	Total size:9
Job 5:	s=3	p=8	d=183	L=(27+70-194)=-97=			Pk=8	Total size:0
Job 6:	s=5	p=95	d=186	L=(119+-25-194)=-100=			Pk=95	Total size:0
Job 7:	s=1	p=74	d=198	L=(181+-99-194)=-112=			Pk=74	Total size:0
Job 8:	s=7	p=47	d=217	L=(209+-99-0)=110=			Pk=47	Total size:10
Job 9:	s=3	p=44	d=248	L=(222+-143-194)=-115=			Pk=44	Total size:0
Job 10:	s=6	p=33	d=281	L=(222+-143-0)=79=			Pk=33	Total size:9
Job 11:	s=10	p=90	d=308	L=(285+-143-0)=142=			Pk=90	Total size:10
Job 12:	s=1	p=87	d=315	L=(365+-230-194)=-59=			Pk=87	Total size:0
Job 13:	s=9	p=34	d=323	L=(391+-230-0)=161=			Pk=34	Total size:9
Job 14:	s=3	p=35	d=349	L=(400+-265-194)=-59=			Pk=35	Total size:0
Job 15:	s=8	p=11	d=368	L=(392+-265-0)=127=			Pk=11	Total size:8
Job 16:	s=5	p=27	d=481	L=(306+-256-0)=50=			Pk=36	Total size:9
Job 17:	s=6	p=69	d=492	L=(364+-249-0)=115=			Pk=76	Total size:10
Job 18:	s=3	p=30	d=501	L=(385+-279-194)=-88=			Pk=30	Total size:0
Job 19:	s=10	p=59	d=512	L=(433+-279-0)=154=			Pk=59	Total size:10
Job 20:	s=9	p=3	d=528	L=(420+-279-0)=141=			Pk=3	Total size:9
Job 21:	s=7	p=23	d=536	L=(435+-279-0)=156=			Pk=23	Total size:9
Job 22:	s=2	p=23	d=617	L=(377+-302-194)=-119=			Pk=23	Total size:0
Job 23:	s=2	p=63	d=632	L=(425+-365-194)=-134=			Pk=63	Total size:0
Job 24:	s=4	p=36	d=657	L=(436+-401-194)=-159=			Pk=36	Total size:0
Job 25:	s=3	p=43	d=674	L=(462+-398-0)=64=			Pk=46	Total size:10
Job 26:	s=9	p=53	d=703	L=(486+-398-0)=88=			Pk=53	Total size:10
Job 27:	s=2	p=76	d=718	L=(547+-474-194)=-121=			Pk=76	Total size:0
Job 28:	s=6	p=86	d=746	L=(605+-474-0)=131=			Pk=86	Total size:10
Job 29:	s=3	p=24	d=781	L=(594+-474-0)=120=			Pk=24	Total size:8
Job 30:	s=5	p=24	d=814	L=(585+-498-194)=-107=			Pk=24	Total size:0
Job 31:	s=9	p=41	d=820	L=(620+-498-0)=122=			Pk=41	Total size:9
Job 32:	s=4	p=61	d=876	L=(625+-559-194)=-128=			Pk=61	Total size:0
Job 33:	s=4	p=44	d=934	L=(611+-552-0)=59=			Pk=51	Total size:9
Job 34:	s=7	p=46	d=960	L=(631+-598-194)=-161=			Pk=46	Total size:0
Job 35:	s=9	p=99	d=966	L=(724+-598-0)=126=			Pk=99	Total size:10
Job 36:	s=1	p=50	d=1009	L=(731+-648-194)=-111=			Pk=50	Total size:0
Job 37:	s=2	p=25	d=1034	L=(731+-673-194)=-136=			Pk=25	Total size:0
Job 38:	s=6	p=91	d=1075	L=(781+-673-0)=108=			Pk=91	Total size:10
Job 39:	s=4	p=50	d=1100	L=(806+-723-194)=-111=			Pk=50	Total size:0
Job 40:	s=3	p=51	d=1115	L=(842+-774-194)=-126=			Pk=51	Total size:0
Job 41:	s=3	p=76	d=1117	L=(916+-756-0)=160=			Pk=94	Total size:10
Job 42:	s=5	p=20	d=1148	L=(905+-756-0)=149=			Pk=20	Total size:5
Job 43:	s=1	p=47	d=1205	L=(895+-803-194)=-102=			Pk=47	Total size:0
Job 44:	s=7	p=94	d=1206	L=(988+-897-194)=-103=			Pk=94	Total size:0
Job 45:	s=2	p=43	d=1225	L=(1012+-882-0)=130=			Pk=58	Total size:8
Job 46:	s=3	p=25	d=1304	L=(958+-882-0)=76=			Pk=25	Total size:3
Job 47:	s=6	p=58	d=1316	L=(1004+-940-194)=-130=			Pk=58	Total size:0
Job 48:	s=7	p=99	d=1362	L=(1057+-940-0)=117=			Pk=99	Total size:7
Job 49:	s=8	p=77	d=1396	L=(1100+-940-0)=160=			Pk=77	Total size:8

0
1.72414
162
2.71 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-28.csv
65
102
184
288
337
365
375
390
435
436
465
471
500
505
609
625
636
664
683
689
716
769
839
866
897
906
917
921
986
992
1033
1053
1059
1063
1072
1100
1139
1152
1152
1153
1157
1187
1229
1298
1337
1338
1427
1453
1463
1650
Job 0: due 65
Job 1: due 102
Job 2: due 184
Job 3: due 288
Job 4: due 337
Job 5: due 365
Job 6: due 375
Job 7: due 390
Job 8: due 435
Job 9: due 436
Job 10: due 465
Job 11: due 471
Job 12: due 500
Job 13: due 505
Job 14: due 609
Job 15: due 625
Job 16: due 636
Job 17: due 664
Job 18: due 683
Job 19: due 689
Job 20: due 716
Job 21: due 769
Job 22: due 839
Job 23: due 866
Job 24: due 897
Job 25: due 906
Job 26: due 917
Job 27: due 921
Job 28: due 986
Job 29: due 992
Job 30: due 1033
Job 31: due 1053
Job 32: due 1059
Job 33: due 1063
Job 34: due 1072
Job 35: due 1100
Job 36: due 1139
Job 37: due 1152
Job 38: due 1152
Job 39: due 1153
Job 40: due 1157
Job 41: due 1187
Job 42: due 1229
Job 43: due 1298
Job 44: due 1337
Job 45: due 1338
Job 46: due 1427
Job 47: due 1453
Job 48: due 1463
Job 49: due 1650
Ignore all jobs after 49
Lmaxinc before safe moves: 1050
Now using unsafety tolerance 0
New Lmaxincnew: 325
Difference: 725
Lmaxinc after safe moves: 105625
Initial solution:
0 1 2 3 4 5 6 4 0 9 10 11 12 13 14 15 16 5 18 15 20 21 14 2 24 18 5 27 28 29 30 1 4 33 5 35 20 2 38 39 40 41 6 12 38 1 16 38 18 
Updating LmaxLB to -59.4. C=5.6, d=65same duedate: 37
Updating LmaxLB to -38.3. C=1114.7, d=1153Updating LmaxLB to -12.6001. C=1174.4, d=1187Lower bound on Lmax based on areas:-2147483648
Max Lksingle:1050
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 677 safe move dominance lazy constraints
Added 282 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2813 rows and 1747 columns.
MIP Presolve modified 1694 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 909 rows, 704 columns, and 4870 nonzeros.
Reduced MIP has 654 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.01 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1672.
Problem contains 282 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      -46.0000   142                    -46.0000      402         
      0     0      -41.9149   116                    Cuts: 53      731         
      0     0      -17.0024   127                    Cuts: 96      966         
      0     0       -9.2611   144                    Cuts: 81     1058         
*     0+    0                          193.0000       -9.2611     1058  104.80%
      0     0       -7.4684   129      193.0000      Cuts: 70     1111  103.87%
      0     0       -1.4121   127      193.0000      Cuts: 44     1190  100.73%
      0     0        1.4842   144      193.0000      Cuts: 32     1241   99.23%
      0     0        2.5669   138      193.0000      Cuts: 59     1280   98.67%
      0     0        2.8654   132      193.0000      Cuts: 34     1306   98.52%
      0     0        3.4686   147      193.0000      Cuts: 26     1338   98.20%
      0     0        3.8330   148      193.0000      Cuts: 30     1358   98.01%
      0     0        3.9264   113      193.0000      Cuts: 50     1370   97.97%
      0     0        3.9629   156      193.0000      Cuts: 11     1380   97.95%
      0     0        4.0017   154      193.0000      Cuts: 19     1396   97.93%
      0     0        4.0029   158      193.0000   Impl Bds: 1     1398   97.93%
      0     2        4.0029   158      193.0000        4.0720     1398   97.89%
Elapsed time =   0.52 sec. (tree size =  0.00 MB, solutions = 1)
*    70+   63                          184.0000        9.5001     5987   94.84%
*   100+   90                          172.0000        9.5001     7232   94.48%
    100    90      170.6111     2      172.0000        9.5001     7232   94.48%
    200   177       57.8466   108      172.0000       20.9279    13047   87.83%
*   218   156      integral     0      121.0000       20.9279    13829   82.70%
    300   226       34.6883   132      121.0000       21.6078    18029   82.14%
    400   310      119.2004    55      121.0000       22.3409    24299   81.54%
    500   389       67.7509    63      121.0000       25.1344    31118   79.23%
*   523+  270                          119.0000       76.4235    33480   35.78%
*   575   150      integral     0      116.0000       82.7457    34884   28.67%
    600   153      104.5901    59      116.0000       85.8961    35722   25.95%
    700   146      103.9821    20      116.0000       90.2746    40494   22.18%
    800   155       96.7848    73      116.0000       94.8912    44300   18.20%
Elapsed time =   6.23 sec. (tree size =  0.16 MB, solutions = 6)
*   863+  158                          113.0000       95.7682    47183   15.25%
*   893+  133                          107.0000       95.9915    48134   10.29%
    900   134        cutoff            107.0000       96.0901    48464   10.20%
*   909    65      integral     0      102.0000       96.0910    48771    5.79%
   1000    30        cutoff            102.0000      100.0041    51791    1.96%

Clique cuts applied:  4
Cover cuts applied:  64
Implied bound cuts applied:  116
Flow cuts applied:  8
Mixed integer rounding cuts applied:  20
Zero-half cuts applied:  20
Gomory fractional cuts applied:  9
Lazy constraints applied:  14
Optimal
Lmax: 102
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 6
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 2
Job 12 into batch 4
Job 13 into batch 13
Job 14 into batch 7
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 15
Job 20 into batch 18
Job 21 into batch 21
Job 22 into batch 7
Job 23 into batch 1
Job 24 into batch 24
Job 25 into batch 18
Job 26 into batch 10
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 27
Job 32 into batch 32
Job 33 into batch 5
Job 34 into batch 28
Job 35 into batch 17
Job 36 into batch 36
Job 37 into batch 36
Job 38 into batch 16
Job 39 into batch 32
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 0
Job 43 into batch 43
Job 44 into batch 41
Job 45 into batch 9
Job 46 into batch 41
Job 47 into batch 43
Job 48 into batch 48
Job 0:	s=7	p=8	d=65	L=(-57+0-0)=-57=			Pk=8	Total size:10
Job 1:	s=6	p=48	d=102	L=(-46+15-0)=-31=			Pk=63	Total size:10
Job 2:	s=1	p=66	d=184	L=(-62+16-0)=-46=			Pk=68	Total size:10
Job 3:	s=10	p=28	d=288	L=(-138+16-0)=-122=			Pk=28	Total size:10
Job 4:	s=8	p=63	d=337	L=(-124+28-0)=-96=			Pk=76	Total size:10
Job 5:	s=2	p=27	d=365	L=(-125+45-0)=-80=			Pk=45	Total size:10
Job 6:	s=7	p=13	d=375	L=(-122+45-0)=-77=			Pk=13	Total size:10
Job 7:	s=1	p=51	d=390	L=(-86+73-0)=-13=			Pk=79	Total size:10
Job 8:	s=3	p=9	d=435	L=(-122+64-325)=-383=			Pk=9	Total size:0
Job 9:	s=9	p=49	d=436	L=(-74+64-0)=-10=			Pk=49	Total size:10
Job 10:	s=7	p=21	d=465	L=(-82+65-0)=-17=			Pk=23	Total size:10
Job 11:	s=9	p=68	d=471	L=(-20+-3-325)=-348=			Pk=68	Total size:0
Job 12:	s=2	p=76	d=500	L=(27+-79-325)=-377=			Pk=76	Total size:0
Job 13:	s=10	p=83	d=505	L=(105+-79-0)=26=			Pk=83	Total size:10
Job 14:	s=4	p=79	d=609	L=(80+-158-325)=-403=			Pk=79	Total size:0
Job 15:	s=3	p=36	d=625	L=(100+-158-0)=-58=			Pk=36	Total size:10
Job 16:	s=8	p=96	d=636	L=(185+-158-0)=27=			Pk=96	Total size:10
Job 17:	s=2	p=24	d=664	L=(181+-157-0)=24=			Pk=24	Total size:8
Job 18:	s=3	p=89	d=683	L=(251+-157-0)=94=			Pk=89	Total size:10
Job 19:	s=7	p=34	d=689	L=(279+-191-325)=-237=			Pk=34	Total size:0
Job 20:	s=4	p=83	d=716	L=(335+-274-325)=-264=			Pk=83	Total size:0
Job 21:	s=9	p=34	d=769	L=(316+-274-0)=42=			Pk=34	Total size:9
Job 22:	s=5	p=78	d=839	L=(324+-352-325)=-353=			Pk=78	Total size:0
Job 23:	s=4	p=63	d=866	L=(360+-415-325)=-380=			Pk=63	Total size:0
Job 24:	s=10	p=59	d=897	L=(388+-415-0)=-27=			Pk=59	Total size:10
Job 25:	s=3	p=87	d=906	L=(466+-502-325)=-361=			Pk=87	Total size:0
Job 26:	s=3	p=23	d=917	L=(478+-525-325)=-372=			Pk=23	Total size:0
Job 27:	s=8	p=54	d=921	L=(528+-525-0)=3=			Pk=54	Total size:10
Job 28:	s=6	p=6	d=986	L=(469+-525-0)=-56=			Pk=6	Total size:8
Job 29:	s=9	p=35	d=992	L=(498+-525-0)=-27=			Pk=35	Total size:9
Job 30:	s=9	p=55	d=1033	L=(512+-525-0)=-13=			Pk=55	Total size:9
Job 31:	s=2	p=46	d=1053	L=(538+-571-325)=-358=			Pk=46	Total size:0
Job 32:	s=1	p=60	d=1059	L=(592+-548-0)=44=			Pk=83	Total size:10
Job 33:	s=8	p=45	d=1063	L=(633+-593-325)=-285=			Pk=45	Total size:0
Job 34:	s=2	p=5	d=1072	L=(629+-598-325)=-294=			Pk=5	Total size:0
Job 35:	s=6	p=23	d=1100	L=(624+-621-325)=-322=			Pk=23	Total size:0
Job 36:	s=5	p=84	d=1139	L=(669+-621-0)=48=			Pk=84	Total size:10
Job 37:	s=5	p=66	d=1152	L=(722+-687-325)=-290=			Pk=66	Total size:0
Job 38:	s=2	p=84	d=1152	L=(806+-771-325)=-290=			Pk=84	Total size:0
Job 39:	s=9	p=83	d=1153	L=(888+-854-325)=-291=			Pk=83	Total size:0
Job 40:	s=7	p=3	d=1157	L=(887+-854-0)=33=			Pk=3	Total size:7
Job 41:	s=6	p=96	d=1187	L=(953+-854-0)=99=			Pk=96	Total size:10
Job 42:	s=3	p=4	d=1229	L=(915+-858-325)=-268=			Pk=4	Total size:0
Job 43:	s=7	p=59	d=1298	L=(905+-858-0)=47=			Pk=59	Total size:10
Job 44:	s=3	p=56	d=1337	L=(922+-914-325)=-317=			Pk=56	Total size:0
Job 45:	s=1	p=29	d=1338	L=(950+-943-325)=-318=			Pk=29	Total size:0
Job 46:	s=1	p=96	d=1427	L=(957+-1039-325)=-407=			Pk=96	Total size:0
Job 47:	s=3	p=43	d=1453	L=(974+-1082-325)=-433=			Pk=43	Total size:0
Job 48:	s=3	p=86	d=1463	L=(1050+-1082-0)=-32=			Pk=86	Total size:3

-2147483648
1.81481
102
7.18 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-29.csv
25
48
58
59
64
65
84
85
97
98
104
109
112
114
120
124
128
135
136
140
142
145
150
152
163
168
171
172
189
198
203
207
210
210
211
215
217
234
235
241
257
272
280
280
281
284
302
307
310
311
Job 0: due 25
Job 1: due 48
Job 2: due 58
Job 3: due 59
Job 4: due 64
Job 5: due 65
Job 6: due 84
Job 7: due 85
Job 8: due 97
Job 9: due 98
Job 10: due 104
Job 11: due 109
Job 12: due 112
Job 13: due 114
Job 14: due 120
Job 15: due 124
Job 16: due 128
Job 17: due 135
Job 18: due 136
Job 19: due 140
Job 20: due 142
Job 21: due 145
Job 22: due 150
Job 23: due 152
Job 24: due 163
Job 25: due 168
Job 26: due 171
Job 27: due 172
Job 28: due 189
Job 29: due 198
Job 30: due 203
Job 31: due 207
Job 32: due 210
Job 33: due 210
Job 34: due 211
Job 35: due 215
Job 36: due 217
Job 37: due 234
Job 38: due 235
Job 39: due 241
Job 40: due 257
Job 41: due 272
Job 42: due 280
Job 43: due 280
Job 44: due 281
Job 45: due 284
Job 46: due 302
Job 47: due 307
Job 48: due 310
Job 49: due 311
Ignore all jobs after 50
Lmaxinc before safe moves: 2417
Now using unsafety tolerance 0
New Lmaxincnew: 1409
Difference: 1008
Lmaxinc after safe moves: 1.98528e+06
Initial solution:
0 1 2 1 4 2 6 7 8 4 8 11 1 13 14 15 16 16 18 19 16 21 14 23 13 21 26 27 19 18 27 31 32 33 33 35 6 13 38 39 40 41 42 18 41 45 38 47 48 18 
Updating LmaxLB to -10. C=15, d=25Updating LmaxLB to -6.6. C=57.4, d=64Updating LmaxLB to 21.5. C=105.5, d=84Updating LmaxLB to 83.5. C=168.5, d=85Updating LmaxLB to 99.5. C=196.5, d=97Updating LmaxLB to 106.6. C=204.6, d=98Updating LmaxLB to 139.2. C=248.2, d=109Updating LmaxLB to 183.8. C=297.8, d=114Updating LmaxLB to 191.4. C=311.4, d=120Updating LmaxLB to 193.4. C=317.4, d=124Updating LmaxLB to 204.1. C=332.1, d=128Updating LmaxLB to 205.5. C=340.5, d=135Updating LmaxLB to 254. C=390, d=136Updating LmaxLB to 268. C=408, d=140Updating LmaxLB to 283.2. C=425.2, d=142Updating LmaxLB to 325.7. C=470.7, d=145Updating LmaxLB to 333.7. C=483.7, d=150Updating LmaxLB to 350.7. C=502.7, d=152Updating LmaxLB to 406.2. C=577.2, d=171Updating LmaxLB to 447.2. C=619.2, d=172Updating LmaxLB to 466.2. C=655.2, d=189Updating LmaxLB to 485.3. C=688.3, d=203Updating LmaxLB to 501.8. C=708.8, d=207same duedate: 32
Updating LmaxLB to 597.4. C=807.4, d=210Updating LmaxLB to 629.4. C=840.4, d=211Updating LmaxLB to 698.4. C=913.4, d=215Updating LmaxLB to 701.3. C=918.3, d=217Updating LmaxLB to 713.2. C=948.2, d=235Updating LmaxLB to 749.6. C=990.6, d=241Updating LmaxLB to 822.6. C=1079.6, d=257Updating LmaxLB to 863.6. C=1135.6, d=272same duedate: 42
Updating LmaxLB to 891.2. C=1171.2, d=280Updating LmaxLB to 914.5. C=1195.5, d=281Updating LmaxLB to 986.2. C=1270.2, d=284Updating LmaxLB to 999.4. C=1301.4, d=302Updating LmaxLB to 1071.4. C=1378.4, d=307Updating LmaxLB to 1146.7. C=1456.7, d=310Updating LmaxLB to 1165.5. C=1476.5, d=311Lower bound on Lmax based on areas:0
Max Lksingle:2417
Max reduction:2417
Now adding static psi-2-in-2 dominance rules ...
Added 98 safe move dominance lazy constraints
Added 119 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2845 rows and 1855 columns.
MIP Presolve modified 2402 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 1024 rows, 693 columns, and 3434 nonzeros.
Reduced MIP has 642 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 3 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.03 sec.
Probing time =    0.00 sec.
Clique table members: 1387.
Problem contains 119 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      830.6136   168                    830.6136      404         
      0     0      884.3709   158                   Cuts: 148      625         
      0     0      938.2903   171                   Cuts: 178      844         
      0     0      958.8598   186                   Cuts: 155     1043         
      0     0      971.1370   211                   Cuts: 140     1228         
      0     0      977.7995   222                   Cuts: 116     1353         
      0     0      980.0383   223                   Cuts: 108     1420         
      0     0      984.0086   226                   Cuts: 112     1522         
      0     0      986.7124   231                    Cuts: 95     1583         
      0     0      988.4419   237                    Cuts: 65     1629         
      0     0      994.2697   233                    Cuts: 59     1682         
      0     0      995.4027   234                    Cuts: 51     1717         
      0     0      996.4222   238                    Cuts: 77     1772         
      0     0      998.0463   242                    Cuts: 54     1814         
      0     0      998.5741   243                    Cuts: 33     1844         
      0     0      998.5741   244                Impl Bds: 15     1848         
      0     0      998.5741   242                 Impl Bds: 5     1850         
      0     2      998.5741   242                    998.6100     1850         
Elapsed time =   0.82 sec. (tree size =  0.00 MB, solutions = 0)
    100   102     1318.5856    47                   1002.5117    10313         
    200   194     1215.8992    58                   1002.6710    18967         
    300   284     1212.4786    94                   1004.9216    26947         
    400   378     1344.5945    36                   1005.0259    33301         
    500   474     1305.2706    57                   1005.6987    41264         
*   507+  320                         1328.0000     1198.1838    42417    9.78%
*   507+  213                         1321.0000     1201.7807    42827    9.02%
*   527+  156                         1310.0000     1206.7327    44536    7.88%
*   547+  125                         1286.0000     1206.7327    45469    6.16%
    600   149     1274.7575    28     1286.0000     1206.7327    47985    6.16%
*   647+  154                         1283.0000     1212.7303    49802    5.48%
    700   168     1243.7701    99     1283.0000     1212.8833    51389    5.47%
*   728   145      integral     0     1269.0000     1212.8833    52639    4.42%
    800   203     1259.0815    47     1269.0000     1219.3724    56993    3.91%
    900   289     1262.1158    48     1269.0000     1221.0104    61534    3.78%
Elapsed time =  10.46 sec. (tree size =  0.29 MB, solutions = 6)
   1000   360     1254.8025    16     1269.0000     1222.7200    67152    3.65%
   1100   447     1261.0029    61     1269.0000     1223.7004    70885    3.57%
   1200   527     1263.3743    41     1269.0000     1225.6654    75339    3.41%
   1300   606     1253.4502    60     1269.0000     1226.7251    80159    3.33%
   1400   693     1265.2665    42     1269.0000     1227.7586    83805    3.25%
   1500   763     1250.6309    44     1269.0000     1230.6475    89926    3.02%
   1600   836     1258.9292    67     1269.0000     1231.7376    95178    2.94%
   1700   914     1268.2533    42     1269.0000     1232.2052   100718    2.90%
   1800   998     1259.4562    22     1269.0000     1233.2374   105198    2.82%
*  1870  1002      integral     0     1268.0000     1234.7464   110158    2.62%
Elapsed time =  14.90 sec. (tree size =  0.61 MB, solutions = 7)
   1900  1020     1264.4833    57     1268.0000     1235.2937   111889    2.58%
*  1970+  989                         1266.0000     1235.7297   115472    2.39%
*  1982   533      integral     0     1257.0000     1235.7297   116030    1.69%
   2000   550     1256.6065    64     1257.0000     1235.7297   116435    1.69%
   2100   610     1243.4093    40     1257.0000     1236.4762   121557    1.63%
   2200   656     1242.8298    43     1257.0000     1237.3460   126652    1.56%
   2300   727     1238.1943    78     1257.0000     1238.1898   130650    1.50%
   2400   805     1251.8663    54     1257.0000     1238.2482   134721    1.49%
   2500   860     1247.1963    85     1257.0000     1238.9875   140543    1.43%
   2600   898     1254.1835    38     1257.0000     1239.6650   144638    1.38%
   2700   956     1253.5232    70     1257.0000     1240.0239   147807    1.35%
Elapsed time =  18.44 sec. (tree size =  0.57 MB, solutions = 9)
   2800  1007        cutoff           1257.0000     1240.2664   152958    1.33%
   2900  1060     1252.0500    30     1257.0000     1240.7537   157698    1.29%
   3000  1095        cutoff           1257.0000     1241.3225   163078    1.25%
   3100  1134        cutoff           1257.0000     1242.1462   168053    1.18%
   3200  1167     1254.8377    39     1257.0000     1242.6401   172732    1.14%
   3300  1210     1254.8460    44     1257.0000     1242.9668   177681    1.12%
   3400  1232        cutoff           1257.0000     1243.5407   182389    1.07%
   3500  1294        cutoff           1257.0000     1243.7683   186798    1.05%
   3600  1324        cutoff           1257.0000     1244.2829   192383    1.01%
   3700  1362        cutoff           1257.0000     1244.5173   196900    0.99%
Elapsed time =  23.74 sec. (tree size =  0.81 MB, solutions = 9)
   3800  1412     1252.1209    45     1257.0000     1244.7294   201365    0.98%
   3900  1452        cutoff           1257.0000     1244.9817   205303    0.96%
   4000  1474        cutoff           1257.0000     1245.2197   210293    0.94%
   4100  1503     1251.3299    75     1257.0000     1245.6813   215214    0.90%
   4200  1526        cutoff           1257.0000     1246.0611   219961    0.87%
   4300  1558     1253.3844    51     1257.0000     1246.2540   224448    0.85%
   4400  1570     1249.9609    64     1257.0000     1246.5616   230505    0.83%
   4500  1559     1251.7644    43     1257.0000     1246.9409   235442    0.80%
   4600  1598        cutoff           1257.0000     1247.1479   239816    0.78%
   4700  1602        cutoff           1257.0000     1247.3778   244526    0.77%
Elapsed time =  28.19 sec. (tree size =  0.92 MB, solutions = 9)
   4800  1637     1255.2836    50     1257.0000     1247.5068   249044    0.76%
   4900  1642        cutoff           1257.0000     1247.7529   253726    0.74%
   5000  1670     1252.7931    72     1257.0000     1248.0826   258043    0.71%
   5100  1666        cutoff           1257.0000     1248.4167   263629    0.68%
   5200  1677     1253.9824    58     1257.0000     1248.6877   267401    0.66%
   5300  1666     1255.3844    51     1257.0000     1249.0055   271695    0.64%
   5400  1675     1253.2045    57     1257.0000     1249.3033   276916    0.61%
   5500  1714     1256.9062     8     1257.0000     1249.4071   280480    0.60%
   5600  1680        cutoff           1257.0000     1249.6708   286403    0.58%
   5700  1637     1253.9810    38     1257.0000     1250.0330   291664    0.55%
Elapsed time =  33.07 sec. (tree size =  0.94 MB, solutions = 9)
   5800  1634        cutoff           1257.0000     1250.2059   296460    0.54%
*  5812  1199      integral     0     1255.0000     1250.2201   297386    0.38%
   5900  1184        cutoff           1255.0000     1250.4469   301537    0.36%
   6000  1111        cutoff           1255.0000     1250.7974   305107    0.33%
   6100  1060        cutoff           1255.0000     1251.0822   308428    0.31%
   6200  1003     1253.7979    50     1255.0000     1251.4486   312469    0.28%
   6300   938        cutoff           1255.0000     1251.8193   316150    0.25%
   6400   856        cutoff           1255.0000     1252.1842   319189    0.22%
   6500   778        cutoff           1255.0000     1252.5257   322028    0.20%
   6600   702        cutoff           1255.0000     1252.7682   325118    0.18%
Elapsed time =  36.13 sec. (tree size =  0.43 MB, solutions = 10)
   6700   616        cutoff           1255.0000     1253.0809   327761    0.15%
   6800   522        cutoff           1255.0000     1253.3977   329729    0.13%
   6900   425        cutoff           1255.0000     1253.6663   331472    0.11%
   7000   328        cutoff           1255.0000     1254.0000   332965    0.08%
   7100   230        cutoff           1255.0000     1254.2662   333894    0.06%
   7200   133        cutoff           1255.0000     1254.5667   334611    0.03%

Clique cuts applied:  11
Cover cuts applied:  126
Implied bound cuts applied:  129
Flow cuts applied:  21
Mixed integer rounding cuts applied:  76
Zero-half cuts applied:  31
Gomory fractional cuts applied:  6
Lazy constraints applied:  13
Optimal
Lmax: 1255
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 2
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 3
Job 9 into batch 9
Job 10 into batch 1
Job 11 into batch 11
Job 12 into batch 11
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 9
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 9
Job 21 into batch 19
Job 22 into batch 15
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 4
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 18
Job 30 into batch 28
Job 31 into batch 14
Job 32 into batch 24
Job 33 into batch 33
Job 34 into batch 33
Job 35 into batch 35
Job 36 into batch 6
Job 37 into batch 37
Job 38 into batch 13
Job 39 into batch 17
Job 40 into batch 40
Job 41 into batch 41
Job 42 into batch 26
Job 43 into batch 18
Job 44 into batch 41
Job 45 into batch 37
Job 46 into batch 27
Job 47 into batch 47
Job 48 into batch 48
Job 49 into batch 18
Job 0:	s=10	p=15	d=25	L=(-10+0-0)=-10=			Pk=15	Total size:10
Job 1:	s=7	p=22	d=48	L=(-11+0-0)=-11=			Pk=22	Total size:9
Job 2:	s=5	p=6	d=58	L=(-15+0-0)=-15=			Pk=6	Total size:8
Job 3:	s=2	p=15	d=59	L=(-1+19-1.87717e-12)=18=			Pk=35	Total size:10
Job 4:	s=7	p=30	d=64	L=(24+19--1.87717e-12)=43=			Pk=30	Total size:10
Job 5:	s=3	p=3	d=65	L=(26+16-1409)=-1367=			Pk=3	Total size:0
Job 6:	s=8	p=59	d=84	L=(66+15-0)=81=			Pk=59	Total size:9
Job 7:	s=10	p=63	d=85	L=(128+15-0)=143=			Pk=63	Total size:10
Job 8:	s=8	p=35	d=97	L=(151+-20-1409)=-1278=			Pk=35	Total size:0
Job 9:	s=3	p=27	d=98	L=(177+1-4.69291e-13)=178=			Pk=49	Total size:10
Job 10:	s=2	p=11	d=104	L=(182+-9-1409)=-1236=			Pk=11	Total size:0
Job 11:	s=9	p=46	d=109	L=(223+-9-0)=214=			Pk=46	Total size:10
Job 12:	s=1	p=20	d=112	L=(240+-29-1409)=-1198=			Pk=20	Total size:0
Job 13:	s=7	p=68	d=114	L=(306+-19-0)=287=			Pk=78	Total size:10
Job 14:	s=4	p=34	d=120	L=(334+-12--3.12861e-13)=322=			Pk=41	Total size:9
Job 15:	s=5	p=12	d=124	L=(342+1-2.65932e-12)=343=			Pk=26	Total size:10
Job 16:	s=3	p=49	d=128	L=(387+-48-1409)=-1070=			Pk=49	Total size:0
Job 17:	s=2	p=42	d=135	L=(422+-37--6.25722e-13)=385=			Pk=53	Total size:10
Job 18:	s=5	p=99	d=136	L=(520+-37-0)=483=			Pk=99	Total size:10
Job 19:	s=3	p=60	d=140	L=(576+-32-0)=544=			Pk=65	Total size:10
Job 20:	s=4	p=43	d=142	L=(617+-75-1409)=-867=			Pk=43	Total size:0
Job 21:	s=7	p=65	d=145	L=(679+-140-1409)=-870=			Pk=65	Total size:0
Job 22:	s=5	p=26	d=150	L=(700+-166-1409)=-875=			Pk=26	Total size:0
Job 23:	s=10	p=19	d=152	L=(717+-166-0)=551=			Pk=19	Total size:10
Job 24:	s=1	p=65	d=163	L=(771+-162-0)=609=			Pk=69	Total size:10
Job 25:	s=3	p=24	d=168	L=(790+-186-1409)=-805=			Pk=24	Total size:0
Job 26:	s=8	p=76	d=171	L=(863+-175-0)=688=			Pk=87	Total size:10
Job 27:	s=6	p=70	d=172	L=(932+-167-0)=765=			Pk=78	Total size:10
Job 28:	s=6	p=60	d=189	L=(975+-165-0)=810=			Pk=62	Total size:10
Job 29:	s=1	p=83	d=198	L=(1049+-248-1409)=-608=			Pk=83	Total size:0
Job 30:	s=4	p=62	d=203	L=(1106+-310-1409)=-613=			Pk=62	Total size:0
Job 31:	s=5	p=41	d=207	L=(1143+-351-1409)=-617=			Pk=41	Total size:0
Job 32:	s=9	p=69	d=210	L=(1209+-420-1409)=-620=			Pk=69	Total size:0
Job 33:	s=5	p=73	d=210	L=(1282+-420-0)=862=			Pk=73	Total size:10
Job 34:	s=5	p=66	d=211	L=(1347+-486-1409)=-548=			Pk=66	Total size:0
Job 35:	s=10	p=73	d=215	L=(1416+-486-0)=930=			Pk=73	Total size:10
Job 36:	s=1	p=49	d=217	L=(1463+-535-1409)=-481=			Pk=49	Total size:0
Job 37:	s=1	p=65	d=234	L=(1511+-516--3.75433e-12)=995=			Pk=83	Total size:10
Job 38:	s=3	p=78	d=235	L=(1588+-594-1409)=-415=			Pk=78	Total size:0
Job 39:	s=8	p=53	d=241	L=(1635+-647-1409)=-421=			Pk=53	Total size:0
Job 40:	s=10	p=89	d=257	L=(1708+-647-0)=1061=			Pk=89	Total size:10
Job 41:	s=7	p=80	d=272	L=(1773+-646-0)=1127=			Pk=81	Total size:10
Job 42:	s=2	p=87	d=280	L=(1852+-733-1409)=-290=			Pk=87	Total size:0
Job 43:	s=2	p=91	d=280	L=(1943+-824-1409)=-290=			Pk=91	Total size:0
Job 44:	s=3	p=81	d=281	L=(2023+-905-1409)=-291=			Pk=81	Total size:0
Job 45:	s=9	p=83	d=284	L=(2103+-988-1409)=-294=			Pk=83	Total size:0
Job 46:	s=4	p=78	d=302	L=(2163+-1066-1409)=-312=			Pk=78	Total size:0
Job 47:	s=10	p=77	d=307	L=(2235+-1066-0)=1169=			Pk=77	Total size:10
Job 48:	s=9	p=87	d=310	L=(2319+-1066-0)=1253=			Pk=87	Total size:9
Job 49:	s=2	p=99	d=311	L=(2417+-1165-1409)=-157=			Pk=99	Total size:0

0
1.85185
1255
37.49 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-30.csv
91
94
95
96
98
112
115
116
117
117
121
137
139
140
141
143
146
157
166
167
170
183
196
197
201
211
217
220
223
224
224
225
226
232
232
240
248
277
278
345
356
361
370
383
391
416
432
461
494
516
Job 0: due 91
Job 1: due 94
Job 2: due 95
Job 3: due 96
Job 4: due 98
Job 5: due 112
Job 6: due 115
Job 7: due 116
Job 8: due 117
Job 9: due 117
Job 10: due 121
Job 11: due 137
Job 12: due 139
Job 13: due 140
Job 14: due 141
Job 15: due 143
Job 16: due 146
Job 17: due 157
Job 18: due 166
Job 19: due 167
Job 20: due 170
Job 21: due 183
Job 22: due 196
Job 23: due 197
Job 24: due 201
Job 25: due 211
Job 26: due 217
Job 27: due 220
Job 28: due 223
Job 29: due 224
Job 30: due 224
Job 31: due 225
Job 32: due 226
Job 33: due 232
Job 34: due 232
Job 35: due 240
Job 36: due 248
Job 37: due 277
Job 38: due 278
Job 39: due 345
Job 40: due 356
Job 41: due 361
Job 42: due 370
Job 43: due 383
Job 44: due 391
Job 45: due 416
Job 46: due 432
Job 47: due 461
Job 48: due 494
Job 49: due 516
Ignore all jobs after 50
Lmaxinc before safe moves: 2073
Now using unsafety tolerance 0
New Lmaxincnew: 1190
Difference: 883
Lmaxinc after safe moves: 1.4161e+06
Initial solution:
0 1 2 3 4 5 3 5 8 0 10 11 12 5 14 15 0 17 18 19 20 11 22 14 24 0 11 27 28 29 30 31 11 33 10 35 28 2 29 39 2 41 42 33 30 45 20 47 48 49 
Updating LmaxLB to -83.4. C=7.6, d=91Updating LmaxLB to -30.4. C=63.6, d=94Updating LmaxLB to 23.9. C=118.9, d=95Updating LmaxLB to 36.4. C=132.4, d=96Updating LmaxLB to 55.4. C=153.4, d=98same duedate: 8
Updating LmaxLB to 58.1. C=175.1, d=117Updating LmaxLB to 101.5. C=222.5, d=121Updating LmaxLB to 111. C=248, d=137Updating LmaxLB to 136. C=275, d=139Updating LmaxLB to 163.8. C=304.8, d=141Updating LmaxLB to 166. C=309, d=143Updating LmaxLB to 170.7. C=327.7, d=157Updating LmaxLB to 182.6. C=349.6, d=167Updating LmaxLB to 205.7. C=375.7, d=170Updating LmaxLB to 217.9. C=413.9, d=196Updating LmaxLB to 228.9. C=425.9, d=197Updating LmaxLB to 240.9. C=441.9, d=201Updating LmaxLB to 253.7. C=464.7, d=211Updating LmaxLB to 261.5. C=478.5, d=217Updating LmaxLB to 311.5. C=531.5, d=220Updating LmaxLB to 328.1. C=551.1, d=223same duedate: 29
Updating LmaxLB to 424. C=648, d=224Updating LmaxLB to 452.6. C=677.6, d=225Updating LmaxLB to 477.1. C=703.1, d=226same duedate: 33
Updating LmaxLB to 511. C=743, d=232Updating LmaxLB to 554.8. C=794.8, d=240Updating LmaxLB to 555.8. C=803.8, d=248Updating LmaxLB to 566.7. C=911.7, d=345Updating LmaxLB to 570.7. C=926.7, d=356Updating LmaxLB to 625.1. C=986.1, d=361Updating LmaxLB to 673.7. C=1043.7, d=370Updating LmaxLB to 697.8. C=1080.8, d=383Updating LmaxLB to 698.7. C=1089.7, d=391Updating LmaxLB to 743. C=1159, d=416Updating LmaxLB to 768.5. C=1200.5, d=432Updating LmaxLB to 816.3. C=1277.3, d=461Updating LmaxLB to 840.3. C=1334.3, d=494Updating LmaxLB to 914.3. C=1430.3, d=516Lower bound on Lmax based on areas:0
Max Lksingle:2073
Max reduction:2073
Now adding static psi-2-in-2 dominance rules ...
Added 237 safe move dominance lazy constraints
Added 157 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2877 rows and 1898 columns.
MIP Presolve modified 2418 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 907 rows, 647 columns, and 4258 nonzeros.
Reduced MIP has 596 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1009.
Problem contains 157 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      569.6201   186                    569.6201      559         
      0     0      609.5535   165                   Cuts: 158      800         
      0     0      668.7852   175                   Cuts: 152     1125         
      0     0      684.7631   180                   Cuts: 145     1322         
      0     0      695.8058   192                   Cuts: 139     1433         
      0     0      701.3115   197                   Cuts: 117     1558         
      0     0      702.0814   191                   Cuts: 107     1608         
      0     0      703.8972   202                    Cuts: 65     1669         
      0     0      706.0899   195                    Cuts: 81     1711         
      0     0      709.8464   192                    Cuts: 72     1812         
      0     0      711.6671   188                    Cuts: 64     1865         
      0     0      730.4246   176                    Cuts: 48     1921         
      0     0      734.1604   195                    Cuts: 67     1955         
      0     0      736.7408   195                    Cuts: 31     1979         
      0     0      746.8247   202                    Cuts: 47     2010         
      0     0      749.3286   190                    Cuts: 43     2029         
      0     0      749.3435   191                Impl Bds: 13     2049         
      0     0      749.3440   192                Impl Bds: 14     2053         
      0     2      749.6276   192                    749.6384     2053         
Elapsed time =   0.78 sec. (tree size =  0.00 MB, solutions = 0)
*    67    62      integral     0     1051.0000      757.5655     6357   27.92%
    100    88      953.6028   113     1051.0000      757.5775     8717   27.92%
    200   182     1003.7447    59     1051.0000      768.8001    15248   26.85%
    300   274      871.2996   143     1051.0000      774.2645    20460   26.33%
    400   366      882.5782   159     1051.0000      778.8831    26462   25.89%
    500   462      983.3991   113     1051.0000      779.7268    32557   25.81%
*   519+  320                         1050.0000      965.8171    34652    8.02%
*   519+  213                         1044.0000      967.5769    35032    7.32%
*   519+  141                         1042.0000      967.5769    35032    7.14%
    600   192      996.3953    42     1042.0000      970.4349    37405    6.87%
*   619+  168                         1041.0000      970.4349    37706    6.78%
*   659+  172                         1029.0000      970.4349    38544    5.69%
*   666   161      integral     0     1019.0000      970.4349    38647    4.77%
    700   177      998.7753    52     1019.0000      970.8846    39901    4.72%
*   719+  187                         1018.0000      970.8846    40255    4.63%
    800   264     1002.0899    46     1018.0000      971.1827    41836    4.60%
Elapsed time =   7.96 sec. (tree size =  0.32 MB, solutions = 8)
    900   350     1015.1629    53     1018.0000      971.3426    43350    4.58%
   1000   438      985.2276    66     1018.0000      971.4279    44989    4.57%
   1100   527      990.7301    51     1018.0000      971.6769    46789    4.55%
   1200   623     1007.4087    76     1018.0000      971.8416    48858    4.53%
   1300   710      993.6924    66     1018.0000      972.3514    51552    4.48%
   1400   799      981.7114    78     1018.0000      972.7083    53307    4.45%
   1500   898     1014.3191    23     1018.0000      972.7083    55027    4.45%
   1600   984     1005.0485    42     1018.0000      974.1102    57205    4.31%
   1700  1075     1004.2831    58     1018.0000      974.2622    59169    4.30%
   1800  1162      996.7358    54     1018.0000      974.4467    61613    4.28%
Elapsed time =   9.95 sec. (tree size =  0.80 MB, solutions = 8)
   1900  1254     1002.8671    66     1018.0000      975.4510    64017    4.18%
   2000  1349     1014.3516    52     1018.0000      975.8953    66354    4.14%
   2100  1431     1003.3734    58     1018.0000      976.9302    68873    4.03%
   2200  1527     1013.8248    36     1018.0000      977.2906    71020    4.00%
   2300  1607     1016.6719    34     1018.0000      978.4495    73174    3.89%
   2400  1702     1015.8854    22     1018.0000      978.7665    74873    3.85%
   2500  1792      999.1083    73     1018.0000      978.9742    76947    3.83%
   2600  1884     1004.6896    66     1018.0000      978.9935    78674    3.83%
   2700  1979     1003.2195    37     1018.0000      979.6800    80360    3.76%
   2800  2074     1017.4435    41     1018.0000      979.7774    82383    3.75%
Elapsed time =  11.79 sec. (tree size =  1.28 MB, solutions = 8)
   2900  2152     1008.6417    25     1018.0000      980.4295    84804    3.69%
   3000  2240     1008.5959    73     1018.0000      981.2533    86503    3.61%
   3100  2328     1012.5299    47     1018.0000      981.6094    89232    3.57%
   3200  2420     1004.5921    75     1018.0000      981.7321    91422    3.56%
   3300  2503     1003.0364    63     1018.0000      982.1487    93687    3.52%
   3400  2588      995.0648    56     1018.0000      982.3716    95754    3.50%
   3500  2679     1006.9340    72     1018.0000      982.4146    97220    3.50%
   3600  2767     1000.8045    36     1018.0000      982.5659    99300    3.48%
   3700  2856     1012.1420    43     1018.0000      982.5946   100941    3.48%
   3800  2941     1000.5069    70     1018.0000      982.8675   102730    3.45%
Elapsed time =  13.69 sec. (tree size =  1.72 MB, solutions = 8)
   3900  3025     1009.7683    37     1018.0000      982.9772   105055    3.44%
   4000  3114     1012.3077    35     1018.0000      983.0733   107000    3.43%
*  4001  2884      integral     0     1016.0000      983.0733   107042    3.24%
*  4002  2646      integral     0     1014.0000      983.0733   107055    3.05%
   4100  2734      990.3974    66     1014.0000      983.2803   109149    3.03%
   4200  2830     1005.9995    45     1014.0000      983.3498   110851    3.02%
   4300  2918     1011.6812    31     1014.0000      983.5954   112999    3.00%
   4400  3011     1000.4504    43     1014.0000      983.6513   115005    2.99%
   4500  3096     1005.5045    47     1014.0000      983.8691   117729    2.97%
   4600  3168        cutoff           1014.0000      984.0829   120476    2.95%
Elapsed time =  15.54 sec. (tree size =  1.90 MB, solutions = 10)
   4700  3252     1004.4408    41     1014.0000      984.5724   122667    2.90%
   4800  3338        cutoff           1014.0000      984.6807   124720    2.89%
   4900  3426     1007.4061    34     1014.0000      984.7810   127425    2.88%
   5000  3516     1012.9581    30     1014.0000      985.0461   129470    2.86%
   5100  3599      993.5809    51     1014.0000      985.1154   131666    2.85%
   5200  3688     1012.4800    34     1014.0000      985.2276   133860    2.84%
   5300  3772        cutoff           1014.0000      985.2857   135904    2.83%
   5400  3850     1004.2788    38     1014.0000      985.5729   138376    2.80%
   5500  3935     1013.6545    35     1014.0000      985.8347   140955    2.78%
   5600  4022     1010.1988    24     1014.0000      985.9681   143424    2.76%
Elapsed time =  17.56 sec. (tree size =  2.37 MB, solutions = 10)
   5700  4107     1004.2751    40     1014.0000      986.0649   145231    2.75%
   5800  4193     1011.8922    52     1014.0000      986.2885   147259    2.73%
   5900  4279     1010.9687    23     1014.0000      986.3960   149733    2.72%
   6000  4367     1003.1373    43     1014.0000      986.5288   151610    2.71%
   6100  4451     1008.8635    55     1014.0000      986.6592   154261    2.70%
   6200  4533     1006.7490    40     1014.0000      986.7808   156204    2.68%
   6300  4610     1012.4200    44     1014.0000      987.0445   158831    2.66%
   6400  4669     1002.4168    46     1014.0000      987.6997   162455    2.59%
   6500  4753     1003.4660    68     1014.0000      987.8784   164662    2.58%
   6600  4836     1007.6013    21     1014.0000      987.9913   167008    2.56%
Elapsed time =  20.02 sec. (tree size =  2.92 MB, solutions = 10)
*  6624  3794      integral     0     1010.0000      988.0261   167665    2.18%
   6700  3854     1009.2645    68     1010.0000      988.1792   169828    2.16%
   6800  3925     1008.9189    65     1010.0000      988.6447   172713    2.11%
   6900  3993     1007.6457    70     1010.0000      988.8925   175330    2.09%
   7000  4034        cutoff           1010.0000      989.3043   179022    2.05%
   7100  4107     1008.0135    27     1010.0000      989.4777   181564    2.03%
   7200  4164     1005.7830    59     1010.0000      989.8715   184066    1.99%
   7300  4230     1008.6850    45     1010.0000      990.0902   186661    1.97%
   7400  4304        cutoff           1010.0000      990.1848   188892    1.96%
   7500  4358     1005.4710    52     1010.0000      990.6251   192196    1.92%
Elapsed time =  22.51 sec. (tree size =  2.71 MB, solutions = 11)
   7600  4419     1003.1800    68     1010.0000      990.7389   195355    1.91%
   7700  4488     1006.2093    66     1010.0000      990.8896   197438    1.89%
   7800  4534     1003.6617    61     1010.0000      991.2918   201209    1.85%
   7900  4591     1007.4687    45     1010.0000      991.4941   204182    1.83%
   8000  4656     1006.1941    50     1010.0000      991.6401   206539    1.82%
   8100  4706        cutoff           1010.0000      991.8207   209299    1.80%
   8200  4764      998.7948    63     1010.0000      992.0913   212356    1.77%
   8300  4827     1007.2443    57     1010.0000      992.3889   215204    1.74%
   8400  4872     1006.5666    46     1010.0000      992.6250   218214    1.72%
   8500  4921     1000.9955    55     1010.0000      992.8196   221289    1.70%
Elapsed time =  25.19 sec. (tree size =  3.10 MB, solutions = 11)
   8600  4976     1007.4326    28     1010.0000      993.2393   224473    1.66%
   8700  5032        cutoff           1010.0000      993.4518   227672    1.64%
   8800  5084     1004.0968    86     1010.0000      993.6452   231149    1.62%
   8900  5122     1005.7720    74     1010.0000      993.8425   234538    1.60%
   9000  5171     1008.1930    47     1010.0000      994.2050   238173    1.56%
   9100  5247     1008.5590    46     1010.0000      994.2579   240557    1.56%
   9200  5279     1005.5605    47     1010.0000      994.4687   243736    1.54%
   9300  5324     1002.2166    58     1010.0000      994.6607   247006    1.52%
   9400  5377     1009.0854    48     1010.0000      994.8540   250016    1.50%
   9500  5391        cutoff           1010.0000      995.2145   253437    1.46%
Elapsed time =  28.20 sec. (tree size =  3.37 MB, solutions = 11)
   9600  5456     1006.2186    74     1010.0000      995.3040   255851    1.46%
   9700  5500     1009.5652    55     1010.0000      995.4693   259040    1.44%
   9800  5520        cutoff           1010.0000      995.7789   262362    1.41%
   9900  5531        cutoff           1010.0000      995.9948   266185    1.39%
  10000  5566     1009.0308    60     1010.0000      996.2297   270549    1.36%
  10100  5598     1009.9013    67     1010.0000      996.5059   274109    1.34%
  10200  5641        cutoff           1010.0000      996.5794   277244    1.33%
  10300  5688     1008.4738    52     1010.0000      996.7535   280213    1.31%
  10400  5701     1003.9539    57     1010.0000      996.8087   284619    1.31%
  10500  5736     1009.4341    60     1010.0000      996.9428   287241    1.29%
Elapsed time =  31.40 sec. (tree size =  3.46 MB, solutions = 11)
  10600  5785     1002.2881    67     1010.0000      997.1274   290548    1.27%
  10700  5813        cutoff           1010.0000      997.2335   293356    1.26%
  10800  5846     1005.1977    56     1010.0000      997.3761   297218    1.25%
  10900  5859     1007.9836    76     1010.0000      997.6686   301207    1.22%
  11000  5704      976.7571    52     1010.0000      997.6686   306197    1.22%
  11100  5493     1001.5758    34     1010.0000      997.6686   309369    1.22%
  11200  5301      991.3993    74     1010.0000      997.6686   312747    1.22%
  11300  5252     1005.1538    74     1010.0000      997.6686   315550    1.22%
  11400  5186      997.7500    66     1010.0000      997.6686   317708    1.22%
  11500  5194     1007.7333    34     1010.0000      997.6686   319449    1.22%
Elapsed time =  43.22 sec. (tree size =  4.54 MB, solutions = 11)
  11600  5111      995.2306    64     1010.0000      997.6686   321984    1.22%
  11700  5084     1008.7497    46     1010.0000      997.6686   324163    1.22%
  11800  5082     1007.4492    12     1010.0000      997.6686   326374    1.22%
  11900  5079     1008.0247    25     1010.0000      997.6686   328153    1.22%
  12000  5066     1008.7523    64     1010.0000      997.6686   330212    1.22%
  12100  5058      995.1947    58     1010.0000      997.6686   332277    1.22%
  12200  5079      995.9617    57     1010.0000      997.6686   334322    1.22%
  12300  5105     1002.6361    55     1010.0000      997.6686   336130    1.22%
  12400  5104      996.9809    82     1010.0000      997.6686   338415    1.22%
  12500  5135     1004.7555    44     1010.0000      997.6686   340149    1.22%
Elapsed time =  46.96 sec. (tree size =  6.53 MB, solutions = 11)
  12600  5155     1004.1527    82     1010.0000      997.6686   342222    1.22%
  12700  5154     1004.2304    44     1010.0000      997.6686   344145    1.22%
  12800  5177     1008.1316    69     1010.0000      997.6686   345921    1.22%
  12900  5202     1006.7983    43     1010.0000      997.6686   347676    1.22%
  13000  5218     1009.7708    42     1010.0000      997.6686   349165    1.22%
  13100  5225     1009.3693    62     1010.0000      997.6686   351149    1.22%
  13200  5237     1003.1584    60     1010.0000      997.6686   353189    1.22%
  13300  5249     1003.1996    46     1010.0000      997.6686   354928    1.22%
  13400  5264     1005.6725    40     1010.0000      997.6686   356835    1.22%
  13500  5278     1009.8111    44     1010.0000      997.6686   358677    1.22%
Elapsed time =  49.91 sec. (tree size = 11.72 MB, solutions = 11)
  13600  5290      997.3920    66     1010.0000      997.6686   360324    1.22%
  13700  5312     1003.0397    56     1010.0000      997.6686   362194    1.22%
  13800  5306     1008.5224    59     1010.0000      997.6686   364000    1.22%
  13900  5309        cutoff           1010.0000      997.6686   366000    1.22%
  14000  5313     1004.2839    67     1010.0000      997.6686   367797    1.22%
  14100  5309     1003.0942    64     1010.0000      997.6686   369869    1.22%
  14200  5321     1004.9100    47     1010.0000      997.6686   371509    1.22%
  14300  5341     1005.4097    38     1010.0000      997.6686   373126    1.22%
  14400  5286     1004.5289    70     1010.0000      997.6686   375660    1.22%
  14500  5271     1007.6791    50     1010.0000      997.6686   377445    1.22%
Elapsed time =  53.02 sec. (tree size = 18.41 MB, solutions = 11)
  14600  5248     1003.3252    57     1010.0000      997.6686   379504    1.22%
  14700  5188     1006.4757    62     1010.0000      997.6686   381622    1.22%
  14800  5184     1007.2085    43     1010.0000      997.6686   383309    1.22%
  14900  5150     1009.8143    39     1010.0000      997.6686   385291    1.22%
  15000  5153     1009.2042    58     1010.0000      997.6686   387118    1.22%
  15100  5131     1005.7181    63     1010.0000      997.6686   389078    1.22%
  15200  5129     1004.4803    39     1010.0000      997.6686   390574    1.22%
  15300  5121     1007.8229    69     1010.0000      997.6686   392677    1.22%
  15400  5113     1002.1999    59     1010.0000      997.6686   394757    1.22%
  15500  5079     1008.7741    21     1010.0000      997.6686   396867    1.22%
Elapsed time =  56.16 sec. (tree size = 21.85 MB, solutions = 11)
  15600  5047     1002.6670    50     1010.0000      997.6686   399281    1.22%
  15700  5049     1001.4680    53     1010.0000      997.6686   401312    1.22%
  15800  5000     1009.6411    59     1010.0000      997.6686   403313    1.22%
  15900  4937     1007.7336    67     1010.0000      997.6686   406647    1.22%
  16000  4882     1003.5564    51     1010.0000      997.6686   408427    1.22%
  16100  4833     1008.9333    70     1010.0000      997.7500   411081    1.21%
  16200  4801        cutoff           1010.0000      997.9957   412894    1.19%
  16300  4759     1007.8998    59     1010.0000      998.2535   414693    1.16%
  16400  4757     1009.3333    29     1010.0000      998.4085   416768    1.15%
  16500  4679     1009.0000    42     1010.0000      998.6535   418964    1.12%
Elapsed time =  59.76 sec. (tree size = 20.62 MB, solutions = 11)
  16600  4636        cutoff           1010.0000      998.9586   420848    1.09%
  16700  4552        cutoff           1010.0000      999.3838   423356    1.05%
  16800  4495        cutoff           1010.0000      999.7320   425605    1.02%
  16900  4361        cutoff           1010.0000     1000.1519   428054    0.98%
  17000  4270     1008.6327    50     1010.0000     1000.4666   429893    0.94%
  17100  4149        cutoff           1010.0000     1000.8598   431519    0.90%
  17200  4096        cutoff           1010.0000     1000.9987   433558    0.89%
  17300  4033     1007.9877    48     1010.0000     1001.2115   435290    0.87%
  17400  3916     1008.8350    14     1010.0000     1001.5839   437137    0.83%
  17500  3821     1004.0892    32     1010.0000     1001.8141   439011    0.81%
Elapsed time =  62.85 sec. (tree size = 19.25 MB, solutions = 11)
  17600  3717        cutoff           1010.0000     1002.0496   440410    0.79%
  17700  3592        cutoff           1010.0000     1002.2445   441841    0.77%
  17800  3503        cutoff           1010.0000     1002.4066   443454    0.75%
  17900  3446        cutoff           1010.0000     1002.5413   445385    0.74%
  18000  3333        cutoff           1010.0000     1002.8007   446816    0.71%
  18100  3215        cutoff           1010.0000     1003.0113   448345    0.69%
  18200  3078        cutoff           1010.0000     1003.2386   449997    0.67%
  18300  2973     1007.9680    60     1010.0000     1003.4214   452301    0.65%
  18400  2815        cutoff           1010.0000     1003.6442   453715    0.63%
  18500  2671        cutoff           1010.0000     1003.8728   455733    0.61%
Elapsed time =  65.46 sec. (tree size = 16.85 MB, solutions = 11)
  18600  2625        cutoff           1010.0000     1004.1197   457794    0.58%
  18700  2590        cutoff           1010.0000     1004.2839   459356    0.57%
  18800  2560     1007.8688    47     1010.0000     1004.4208   461379    0.55%
  18900  2539     1009.7500    10     1010.0000     1004.5393   462860    0.54%
  19000  2454        cutoff           1010.0000     1004.7402   464652    0.52%
  19100  2406        cutoff           1010.0000     1004.9306   466088    0.50%
  19200  2384        cutoff           1010.0000     1005.0462   468047    0.49%
  19300  2335        cutoff           1010.0000     1005.2361   469297    0.47%
  19400  2283     1008.5747    36     1010.0000     1005.3893   470889    0.46%
  19500  2224        cutoff           1010.0000     1005.5514   472290    0.44%
Elapsed time =  67.79 sec. (tree size = 13.07 MB, solutions = 11)
  19600  2140        cutoff           1010.0000     1005.7288   474087    0.42%
  19700  2072        cutoff           1010.0000     1005.9394   475583    0.40%
  19800  1996        cutoff           1010.0000     1006.1146   476951    0.38%
  19900  1902        cutoff           1010.0000     1006.2908   478139    0.37%
  20000  1810        cutoff           1010.0000     1006.4729   479143    0.35%
  20100  1761        cutoff           1010.0000     1006.6059   480236    0.34%
  20200  1671        cutoff           1010.0000     1006.7697   481303    0.32%
  20300  1588        cutoff           1010.0000     1006.9167   482333    0.31%
  20400  1500        cutoff           1010.0000     1007.0923   483567    0.29%
  20500  1424        cutoff           1010.0000     1007.2310   484802    0.27%
Elapsed time =  69.60 sec. (tree size =  7.87 MB, solutions = 11)
  20600  1334        cutoff           1010.0000     1007.3923   485749    0.26%
  20700  1242     1009.9661     6     1010.0000     1007.5577   486752    0.24%
  20800  1153        cutoff           1010.0000     1007.7040   487595    0.23%
  20900  1061        cutoff           1010.0000     1007.8874   488489    0.21%
  21000   980        cutoff           1010.0000     1008.0452   489234    0.19%
  21100   889        cutoff           1010.0000     1008.1783   490025    0.18%
  21200   797        cutoff           1010.0000     1008.3475   490956    0.16%
  21300   706        cutoff           1010.0000     1008.5556   491482    0.14%
  21400   610        cutoff           1010.0000     1008.7138   492004    0.13%
  21500   510        cutoff           1010.0000     1008.8670   492437    0.11%
Elapsed time =  70.93 sec. (tree size =  2.93 MB, solutions = 11)
  21600   410        cutoff           1010.0000     1009.0372   492847    0.10%
  21700   310        cutoff           1010.0000     1009.2160   493192    0.08%
  21800   210        cutoff           1010.0000     1009.4650   493465    0.05%
  21900   110        cutoff           1010.0000     1009.6903   493747    0.03%

Clique cuts applied:  24
Cover cuts applied:  184
Implied bound cuts applied:  114
Flow cuts applied:  11
Mixed integer rounding cuts applied:  28
Zero-half cuts applied:  35
Gomory fractional cuts applied:  9
Lazy constraints applied:  13
Optimal
Lmax: 1010
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 5
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 3
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 5
Job 17 into batch 17
Job 18 into batch 6
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 14
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 25
Job 29 into batch 29
Job 30 into batch 9
Job 31 into batch 0
Job 32 into batch 21
Job 33 into batch 10
Job 34 into batch 34
Job 35 into batch 34
Job 36 into batch 5
Job 37 into batch 20
Job 38 into batch 2
Job 39 into batch 39
Job 40 into batch 40
Job 41 into batch 20
Job 42 into batch 26
Job 43 into batch 29
Job 44 into batch 11
Job 45 into batch 45
Job 46 into batch 21
Job 47 into batch 40
Job 48 into batch 11
Job 49 into batch 49
Job 0:	s=2	p=38	d=91	L=(-53+0-0)=-53=			Pk=38	Total size:10
Job 1:	s=10	p=56	d=94	L=(0+0-0)=0=			Pk=56	Total size:10
Job 2:	s=7	p=79	d=95	L=(78+0-0)=78=			Pk=79	Total size:10
Job 3:	s=9	p=15	d=96	L=(92+0-0)=92=			Pk=15	Total size:10
Job 4:	s=10	p=21	d=98	L=(111+0-0)=111=			Pk=21	Total size:10
Job 5:	s=4	p=27	d=112	L=(124+3-0)=127=			Pk=30	Total size:10
Job 6:	s=1	p=10	d=115	L=(131+4-0)=135=			Pk=12	Total size:8
Job 7:	s=2	p=12	d=116	L=(142+-8-1190)=-1056=			Pk=12	Total size:0
Job 8:	s=7	p=6	d=117	L=(147+-8-0)=139=			Pk=6	Total size:7
Job 9:	s=1	p=33	d=117	L=(180+46-0)=226=			Pk=88	Total size:10
Job 10:	s=6	p=79	d=121	L=(255+46-0)=301=			Pk=79	Total size:9
Job 11:	s=3	p=85	d=137	L=(324+55-0)=379=			Pk=95	Total size:10
Job 12:	s=9	p=30	d=139	L=(352+55-0)=407=			Pk=30	Total size:9
Job 13:	s=1	p=4	d=140	L=(355+51-1190)=-784=			Pk=4	Total size:0
Job 14:	s=7	p=42	d=141	L=(396+51-0)=447=			Pk=42	Total size:10
Job 15:	s=6	p=7	d=143	L=(401+51-0)=452=			Pk=7	Total size:6
Job 16:	s=1	p=27	d=146	L=(425+24-1190)=-741=			Pk=27	Total size:0
Job 17:	s=10	p=16	d=157	L=(430+24-0)=454=			Pk=16	Total size:10
Job 18:	s=7	p=12	d=166	L=(433+12-1190)=-745=			Pk=12	Total size:0
Job 19:	s=9	p=15	d=167	L=(447+12-0)=459=			Pk=15	Total size:9
Job 20:	s=3	p=87	d=170	L=(531+23-0)=554=			Pk=99	Total size:10
Job 21:	s=2	p=46	d=183	L=(564+62--1.5854e-12)=626=			Pk=85	Total size:10
Job 22:	s=10	p=29	d=196	L=(580+62-0)=642=			Pk=29	Total size:10
Job 23:	s=3	p=40	d=197	L=(619+22-1190)=-549=			Pk=40	Total size:0
Job 24:	s=8	p=20	d=201	L=(635+22-0)=657=			Pk=20	Total size:8
Job 25:	s=6	p=38	d=211	L=(663+33-0)=696=			Pk=49	Total size:10
Job 26:	s=2	p=69	d=217	L=(726+35-0)=761=			Pk=72	Total size:10
Job 27:	s=10	p=53	d=220	L=(776+35-0)=811=			Pk=53	Total size:10
Job 28:	s=4	p=49	d=223	L=(822+-14-1190)=-382=			Pk=49	Total size:0
Job 29:	s=3	p=59	d=224	L=(880+-14-0)=866=			Pk=59	Total size:10
Job 30:	s=9	p=88	d=224	L=(968+-102-1190)=-324=			Pk=88	Total size:0
Job 31:	s=8	p=37	d=225	L=(1004+-139-1190)=-325=			Pk=37	Total size:0
Job 32:	s=3	p=85	d=226	L=(1088+-224-1190)=-326=			Pk=85	Total size:0
Job 33:	s=3	p=61	d=232	L=(1143+-285-1190)=-332=			Pk=61	Total size:0
Job 34:	s=3	p=72	d=232	L=(1215+-283-0)=932=			Pk=74	Total size:10
Job 35:	s=7	p=74	d=240	L=(1281+-357-1190)=-266=			Pk=74	Total size:0
Job 36:	s=3	p=30	d=248	L=(1303+-387-1190)=-274=			Pk=30	Total size:0
Job 37:	s=1	p=59	d=277	L=(1333+-446-1190)=-303=			Pk=59	Total size:0
Job 38:	s=3	p=60	d=278	L=(1392+-506-1190)=-304=			Pk=60	Total size:0
Job 39:	s=10	p=84	d=345	L=(1409+-506-0)=903=			Pk=84	Total size:10
Job 40:	s=2	p=75	d=356	L=(1473+-485-0)=988=			Pk=96	Total size:10
Job 41:	s=6	p=99	d=361	L=(1567+-584-1190)=-207=			Pk=99	Total size:0
Job 42:	s=8	p=72	d=370	L=(1630+-656-1190)=-216=			Pk=72	Total size:0
Job 43:	s=7	p=53	d=383	L=(1670+-709-1190)=-229=			Pk=53	Total size:0
Job 44:	s=1	p=89	d=391	L=(1751+-798-1190)=-237=			Pk=89	Total size:0
Job 45:	s=9	p=77	d=416	L=(1803+-798-0)=1005=			Pk=77	Total size:9
Job 46:	s=5	p=83	d=432	L=(1870+-881-1190)=-201=			Pk=83	Total size:0
Job 47:	s=8	p=96	d=461	L=(1937+-977-1190)=-230=			Pk=96	Total size:0
Job 48:	s=6	p=95	d=494	L=(1999+-1072-1190)=-263=			Pk=95	Total size:0
Job 49:	s=10	p=96	d=516	L=(2073+-1072-0)=1001=			Pk=96	Total size:10

0
1.72414
1010
71.89 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-31.csv
109
155
215
293
309
470
474
485
487
500
531
603
614
619
628
633
648
659
672
729
786
792
796
818
863
915
962
963
968
968
980
981
994
1029
1036
1044
1047
1058
1074
1138
1169
1180
1266
1271
1294
1396
1438
1455
1459
1517
Job 0: due 109
Job 1: due 155
Job 2: due 215
Job 3: due 293
Job 4: due 309
Job 5: due 470
Job 6: due 474
Job 7: due 485
Job 8: due 487
Job 9: due 500
Job 10: due 531
Job 11: due 603
Job 12: due 614
Job 13: due 619
Job 14: due 628
Job 15: due 633
Job 16: due 648
Job 17: due 659
Job 18: due 672
Job 19: due 729
Job 20: due 786
Job 21: due 792
Job 22: due 796
Job 23: due 818
Job 24: due 863
Job 25: due 915
Job 26: due 962
Job 27: due 963
Job 28: due 968
Job 29: due 968
Job 30: due 980
Job 31: due 981
Job 32: due 994
Job 33: due 1029
Job 34: due 1036
Job 35: due 1044
Job 36: due 1047
Job 37: due 1058
Job 38: due 1074
Job 39: due 1138
Job 40: due 1169
Job 41: due 1180
Job 42: due 1266
Job 43: due 1271
Job 44: due 1294
Job 45: due 1396
Job 46: due 1438
Job 47: due 1455
Job 48: due 1459
Job 49: due 1517
Ignore all jobs after 50
Lmaxinc before safe moves: 871
Now using unsafety tolerance 0
New Lmaxincnew: 371
Difference: 500
Lmaxinc after safe moves: 137641
Initial solution:
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 6 3 20 7 15 1 24 6 26 27 28 29 30 2 5 33 12 35 36 37 38 39 0 41 0 17 44 1 46 2 3 2 
Updating LmaxLB to -80.3. C=28.7, d=109Updating LmaxLB to -68.2. C=603.8, d=672same duedate: 28
Updating LmaxLB to -56.2. C=924.8, d=981Updating LmaxLB to -54. C=975, d=1029Updating LmaxLB to -0.800049. C=1035.2, d=1036Updating LmaxLB to 4.79993. C=1048.8, d=1044Updating LmaxLB to 37.7999. C=1084.8, d=1047Updating LmaxLB to 77.9999. C=1136, d=1058Lower bound on Lmax based on areas:0
Max Lksingle:871
Max reduction:871
Now adding static psi-2-in-2 dominance rules ...
Added 432 safe move dominance lazy constraints
Added 232 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3108 rows and 1993 columns.
MIP Presolve modified 1752 coefficients.
Aggregator did 8 substitutions.
Reduced MIP has 700 rows, 551 columns, and 4345 nonzeros.
Reduced MIP has 500 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.01 sec.
Clique table members: 1260.
Problem contains 232 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0       57.9121    67                     57.9121      289         
      0     0      131.3245    84                    Cuts: 74      408         
      0     0      165.1495    70                    Cuts: 75      520         
      0     0      175.8945    75                    Cuts: 50      582         
      0     0      183.6852    82                    Cuts: 34      654         
      0     0      186.7158    86                    Cuts: 26      679         
      0     0      188.5780    84                    Cuts: 23      702         
      0     0      189.5854    81                    Cuts: 12      726         
      0     0      189.8214    88                    Cuts: 11      745         
      0     0      189.9605    97                    Cuts: 12      755         
      0     0      190.1178    94                 ZeroHalf: 6      776         
      0     0      190.3410   101                     Cuts: 9      793         
      0     0      190.4613    99                 ZeroHalf: 3      800         
      0     0      190.5444    98                 ZeroHalf: 5      810         
      0     0      190.5754   100                 ZeroHalf: 4      817         
      0     0      190.5912    98                 ZeroHalf: 3      824         
      0     0      190.5912    97                 ZeroHalf: 2      828         
*     0+    0                          346.0000      190.5912      828   44.92%
      0     2      190.5959   100      346.0000      190.9076      828   44.82%
Elapsed time =   0.33 sec. (tree size =  0.00 MB, solutions = 1)
*    30+   30                          309.0000      192.7673     2110   37.62%
*    48    40      integral     0      301.0000      192.7673     2735   35.96%
*    80+   68                          287.0000      192.8362     4221   32.81%
    100    78      211.4871    74      287.0000      198.8599     4751   30.71%
    200   156      272.8672    40      287.0000      200.4954     8400   30.14%
*   205   152      integral     0      283.0000      200.4954     8445   29.15%
*   240+  163                          274.0000      201.1204     9249   26.60%
*   254   168      integral     0      272.0000      201.1204     9493   26.06%
    300   202      237.4478    32      272.0000      204.1862    11463   24.93%
    400   275      232.1353    63      272.0000      208.6345    14205   23.30%
    500   264      263.1435    44      272.0000      249.5055    17423    8.27%
*   533    74      integral     0      270.0000      256.0000    18253    5.19%
*   551    11      integral     0      269.0000      263.2500    18834    2.14%
Elapsed time =   2.66 sec. (tree size =  0.01 MB, solutions = 9)

Clique cuts applied:  8
Cover cuts applied:  26
Implied bound cuts applied:  49
Flow cuts applied:  4
Mixed integer rounding cuts applied:  8
Zero-half cuts applied:  36
Gomory fractional cuts applied:  10
Lazy constraints applied:  19
Optimal
Lmax: 269
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 2
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 1
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 0
Job 22 into batch 15
Job 23 into batch 17
Job 24 into batch 24
Job 25 into batch 0
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 19
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 2
Job 32 into batch 3
Job 33 into batch 33
Job 34 into batch 6
Job 35 into batch 35
Job 36 into batch 18
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 8
Job 41 into batch 41
Job 42 into batch 7
Job 43 into batch 43
Job 44 into batch 44
Job 45 into batch 24
Job 46 into batch 46
Job 47 into batch 44
Job 48 into batch 8
Job 49 into batch 14
Job 0:	s=7	p=41	d=109	L=(-68+0-0)=-68=			Pk=41	Total size:10
Job 1:	s=1	p=29	d=155	L=(-85+1-0)=-84=			Pk=31	Total size:8
Job 2:	s=4	p=97	d=215	L=(-48+1-0)=-47=			Pk=97	Total size:10
Job 3:	s=8	p=57	d=293	L=(-69+1-0)=-68=			Pk=57	Total size:10
Job 4:	s=10	p=95	d=309	L=(10+1-0)=11=			Pk=95	Total size:10
Job 5:	s=5	p=8	d=470	L=(-143+1-0)=-142=			Pk=8	Total size:5
Job 6:	s=3	p=73	d=474	L=(-74+13-0)=-61=			Pk=86	Total size:10
Job 7:	s=8	p=49	d=485	L=(-36+13-0)=-23=			Pk=49	Total size:10
Job 8:	s=8	p=54	d=487	L=(16+13-0)=29=			Pk=54	Total size:10
Job 9:	s=10	p=14	d=500	L=(17+13-0)=30=			Pk=14	Total size:10
Job 10:	s=10	p=8	d=531	L=(-6+13-0)=7=			Pk=8	Total size:10
Job 11:	s=9	p=14	d=603	L=(-64+13-0)=-51=			Pk=14	Total size:9
Job 12:	s=3	p=85	d=614	L=(10+-72-371)=-433=			Pk=85	Total size:0
Job 13:	s=6	p=19	d=619	L=(24+-72-0)=-48=			Pk=19	Total size:6
Job 14:	s=9	p=88	d=628	L=(103+-72-0)=31=			Pk=88	Total size:10
Job 15:	s=6	p=57	d=633	L=(155+-72-0)=83=			Pk=57	Total size:10
Job 16:	s=7	p=31	d=648	L=(171+-103-371)=-303=			Pk=31	Total size:0
Job 17:	s=5	p=79	d=659	L=(239+-103-0)=136=			Pk=79	Total size:10
Job 18:	s=6	p=64	d=672	L=(290+-77-0)=213=			Pk=90	Total size:10
Job 19:	s=1	p=46	d=729	L=(279+-71-0)=208=			Pk=52	Total size:7
Job 20:	s=9	p=75	d=786	L=(297+-71-0)=226=			Pk=75	Total size:9
Job 21:	s=2	p=27	d=792	L=(318+-98-371)=-151=			Pk=27	Total size:0
Job 22:	s=4	p=49	d=796	L=(363+-147-371)=-155=			Pk=49	Total size:0
Job 23:	s=5	p=28	d=818	L=(369+-175-371)=-177=			Pk=28	Total size:0
Job 24:	s=7	p=34	d=863	L=(358+-175-0)=183=			Pk=34	Total size:10
Job 25:	s=1	p=31	d=915	L=(337+-206-371)=-240=			Pk=31	Total size:0
Job 26:	s=7	p=25	d=962	L=(315+-206-0)=109=			Pk=25	Total size:7
Job 27:	s=9	p=46	d=963	L=(360+-206-0)=154=			Pk=46	Total size:9
Job 28:	s=6	p=52	d=968	L=(407+-258-371)=-222=			Pk=52	Total size:0
Job 29:	s=8	p=62	d=968	L=(469+-258-0)=211=			Pk=62	Total size:8
Job 30:	s=10	p=16	d=980	L=(473+-258-0)=215=			Pk=16	Total size:10
Job 31:	s=3	p=91	d=981	L=(563+-349-371)=-157=			Pk=91	Total size:0
Job 32:	s=2	p=6	d=994	L=(556+-355-371)=-170=			Pk=6	Total size:0
Job 33:	s=10	p=49	d=1029	L=(570+-355-0)=215=			Pk=49	Total size:10
Job 34:	s=7	p=86	d=1036	L=(649+-441-371)=-163=			Pk=86	Total size:0
Job 35:	s=8	p=17	d=1044	L=(658+-441-0)=217=			Pk=17	Total size:8
Job 36:	s=4	p=90	d=1047	L=(745+-531-371)=-157=			Pk=90	Total size:0
Job 37:	s=8	p=64	d=1058	L=(798+-531-0)=267=			Pk=64	Total size:8
Job 38:	s=10	p=9	d=1074	L=(791+-531-0)=260=			Pk=9	Total size:10
Job 39:	s=9	p=37	d=1138	L=(764+-531-0)=233=			Pk=37	Total size:9
Job 40:	s=1	p=41	d=1169	L=(774+-572-371)=-169=			Pk=41	Total size:0
Job 41:	s=8	p=25	d=1180	L=(788+-572-0)=216=			Pk=25	Total size:8
Job 42:	s=2	p=37	d=1266	L=(739+-609-371)=-241=			Pk=37	Total size:0
Job 43:	s=5	p=11	d=1271	L=(745+-609-0)=136=			Pk=11	Total size:5
Job 44:	s=8	p=73	d=1294	L=(795+-594-0)=201=			Pk=88	Total size:10
Job 45:	s=3	p=28	d=1396	L=(721+-622-371)=-272=			Pk=28	Total size:0
Job 46:	s=9	p=67	d=1438	L=(746+-622-0)=124=			Pk=67	Total size:9
Job 47:	s=2	p=88	d=1455	L=(817+-710-371)=-264=			Pk=88	Total size:0
Job 48:	s=1	p=47	d=1459	L=(860+-757-371)=-268=			Pk=47	Total size:0
Job 49:	s=1	p=69	d=1517	L=(871+-826-371)=-326=			Pk=69	Total size:0

0
1.51515
269
2.88 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-32.csv
127
162
240
256
277
318
354
452
487
507
507
509
535
555
574
646
656
657
658
666
704
743
788
807
819
874
877
898
922
963
1020
1023
1071
1075
1110
1260
1264
1292
1299
1333
1370
1384
1445
1505
1629
1629
1649
1656
1662
1855
Job 0: due 127
Job 1: due 162
Job 2: due 240
Job 3: due 256
Job 4: due 277
Job 5: due 318
Job 6: due 354
Job 7: due 452
Job 8: due 487
Job 9: due 507
Job 10: due 507
Job 11: due 509
Job 12: due 535
Job 13: due 555
Job 14: due 574
Job 15: due 646
Job 16: due 656
Job 17: due 657
Job 18: due 658
Job 19: due 666
Job 20: due 704
Job 21: due 743
Job 22: due 788
Job 23: due 807
Job 24: due 819
Job 25: due 874
Job 26: due 877
Job 27: due 898
Job 28: due 922
Job 29: due 963
Job 30: due 1020
Job 31: due 1023
Job 32: due 1071
Job 33: due 1075
Job 34: due 1110
Job 35: due 1260
Job 36: due 1264
Job 37: due 1292
Job 38: due 1299
Job 39: due 1333
Job 40: due 1370
Job 41: due 1384
Job 42: due 1445
Job 43: due 1505
Job 44: due 1629
Job 45: due 1629
Job 46: due 1649
Job 47: due 1656
Job 48: due 1662
Job 49: due 1855
Ignore all jobs after 42
Lmaxinc before safe moves: 1102
Now using unsafety tolerance 0
New Lmaxincnew: 483
Difference: 619
Lmaxinc after safe moves: 233289
Initial solution:
0 1 2 3 4 5 6 7 4 9 10 11 12 13 12 15 2 17 15 19 20 21 22 23 17 25 26 10 12 29 2 31 32 33 34 5 36 11 38 22 40 41 
Updating LmaxLB to -106. C=21, d=127same duedate: 9
Updating LmaxLB to -50.1. C=615.9, d=666Updating LmaxLB to -44.1. C=698.9, d=743Updating LmaxLB to -19.3. C=787.7, d=807Updating LmaxLB to -19.1. C=854.9, d=874Updating LmaxLB to 38.7. C=915.7, d=877Updating LmaxLB to 54.8. C=952.8, d=898Updating LmaxLB to 60. C=1023, d=963Updating LmaxLB to 69.2. C=1092.2, d=1023Updating LmaxLB to 99.5. C=1170.5, d=1071Updating LmaxLB to 109.9. C=1184.9, d=1075Updating LmaxLB to 146.9. C=1256.9, d=1110Updating LmaxLB to 151.3. C=1535.3, d=1384Lower bound on Lmax based on areas:0
Max Lksingle:1102
Max reduction:1102
Now adding static psi-2-in-2 dominance rules ...
Added 426 safe move dominance lazy constraints
Added 141 safe move requirement lazy constraints
Tried aggregator 3 times.
MIP Presolve eliminated 2395 rows and 1465 columns.
MIP Presolve modified 1312 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 351 rows, 339 columns, and 2441 nonzeros.
Reduced MIP has 296 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.01 sec.
Probing time =    0.01 sec.
Clique table members: 1258.
Problem contains 141 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.00 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      246.4295    64                    246.4295      258         
      0     0      274.2562    71                    Cuts: 62      331         
*     0+    0                          396.0000      274.2562      331   30.74%
      0     0      288.8005    70      396.0000      Cuts: 48      385   27.07%
*     0+    0                          384.0000      288.8005      385   24.79%
      0     0      290.5202    63      384.0000      Cuts: 35      405   24.34%
*     0+    0                          378.0000      290.5202      405   23.14%
      0     0      291.2146    71      378.0000      Cuts: 18      419   22.96%
      0     0      291.9002    63      378.0000      Cuts: 14      439   22.78%
      0     0      292.1186    70      378.0000      Cuts: 24      451   22.72%
      0     0      292.6737    69      378.0000      Cuts: 19      467   22.57%
      0     0      292.9678    69      378.0000      Cuts: 11      479   22.50%
*     0+    0                          339.0000      292.9678      479   13.58%
      0     0      293.1331    77      339.0000      Cuts: 14      490   13.53%
      0     0      293.1846    77      339.0000   Impl Bds: 7      500   13.51%
      0     0      293.3458    80      339.0000  Impl Bds: 10      508   13.47%
*     0+    0                          337.0000      293.3458      508   12.95%
*     0+    0                          336.0000      293.3458      508   12.69%
      0     2      293.3458    80      336.0000      293.5100      508   12.65%
Elapsed time =   0.16 sec. (tree size =  0.00 MB, solutions = 6)
    100    65      312.1249    58      336.0000      303.7068     3218    9.61%
*   180+   77                          327.0000      307.3582     5739    6.01%
*   185    79      integral     0      326.0000      307.3582     5832    5.72%
    200    81      318.1082    62      326.0000      308.7654     6196    5.29%
*   250+   91                          325.0000      310.0160     7411    4.61%
*   263    94      integral     0      324.0000      310.2156     7589    4.25%
    300    97      321.2209    58      324.0000      312.0939     8380    3.67%
    400    90        cutoff            324.0000      316.1726    10664    2.42%
    500    58      322.6313    30      324.0000      319.3368    12126    1.44%

Clique cuts applied:  3
Cover cuts applied:  36
Implied bound cuts applied:  221
Flow cuts applied:  2
Zero-half cuts applied:  7
Gomory fractional cuts applied:  7
Lazy constraints applied:  2
Optimal
Lmax: 324
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 8
Job 12 into batch 12
Job 13 into batch 10
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 10
Job 17 into batch 17
Job 18 into batch 15
Job 19 into batch 19
Job 20 into batch 17
Job 21 into batch 21
Job 22 into batch 4
Job 23 into batch 14
Job 24 into batch 24
Job 25 into batch 12
Job 26 into batch 26
Job 27 into batch 27
Job 28 into batch 2
Job 29 into batch 29
Job 30 into batch 26
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 5
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 29
Job 38 into batch 38
Job 39 into batch 38
Job 40 into batch 40
Job 41 into batch 41
Job 0:	s=7	p=30	d=127	L=(-97+0-0)=-97=			Pk=30	Total size:7
Job 1:	s=7	p=30	d=162	L=(-102+0-0)=-102=			Pk=30	Total size:7
Job 2:	s=7	p=74	d=240	L=(-106+5-0)=-101=			Pk=80	Total size:10
Job 3:	s=9	p=35	d=256	L=(-87+5-0)=-82=			Pk=35	Total size:9
Job 4:	s=6	p=56	d=277	L=(-52+5-0)=-47=			Pk=56	Total size:10
Job 5:	s=2	p=86	d=318	L=(-7+9-0)=2=			Pk=90	Total size:10
Job 6:	s=10	p=28	d=354	L=(-15+9-0)=-6=			Pk=28	Total size:10
Job 7:	s=9	p=48	d=452	L=(-65+9-0)=-56=			Pk=48	Total size:9
Job 8:	s=3	p=54	d=487	L=(-46+9-0)=-37=			Pk=54	Total size:10
Job 9:	s=10	p=43	d=507	L=(-23+9-0)=-14=			Pk=43	Total size:10
Job 10:	s=2	p=52	d=507	L=(29+14-0)=43=			Pk=57	Total size:10
Job 11:	s=7	p=54	d=509	L=(81+-40-483)=-442=			Pk=54	Total size:0
Job 12:	s=3	p=91	d=535	L=(146+-40-0)=106=			Pk=91	Total size:10
Job 13:	s=7	p=57	d=555	L=(183+-97-483)=-397=			Pk=57	Total size:0
Job 14:	s=2	p=91	d=574	L=(255+-96-0)=159=			Pk=92	Total size:10
Job 15:	s=6	p=95	d=646	L=(278+-96-0)=182=			Pk=95	Total size:10
Job 16:	s=1	p=56	d=656	L=(324+-152-483)=-311=			Pk=56	Total size:0
Job 17:	s=5	p=10	d=657	L=(333+-150-0)=183=			Pk=12	Total size:10
Job 18:	s=4	p=77	d=658	L=(409+-227-483)=-301=			Pk=77	Total size:0
Job 19:	s=9	p=86	d=666	L=(487+-227-0)=260=			Pk=86	Total size:9
Job 20:	s=5	p=12	d=704	L=(461+-239-483)=-261=			Pk=12	Total size:0
Job 21:	s=10	p=77	d=743	L=(499+-239-0)=260=			Pk=77	Total size:10
Job 22:	s=4	p=38	d=788	L=(492+-277-483)=-268=			Pk=38	Total size:0
Job 23:	s=8	p=92	d=807	L=(565+-369-483)=-287=			Pk=92	Total size:0
Job 24:	s=5	p=7	d=819	L=(560+-369-0)=191=			Pk=7	Total size:5
Job 25:	s=7	p=91	d=874	L=(596+-460-483)=-347=			Pk=91	Total size:0
Job 26:	s=8	p=76	d=877	L=(669+-460-0)=209=			Pk=76	Total size:10
Job 27:	s=7	p=53	d=898	L=(701+-460-0)=241=			Pk=53	Total size:7
Job 28:	s=3	p=80	d=922	L=(757+-540-483)=-266=			Pk=80	Total size:0
Job 29:	s=7	p=66	d=963	L=(782+-540-0)=242=			Pk=66	Total size:10
Job 30:	s=2	p=70	d=1020	L=(795+-610-483)=-298=			Pk=70	Total size:0
Job 31:	s=8	p=69	d=1023	L=(861+-610-0)=251=			Pk=69	Total size:8
Job 32:	s=9	p=87	d=1071	L=(900+-610-0)=290=			Pk=87	Total size:9
Job 33:	s=8	p=18	d=1075	L=(914+-610-0)=304=			Pk=18	Total size:8
Job 34:	s=8	p=90	d=1110	L=(969+-700-483)=-214=			Pk=90	Total size:0
Job 35:	s=8	p=87	d=1260	L=(906+-700-0)=206=			Pk=87	Total size:8
Job 36:	s=10	p=59	d=1264	L=(961+-700-0)=261=			Pk=59	Total size:10
Job 37:	s=3	p=54	d=1292	L=(987+-754-483)=-250=			Pk=54	Total size:0
Job 38:	s=4	p=40	d=1299	L=(1020+-754-0)=266=			Pk=40	Total size:8
Job 39:	s=4	p=25	d=1333	L=(1011+-779-483)=-251=			Pk=25	Total size:0
Job 40:	s=8	p=82	d=1370	L=(1056+-779-0)=277=			Pk=82	Total size:8
Job 41:	s=7	p=60	d=1384	L=(1102+-779-0)=323=			Pk=60	Total size:7

0
1.44828
324
0.94 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-33.csv
25
31
32
33
35
35
50
56
72
79
84
93
96
100
102
104
110
111
118
129
143
148
153
164
164
169
170
180
188
197
197
199
208
211
224
232
234
244
248
253
254
257
279
281
284
286
287
295
298
317
Job 0: due 25
Job 1: due 31
Job 2: due 32
Job 3: due 33
Job 4: due 35
Job 5: due 35
Job 6: due 50
Job 7: due 56
Job 8: due 72
Job 9: due 79
Job 10: due 84
Job 11: due 93
Job 12: due 96
Job 13: due 100
Job 14: due 102
Job 15: due 104
Job 16: due 110
Job 17: due 111
Job 18: due 118
Job 19: due 129
Job 20: due 143
Job 21: due 148
Job 22: due 153
Job 23: due 164
Job 24: due 164
Job 25: due 169
Job 26: due 170
Job 27: due 180
Job 28: due 188
Job 29: due 197
Job 30: due 197
Job 31: due 199
Job 32: due 208
Job 33: due 211
Job 34: due 224
Job 35: due 232
Job 36: due 234
Job 37: due 244
Job 38: due 248
Job 39: due 253
Job 40: due 254
Job 41: due 257
Job 42: due 279
Job 43: due 281
Job 44: due 284
Job 45: due 286
Job 46: due 287
Job 47: due 295
Job 48: due 298
Job 49: due 317
Ignore all jobs after 50
Lmaxinc before safe moves: 2075
Now using unsafety tolerance 0
New Lmaxincnew: 1253
Difference: 822
Lmaxinc after safe moves: 1.57001e+06
Initial solution:
0 0 2 3 2 5 2 0 8 9 10 11 12 13 14 15 16 17 10 19 15 15 10 16 24 25 26 27 28 29 30 31 27 33 34 26 36 27 19 39 40 41 42 19 41 45 46 19 19 41 
Updating LmaxLB to -24. C=1, d=25Updating LmaxLB to -13.5. C=19.5, d=33same duedate: 4
Updating LmaxLB to 3.9. C=38.9, d=35Updating LmaxLB to 17.9. C=127.9, d=110Updating LmaxLB to 67.9. C=178.9, d=111Updating LmaxLB to 80.8. C=209.8, d=129Updating LmaxLB to 81.8. C=224.8, d=143same duedate: 23
Updating LmaxLB to 164.2. C=328.2, d=164Updating LmaxLB to 214.1. C=383.1, d=169Updating LmaxLB to 255.6. C=425.6, d=170Updating LmaxLB to 265.1. C=445.1, d=180Updating LmaxLB to 313.9. C=501.9, d=188same duedate: 29
Updating LmaxLB to 400.8. C=597.8, d=197Updating LmaxLB to 453.2. C=652.2, d=199Updating LmaxLB to 456. C=664, d=208Updating LmaxLB to 501. C=712, d=211Updating LmaxLB to 524. C=748, d=224Updating LmaxLB to 544. C=776, d=232Updating LmaxLB to 587. C=821, d=234Updating LmaxLB to 608.5. C=852.5, d=244Updating LmaxLB to 622.5. C=870.5, d=248Updating LmaxLB to 660.9. C=913.9, d=253Updating LmaxLB to 735.5. C=989.5, d=254Updating LmaxLB to 761.6. C=1018.6, d=257Updating LmaxLB to 797.7. C=1076.7, d=279Updating LmaxLB to 804.3. C=1085.3, d=281Updating LmaxLB to 819.9. C=1103.9, d=284Updating LmaxLB to 901.9. C=1187.9, d=286Updating LmaxLB to 975.3. C=1262.3, d=287Updating LmaxLB to 975.6. C=1270.6, d=295Updating LmaxLB to 999.6. C=1297.6, d=298Updating LmaxLB to 1008.5. C=1325.5, d=317Lower bound on Lmax based on areas:0
Max Lksingle:2075
Max reduction:2075
Now adding static psi-2-in-2 dominance rules ...
Added 59 safe move dominance lazy constraints
Added 84 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2899 rows and 1944 columns.
MIP Presolve modified 2542 coefficients.
Aggregator did 4 substitutions.
Reduced MIP has 915 rows, 604 columns, and 3204 nonzeros.
Reduced MIP has 553 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1103.
Problem contains 84 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      612.8652   186                    612.8652      576         
      0     0      667.8610   180                   Cuts: 163      796         
      0     0      738.4487   179                   Cuts: 192     1053         
      0     0      759.4957   189                   Cuts: 175     1219         
      0     0      767.5754   196                   Cuts: 108     1296         
      0     0      770.5473   207                    Cuts: 95     1353         
      0     0      771.8786   202                    Cuts: 81     1411         
      0     0      773.6275   209                    Cuts: 78     1492         
      0     0      775.9465   199                    Cuts: 56     1540         
      0     0      778.4306   204                    Cuts: 80     1591         
      0     0      779.8871   188                    Cuts: 83     1648         
      0     0      781.2437   199                    Cuts: 64     1691         
      0     0      782.2264   207                   Cuts: 102     1732         
      0     0      782.3718   199                Impl Bds: 31     1748         
      0     0      782.5473   198                Impl Bds: 22     1761         
      0     0      782.5627   210                Impl Bds: 14     1769         
      0     0      782.5640   209                 Impl Bds: 6     1770         
      0     2      782.5640   209                    782.5640     1770         
Elapsed time =   0.73 sec. (tree size =  0.00 MB, solutions = 0)
*    70+   70                         1226.0000      783.8862     8186   36.06%
    100    94      842.1773   142     1226.0000      783.9537     9965   36.06%
    200   185      984.4768   112     1226.0000      787.0741    19599   35.80%
    300   281     1156.0504    50     1226.0000      787.3426    26828   35.78%
    400   378     1186.1110    41     1226.0000      787.7902    32643   35.74%
    500   468      962.7124   117     1226.0000      788.0028    41471   35.73%
*   539+  337                         1225.0000     1003.1555    44534   18.11%
*   539+  224                         1208.0000     1005.1906    44585   16.79%
*   539+  149                         1202.0000     1009.2474    44852   16.04%
*   549+  104                         1172.0000     1011.1968    45393   13.72%
    600   133     1077.7516    76     1172.0000     1011.1968    47658   13.72%
    700   189     1113.8158    15     1172.0000     1011.1968    49502   13.72%
*   730+  186                         1171.0000     1011.1968    50056   13.65%
*   730+  184                         1169.0000     1011.1968    50056   13.50%
    800   248     1152.8188    53     1169.0000     1013.1985    52786   13.33%
    900   338     1131.1358    72     1169.0000     1014.7004    56882   13.20%
   1000   435     1114.6515    69     1169.0000     1016.4611    60661   13.05%
Elapsed time =   9.07 sec. (tree size =  0.27 MB, solutions = 7)
   1100   531     1108.6487    74     1169.0000     1016.5716    63412   13.04%
   1200   625     1105.2976    86     1169.0000     1019.1647    67232   12.82%
   1300   721     1151.8089    53     1169.0000     1019.9559    71264   12.75%
*  1379+  624                         1137.0000     1020.5153    74381   10.24%
   1400   641     1087.9588    97     1137.0000     1023.7673    75221    9.96%
   1500   731     1121.8427    60     1137.0000     1025.2830    79437    9.83%
*  1539+  733                         1133.0000     1025.6970    81077    9.47%
   1600   792     1126.0629    51     1133.0000     1025.6970    83233    9.47%
*  1639+  816                         1132.0000     1026.7807    84846    9.29%
   1700   875     1113.2926    71     1132.0000     1029.6345    87599    9.04%
   1800   966     1109.6374    76     1132.0000     1034.1577    92528    8.64%
   1900  1051     1084.3579    80     1132.0000     1037.2203    98541    8.37%
   2000  1141     1114.2164    66     1132.0000     1037.6202   104190    8.34%
Elapsed time =  13.61 sec. (tree size =  0.62 MB, solutions = 10)
*  2095  1062      integral     0     1122.0000     1039.3217   108484    7.37%
   2100  1067     1086.3632    87     1122.0000     1040.1882   109056    7.29%
   2200  1146     1105.5296    81     1122.0000     1041.6106   114803    7.16%
   2300  1236     1109.1473    86     1122.0000     1042.3860   119830    7.10%
   2400  1320     1101.0452    31     1122.0000     1043.4204   125123    7.00%
   2500  1400        cutoff           1122.0000     1044.1630   128872    6.94%
   2600  1486     1118.4645    27     1122.0000     1044.6717   131851    6.89%
   2700  1557     1102.1137    55     1122.0000     1046.2667   137557    6.75%
   2800  1638     1119.9902    76     1122.0000     1047.9704   143199    6.60%
   2900  1712     1080.9014    78     1122.0000     1049.2396   147238    6.48%
Elapsed time =  17.71 sec. (tree size =  0.89 MB, solutions = 11)
   3000  1792     1106.5408    72     1122.0000     1049.7869   152847    6.44%
   3100  1862     1119.3440    69     1122.0000     1050.8607   159541    6.34%
   3200  1941     1116.7946    29     1122.0000     1051.0328   162144    6.33%
   3300  2019     1112.5275    57     1122.0000     1052.4478   167376    6.20%
   3400  2084        cutoff           1122.0000     1053.9104   173304    6.07%
   3500  2172     1115.6542    35     1122.0000     1054.7214   176970    6.00%
   3600  2242     1093.9679    73     1122.0000     1055.4094   182613    5.93%
   3700  2303        cutoff           1122.0000     1057.3014   189138    5.77%
   3800  2384     1094.3914    85     1122.0000     1057.7331   192393    5.73%
   3900  2469     1121.5932    31     1122.0000     1058.0292   196819    5.70%
Elapsed time =  22.31 sec. (tree size =  1.32 MB, solutions = 11)
   4000  2543     1111.2976    72     1122.0000     1058.5183   202611    5.66%
   4100  2612     1100.3443    65     1122.0000     1058.8681   208050    5.63%
   4200  2690     1113.9140    81     1122.0000     1059.4295   211428    5.58%
   4300  2766     1113.1531    65     1122.0000     1059.6616   216696    5.56%
   4400  2848     1113.0860    68     1122.0000     1059.9590   220319    5.53%
   4500  2913     1109.8094    78     1122.0000     1060.8820   227446    5.45%
   4600  2986     1121.0959   104     1122.0000     1061.8221   233971    5.36%
   4700  3051     1092.1396    80     1122.0000     1063.1458   240377    5.25%
   4800  3123     1105.3722    82     1122.0000     1063.6547   246731    5.20%
   4900  3209     1119.6382    64     1122.0000     1064.0942   250819    5.16%
Elapsed time =  27.34 sec. (tree size =  1.69 MB, solutions = 11)
   5000  3279     1113.7467    82     1122.0000     1064.6747   257122    5.11%
   5100  3333     1118.3724    79     1122.0000     1065.7931   264372    5.01%
   5200  3396        cutoff           1122.0000     1066.4884   268552    4.95%
   5300  3449        cutoff           1122.0000     1067.2772   275544    4.88%
   5400  3507     1105.7015    89     1122.0000     1067.7870   282013    4.83%
*  5496  3194      integral     0     1118.0000     1068.2036   286598    4.45%
   5500  3198     1094.9501    73     1118.0000     1068.2566   286978    4.45%
   5600  3247     1115.1061    80     1118.0000     1068.9972   294511    4.38%
   5700  3277     1114.7307    84     1118.0000     1069.7803   300023    4.31%
   5800  3345     1101.6889    75     1118.0000     1070.2629   305420    4.27%
Elapsed time =  32.71 sec. (tree size =  1.85 MB, solutions = 12)
   5900  3399     1109.6694    58     1118.0000     1071.1960   311478    4.19%
   6000  3460     1110.3373    66     1118.0000     1071.4320   316851    4.17%
   6100  3518     1079.0365    86     1118.0000     1071.8626   323133    4.13%
   6200  3582        cutoff           1118.0000     1072.5193   329336    4.07%
   6300  3646     1112.5310    24     1118.0000     1073.1634   334807    4.01%
   6400  3733     1110.7138    62     1118.0000     1073.3705   337986    3.99%
   6500  3791        cutoff           1118.0000     1074.3285   343254    3.91%
   6600  3865     1096.2314    93     1118.0000     1074.6529   348342    3.88%
   6700  3923        cutoff           1118.0000     1075.0478   354468    3.84%
   6800  3978     1115.2000    31     1118.0000     1076.2590   361034    3.73%
Elapsed time =  37.35 sec. (tree size =  2.28 MB, solutions = 12)
   6900  4012        cutoff           1118.0000     1076.9273   368482    3.67%
   7000  4083     1114.4497    19     1118.0000     1077.3137   372938    3.64%
   7100  4131     1109.9729    60     1118.0000     1077.7953   379560    3.60%
   7200  4180        cutoff           1118.0000     1078.1474   386032    3.56%
   7300  4236     1096.4111    77     1118.0000     1078.4885   392391    3.53%
   7400  4308     1094.0825    72     1118.0000     1078.7283   398056    3.51%
   7500  4344     1116.1500    71     1118.0000     1079.4561   404529    3.45%
   7600  4389     1107.3251    76     1118.0000     1080.2982   411897    3.37%
   7700  4453     1117.2472    61     1118.0000     1080.5462   416807    3.35%
   7800  4533     1104.8595    52     1118.0000     1080.7422   420324    3.33%
Elapsed time =  43.57 sec. (tree size =  2.71 MB, solutions = 12)
   7900  4594     1116.6726    49     1118.0000     1081.2248   426285    3.29%
   8000  4657     1108.3609    74     1118.0000     1081.4025   432121    3.27%
   8100  4695     1111.7123    63     1118.0000     1082.1757   438344    3.20%
   8200  4750     1113.0649    85     1118.0000     1082.4188   443051    3.18%
   8300  4817     1107.8172    51     1118.0000     1082.7495   448061    3.15%
   8400  4875     1108.2932    64     1118.0000     1083.2455   453452    3.11%
   8500  4939     1116.4524    29     1118.0000     1083.3784   457807    3.10%
   8600  5004        cutoff           1118.0000     1083.6163   461669    3.08%
   8700  5092     1111.2295    39     1118.0000     1083.8352   465213    3.06%
   8800  5157     1110.9096    41     1118.0000     1084.0601   470186    3.04%
Elapsed time =  48.03 sec. (tree size =  3.01 MB, solutions = 12)
   8900  5208        cutoff           1118.0000     1084.2962   475435    3.01%
   9000  5251     1100.3112    73     1118.0000     1084.7020   482674    2.98%
   9100  5297     1093.8522    67     1118.0000     1085.0255   489512    2.95%
   9200  5352     1116.9943    30     1118.0000     1085.4985   495595    2.91%
   9300  5395     1108.7104    59     1118.0000     1085.9071   502778    2.87%
   9400  5433        cutoff           1118.0000     1086.3748   508626    2.83%
   9500  5494     1106.8599    65     1118.0000     1086.6376   515100    2.81%
   9600  5530        cutoff           1118.0000     1086.9309   520385    2.78%
   9700  5574     1113.6381    71     1118.0000     1087.2826   527359    2.75%
   9800  5635     1117.7048    49     1118.0000     1087.4867   531142    2.73%
Elapsed time =  52.85 sec. (tree size =  3.30 MB, solutions = 12)
   9900  5710     1104.1406    50     1118.0000     1087.6699   535343    2.71%
  10000  5780     1095.0351    83     1118.0000     1087.8084   539535    2.70%
  10100  5843        cutoff           1118.0000     1087.9251   543509    2.69%
  10200  5891        cutoff           1118.0000     1088.1635   549821    2.67%
  10300  5958     1098.5005    77     1118.0000     1088.2941   554210    2.66%
  10400  6017     1107.8470    80     1118.0000     1088.3908   559005    2.65%
  10500  6104     1113.9956    33     1118.0000     1088.4628   562593    2.64%
  10600  6125        cutoff           1118.0000     1089.0263   569042    2.59%
  10700  6199     1116.6843    35     1118.0000     1089.1294   572807    2.58%
  10800  6237     1101.3233    79     1118.0000     1089.5159   578441    2.55%
Elapsed time =  57.07 sec. (tree size =  3.61 MB, solutions = 12)
  10900  6301     1093.0662    70     1118.0000     1089.6358   583422    2.54%
  11000  6349     1103.6096    50     1118.0000     1089.7605   588947    2.53%
  11100  6399     1117.7438    53     1118.0000     1090.0425   593911    2.50%
  11200  6464     1105.7564    62     1118.0000     1090.3016   599034    2.48%
* 11249+ 6193                         1117.0000     1090.3950   601202    2.38%
  11300  6193        cutoff           1117.0000     1090.6141   604738    2.36%
  11400  6253     1102.3493    77     1117.0000     1090.7217   610314    2.35%
  11500  6302        cutoff           1117.0000     1090.9564   615048    2.33%
  11600  6365     1106.7392    58     1117.0000     1091.0847   620412    2.32%
  11700  6409        cutoff           1117.0000     1091.2741   625963    2.30%
  11800  6470     1109.9345    73     1117.0000     1091.4296   630121    2.29%
Elapsed time =  64.57 sec. (tree size =  3.70 MB, solutions = 13)
  11900  6532     1106.4236    53     1117.0000     1091.5721   633121    2.28%
  12000  6566        cutoff           1117.0000     1091.8881   639154    2.25%
  12100  6612     1111.3081    40     1117.0000     1092.1452   643612    2.23%
  12200  6685     1113.6354    18     1117.0000     1092.2230   647107    2.22%
  12300  6752        cutoff           1117.0000     1092.3936   650721    2.20%
  12400  6831     1113.7880    48     1117.0000     1092.4959   654514    2.19%
  12500  6871        cutoff           1117.0000     1092.6630   658096    2.18%
  12600  6935        cutoff           1117.0000     1092.7587   663010    2.17%
  12700  6992     1100.0288    58     1117.0000     1092.8781   666950    2.16%
  12800  7038     1105.5158    73     1117.0000     1093.0268   671629    2.15%
Elapsed time =  68.15 sec. (tree size =  3.97 MB, solutions = 13)
  12900  7105     1100.0927    59     1117.0000     1093.1015   674779    2.14%
  13000  7123        cutoff           1117.0000     1093.3460   680882    2.12%
  13100  7182     1101.7836    58     1117.0000     1093.4458   685781    2.11%
  13200  7238        cutoff           1117.0000     1093.5673   690399    2.10%
  13300  7305     1111.6511    54     1117.0000     1093.6867   694698    2.09%
  13400  7358     1099.4726    78     1117.0000     1093.7596   699639    2.08%
  13500  7408     1110.2002    24     1117.0000     1093.9181   705084    2.07%
  13600  7455     1113.7157    46     1117.0000     1094.0917   708603    2.05%
  13700  7518        cutoff           1117.0000     1094.1589   713220    2.04%
  13800  7541     1116.8062    85     1117.0000     1094.4015   719264    2.02%
Elapsed time =  71.93 sec. (tree size =  4.23 MB, solutions = 13)
  13900  7595     1114.7255    47     1117.0000     1094.4757   722822    2.02%
  14000  7642     1106.4379    40     1117.0000     1094.6214   727360    2.00%
  14100  7711     1102.7431    69     1117.0000     1094.7041   731564    2.00%
  14200  7778        cutoff           1117.0000     1094.8132   735823    1.99%
  14300  7819        cutoff           1117.0000     1094.9986   740874    1.97%
  14400  7840        cutoff           1117.0000     1095.1406   746659    1.96%
  14500  7899     1105.2031    60     1117.0000     1095.2528   750589    1.95%
  14600  7933     1113.9895    27     1117.0000     1095.4034   755666    1.93%
  14700  7995        cutoff           1117.0000     1095.4565   758781    1.93%
  14800  8071     1106.6467    41     1117.0000     1095.5013   762162    1.92%
Elapsed time =  75.37 sec. (tree size =  4.48 MB, solutions = 13)
  14900  8142     1100.1712    52     1117.0000     1095.5745   764773    1.92%
  15000  8223        cutoff           1117.0000     1095.5871   767598    1.92%
  15100  8246     1108.7211    59     1117.0000     1095.7615   774377    1.90%
  15200  8298     1113.5539    81     1117.0000     1095.8635   777747    1.89%
  15300  8361     1107.4837    38     1117.0000     1095.9347   781501    1.89%
  15400  8423        cutoff           1117.0000     1096.0048   784901    1.88%
  15500  8488     1103.9832    68     1117.0000     1096.1254   788516    1.87%
  15600  8527     1109.0171    79     1117.0000     1096.2318   793820    1.86%
  15700  8578     1108.0370    84     1117.0000     1096.3291   797626    1.85%
  15800  8652     1106.0518    34     1117.0000     1096.3707   800906    1.85%
Elapsed time =  78.88 sec. (tree size =  4.98 MB, solutions = 13)
  15900  8707     1103.4368    48     1117.0000     1096.4318   805002    1.84%
  16000  8787     1108.3709    57     1117.0000     1096.4485   807459    1.84%
  16100  8863     1111.6538    68     1117.0000     1096.4786   809828    1.84%
  16200  8933     1105.6315    57     1117.0000     1096.5142   812755    1.83%
  16300  9008     1098.5391    84     1117.0000     1096.5352   815634    1.83%
  16400  9092        cutoff           1117.0000     1096.5547   818278    1.83%
  16500  9177     1115.3333    13     1117.0000     1096.5872   821916    1.83%
  16600  9236     1099.6992    73     1117.0000     1096.6326   825766    1.82%
  16700  9295     1105.3071    49     1117.0000     1096.7086   829685    1.82%
  16800  9339     1112.7517    33     1117.0000     1096.7800   833489    1.81%
Elapsed time =  81.76 sec. (tree size =  5.32 MB, solutions = 13)
  16900  9410     1101.3532    44     1117.0000     1096.8010   836260    1.81%
  17000  9478     1108.8283    57     1117.0000     1096.8630   840641    1.80%
  17100  9527        cutoff           1117.0000     1096.9395   844631    1.80%
  17200  9548     1104.6829    85     1117.0000     1097.1127   849514    1.78%
  17300  9599     1115.1929    30     1117.0000     1097.1892   853351    1.77%
  17400  9612        cutoff           1117.0000     1097.3138   858536    1.76%
  17500  9621        cutoff           1117.0000     1097.5043   864382    1.75%
  17600  9652     1114.4971    20     1117.0000     1097.6189   869822    1.74%
  17700  9708        cutoff           1117.0000     1097.6519   872699    1.73%
  17800  9742     1115.8365    45     1117.0000     1097.7991   878124    1.72%
Elapsed time =  85.21 sec. (tree size =  5.54 MB, solutions = 13)
  17900  9759        cutoff           1117.0000     1097.9081   883039    1.71%
  18000  9820     1112.0496    66     1117.0000     1097.9393   887114    1.71%
  18100  9896     1111.7922    38     1117.0000     1097.9623   890197    1.70%
  18200  9936     1109.6684    44     1117.0000     1098.0443   893985    1.70%
  18300  9989     1112.2306    49     1117.0000     1098.1247   898413    1.69%
  18400 10037        cutoff           1117.0000     1098.1705   901799    1.69%
  18500 10078     1116.8397    13     1117.0000     1098.2523   905487    1.68%
  18600 10135        cutoff           1117.0000     1098.3179   909879    1.67%
  18700 10195     1107.9305    63     1117.0000     1098.3898   914306    1.67%
  18800 10243     1115.1089    27     1117.0000     1098.4633   917221    1.66%
Elapsed time =  88.38 sec. (tree size =  5.80 MB, solutions = 13)
  18900 10301     1116.0680    55     1117.0000     1098.5114   920296    1.66%
  19000 10345     1113.3333    10     1117.0000     1098.5872   924830    1.65%
  19100 10407        cutoff           1117.0000     1098.6189   928069    1.65%
  19200 10471     1115.2353     6     1117.0000     1098.6369   931076    1.64%
  19300 10523     1113.3333    18     1117.0000     1098.6859   933992    1.64%
  19400 10551     1108.1176    25     1117.0000     1098.7909   938370    1.63%
  19500 10591        cutoff           1117.0000     1098.8769   942006    1.62%
  19600 10630     1114.8838    40     1117.0000     1099.0224   946646    1.61%
  19700 10666     1116.6223    62     1117.0000     1099.1397   950845    1.60%
  19800 10712     1103.6269    64     1117.0000     1099.2243   954585    1.59%
Elapsed time =  91.31 sec. (tree size =  6.06 MB, solutions = 13)
  19900 10767     1113.9199    59     1117.0000     1099.2741   958192    1.59%
  20000 10820     1101.9201    64     1117.0000     1099.3155   962566    1.58%
  20100 10865     1108.0858    60     1117.0000     1099.3837   966820    1.58%
  20200 10915        cutoff           1117.0000     1099.4190   971184    1.57%
  20300 10963     1114.3899    62     1117.0000     1099.4466   976717    1.57%
  20400 11020        cutoff           1117.0000     1099.4990   980063    1.57%
  20500 11094     1107.0667    50     1117.0000     1099.5276   983756    1.56%
  20600 11151     1106.7342    32     1117.0000     1099.5510   987078    1.56%
  20700 11208        cutoff           1117.0000     1099.5761   991589    1.56%
  20800 11240     1115.4099    23     1117.0000     1099.6322   996816    1.55%
Elapsed time =  94.83 sec. (tree size =  6.34 MB, solutions = 13)
  20900 11277     1115.4884    42     1117.0000     1099.6592  1001650    1.55%
  21000 11318        cutoff           1117.0000     1099.6943  1006488    1.55%
  21100 11348     1115.2019    62     1117.0000     1099.7310  1011342    1.55%
  21200 11377        cutoff           1117.0000     1099.7740  1015820    1.54%
  21300 11413     1113.1740    27     1117.0000     1099.8204  1019681    1.54%
  21400 11450     1109.9527    87     1117.0000     1099.8549  1024052    1.53%
  21500 11485     1112.9958    75     1117.0000     1099.9496  1028438    1.53%
  21600 11547     1105.0955    46     1117.0000     1099.9786  1032087    1.52%
  21700 11588     1111.6201    60     1117.0000     1100.0124  1037036    1.52%
  21800 11627     1106.4215    50     1117.0000     1100.0620  1041243    1.52%
Elapsed time =  98.79 sec. (tree size =  6.54 MB, solutions = 13)
  21900 11674     1112.0543    38     1117.0000     1100.1070  1045628    1.51%
  22000 11735     1113.3889    26     1117.0000     1100.1431  1049382    1.51%
  22100 11769     1113.9954    80     1117.0000     1100.1766  1053599    1.51%
  22200 11811        cutoff           1117.0000     1100.1967  1057294    1.50%
  22300 11866        cutoff           1117.0000     1100.2232  1061242    1.50%
  22400 11894     1112.9140    52     1117.0000     1100.2822  1065475    1.50%
  22500 11933     1116.9621    36     1117.0000     1100.3569  1068809    1.49%
  22600 11991     1113.8653    62     1117.0000     1100.3846  1072936    1.49%
  22700 12030     1116.3013    19     1117.0000     1100.4137  1076950    1.48%
  22800 12058     1111.7050    42     1117.0000     1100.4601  1080715    1.48%
Elapsed time = 102.34 sec. (tree size =  6.77 MB, solutions = 13)
  22900 12098     1115.9725    70     1117.0000     1100.5018  1084865    1.48%
  23000 12137     1116.4015    20     1117.0000     1100.5492  1088922    1.47%
  23100 12182     1104.8237    59     1117.0000     1100.5880  1092666    1.47%
  23200 12228     1112.5162    74     1117.0000     1100.6287  1096687    1.47%
  23300 12282     1116.7569    57     1117.0000     1100.6485  1100748    1.46%
  23400 12308        cutoff           1117.0000     1100.7072  1104923    1.46%
  23500 12345     1112.2472    33     1117.0000     1100.7710  1109338    1.45%
  23600 12393     1115.7265    83     1117.0000     1100.8007  1113489    1.45%
  23700 12432     1109.5315    60     1117.0000     1100.8658  1117531    1.44%
  23800 12445     1115.6589    12     1117.0000     1100.9345  1121151    1.44%
Elapsed time = 105.41 sec. (tree size =  6.97 MB, solutions = 13)
  23900 12482     1113.1251    45     1117.0000     1100.9624  1124635    1.44%
  24000 12503     1101.0750    45     1117.0000     1101.0169  1128944    1.43%
  24100 12562     1116.0000     8     1117.0000     1101.0448  1132172    1.43%
  24200 12615        cutoff           1117.0000     1101.0496  1134878    1.43%
  24300 12669     1102.2810    35     1117.0000     1101.0768  1137678    1.43%
  24400 12719     1102.0697    61     1117.0000     1101.1166  1140975    1.42%
  24500 12767     1113.4527    23     1117.0000     1101.1499  1144769    1.42%
  24600 12810     1113.6407    44     1117.0000     1101.1749  1148445    1.42%
  24700 12825        cutoff           1117.0000     1101.2564  1152854    1.41%
  24800 12866     1116.3012    52     1117.0000     1101.3026  1156775    1.41%
Elapsed time = 108.21 sec. (tree size =  7.18 MB, solutions = 13)
  24900 12884        cutoff           1117.0000     1101.3479  1161267    1.40%
  25000 12954     1114.8920    28     1117.0000     1101.3541  1164880    1.40%
  25100 12987     1113.8144    54     1117.0000     1101.3987  1168606    1.40%
  25200 13022     1113.8240    61     1117.0000     1101.4443  1172199    1.39%
  25300 13074     1113.8121    38     1117.0000     1101.4766  1175637    1.39%
  25400 13113        cutoff           1117.0000     1101.5066  1179060    1.39%
  25500 13176     1116.0000     6     1117.0000     1101.5354  1182423    1.38%
  25600 13206        cutoff           1117.0000     1101.5738  1185436    1.38%
  25700 13260        cutoff           1117.0000     1101.6008  1188543    1.38%
  25800 13305     1115.1357    28     1117.0000     1101.6341  1192531    1.38%
Elapsed time = 111.37 sec. (tree size =  7.42 MB, solutions = 13)
  25900 13350        cutoff           1117.0000     1101.6626  1195597    1.37%
  26000 13385        cutoff           1117.0000     1101.7068  1199835    1.37%
  26100 13431     1111.7450    55     1117.0000     1101.7337  1203201    1.37%
  26200 13472     1114.0239    47     1117.0000     1101.7748  1207707    1.36%
  26300 13496        cutoff           1117.0000     1101.8122  1212201    1.36%
  26400 13536     1116.0000    15     1117.0000     1101.8400  1215877    1.36%
  26500 13562     1114.7454    21     1117.0000     1101.8988  1219890    1.35%
  26600 13569     1109.0971    79     1117.0000     1101.9844  1224175    1.34%
  26700 13595        cutoff           1117.0000     1102.0386  1229248    1.34%
  26800 13641     1108.2426    55     1117.0000     1102.0902  1232993    1.33%
Elapsed time = 115.09 sec. (tree size =  7.61 MB, solutions = 13)
  26900 13684     1104.9728    76     1117.0000     1102.1225  1237319    1.33%
  27000 13735        cutoff           1117.0000     1102.1511  1241576    1.33%
  27100 13749     1111.5242    23     1117.0000     1102.2379  1245155    1.32%
  27200 13806     1107.4294    70     1117.0000     1102.2584  1248702    1.32%
  27300 13829        cutoff           1117.0000     1102.3006  1252998    1.32%
  27400 13830     1105.3316    61     1117.0000     1102.3664  1258421    1.31%
  27500 13832     1105.3596    55     1117.0000     1102.4395  1263133    1.30%
  27600 13877     1108.8830    61     1117.0000     1102.4767  1266488    1.30%
  27700 13930     1109.5774    54     1117.0000     1102.4987  1270904    1.30%
  27800 13934     1113.1205    70     1117.0000     1102.5583  1276064    1.29%
Elapsed time = 118.93 sec. (tree size =  7.79 MB, solutions = 13)
  27900 13976     1116.8120    71     1117.0000     1102.5977  1280052    1.29%
  28000 14019     1108.2255    55     1117.0000     1102.6206  1284322    1.29%
  28100 14034        cutoff           1117.0000     1102.6755  1288345    1.28%
  28200 14059     1116.2704    47     1117.0000     1102.7130  1291854    1.28%
  28300 14087     1116.5694    55     1117.0000     1102.7581  1296959    1.28%
  28400 14118        cutoff           1117.0000     1102.7957  1300189    1.27%
  28500 14136     1113.7296    45     1117.0000     1102.8592  1305475    1.27%
  28600 14175        cutoff           1117.0000     1102.8912  1308936    1.26%
  28700 14183        cutoff           1117.0000     1102.9519  1313735    1.26%
  28800 14222        cutoff           1117.0000     1102.9943  1318527    1.25%
Elapsed time = 122.64 sec. (tree size =  7.94 MB, solutions = 13)
  28900 14223        cutoff           1117.0000     1103.0459  1323868    1.25%
  29000 14251     1113.4727    23     1117.0000     1103.0779  1327943    1.25%
  29100 14256        cutoff           1117.0000     1103.1189  1332515    1.24%
  29200 14275        cutoff           1117.0000     1103.1646  1337904    1.24%
  29300 14326     1108.9638    78     1117.0000     1103.1875  1341841    1.24%
  29400 14363        cutoff           1117.0000     1103.2125  1346791    1.23%
  29500 14387     1108.5261    41     1117.0000     1103.2652  1351949    1.23%
  29600 14395     1113.9736    72     1117.0000     1103.3086  1357482    1.23%
  29700 14424        cutoff           1117.0000     1103.3564  1361635    1.22%
  29800 14435        cutoff           1117.0000     1103.4075  1366518    1.22%
Elapsed time = 126.64 sec. (tree size =  8.06 MB, solutions = 13)
  29900 14465        cutoff           1117.0000     1103.4539  1370564    1.21%
  30000 14501     1114.7880    67     1117.0000     1103.4856  1375070    1.21%
  30100 14513        cutoff           1117.0000     1103.5356  1380202    1.21%
  30200 14541        cutoff           1117.0000     1103.5729  1384829    1.20%
  30300 14567     1111.2690    63     1117.0000     1103.6085  1389164    1.20%
  30400 14568     1104.2274    45     1117.0000     1103.6786  1393971    1.19%
  30500 14586     1110.7543    60     1117.0000     1103.7384  1398657    1.19%
  30600 14618     1105.4994    64     1117.0000     1103.7732  1402783    1.18%
  30700 14622     1113.1176    45     1117.0000     1103.8280  1406493    1.18%
  30800 14585        cutoff           1117.0000     1103.9075  1410720    1.17%
Elapsed time = 130.18 sec. (tree size =  8.17 MB, solutions = 13)
  30900 14564        cutoff           1117.0000     1103.9805  1417007    1.17%
  31000 14559        cutoff           1117.0000     1104.0598  1420932    1.16%
  31100 14547     1115.2437    72     1117.0000     1104.1145  1426831    1.15%
  31200 14563        cutoff           1117.0000     1104.1741  1430786    1.15%
  31300 14556     1113.2399    59     1117.0000     1104.2470  1435003    1.14%
  31400 14548        cutoff           1117.0000     1104.3269  1438884    1.13%
  31500 14560     1110.6948    45     1117.0000     1104.3779  1443121    1.13%
  31600 14592     1115.6992    55     1117.0000     1104.4124  1446514    1.13%
  31700 14596     1114.4727    27     1117.0000     1104.4512  1450544    1.12%
  31800 14634        cutoff           1117.0000     1104.4729  1453873    1.12%
Elapsed time = 133.59 sec. (tree size =  8.20 MB, solutions = 13)
  31900 14595        cutoff           1117.0000     1104.5690  1458671    1.11%
  32000 14619     1115.2887    37     1117.0000     1104.6029  1462153    1.11%
  32100 14616        cutoff           1117.0000     1104.6568  1465998    1.11%
  32200 14600     1110.7120    33     1117.0000     1104.7320  1470999    1.10%
  32300 14614     1111.4429    75     1117.0000     1104.7782  1475109    1.09%
  32400 14620     1111.0564    62     1117.0000     1104.8236  1479274    1.09%
  32500 14641     1111.5762    43     1117.0000     1104.8583  1484178    1.09%
  32600 14636        cutoff           1117.0000     1104.9240  1488852    1.08%
  32700 14626     1114.0000    20     1117.0000     1104.9677  1492864    1.08%
  32800 14642        cutoff           1117.0000     1105.0018  1496950    1.07%
Elapsed time = 137.42 sec. (tree size =  8.23 MB, solutions = 13)
  32900 14630     1114.3452    24     1117.0000     1105.0657  1501526    1.07%
  33000 14624     1115.7393    43     1117.0000     1105.1307  1506190    1.06%
  33100 14596     1112.8527    38     1117.0000     1105.2059  1510353    1.06%
  33200 14614     1114.7849    57     1117.0000     1105.2450  1513513    1.05%
  33300 14585        cutoff           1117.0000     1105.3018  1517157    1.05%
  33400 14618     1109.4536    68     1117.0000     1105.3277  1522007    1.04%
  33500 14637     1111.9770    52     1117.0000     1105.3567  1526787    1.04%
  33600 14649     1114.1739    43     1117.0000     1105.3982  1530329    1.04%
  33700 14600        cutoff           1117.0000     1105.4806  1533756    1.03%
  33800 14596     1115.9038    75     1117.0000     1105.5121  1538550    1.03%
Elapsed time = 141.18 sec. (tree size =  8.16 MB, solutions = 13)
  33900 14574     1109.7178    56     1117.0000     1105.5835  1542654    1.02%
  34000 14554     1106.8615    53     1117.0000     1105.6397  1547243    1.02%
  34100 14575        cutoff           1117.0000     1105.6770  1550142    1.01%
  34200 14575        cutoff           1117.0000     1105.7612  1554469    1.01%
  34300 14545        cutoff           1117.0000     1105.8412  1558131    1.00%
  34400 14498     1114.4727    24     1117.0000     1105.9543  1561796    0.99%
  34500 14504        cutoff           1117.0000     1105.9801  1565699    0.99%
  34600 14479        cutoff           1117.0000     1106.0351  1570028    0.98%
  34700 14452     1116.5061    84     1117.0000     1106.1007  1574282    0.98%
  34800 14441        cutoff           1117.0000     1106.1611  1578706    0.97%
Elapsed time = 144.69 sec. (tree size =  8.11 MB, solutions = 13)
  34900 14423        cutoff           1117.0000     1106.2233  1582593    0.96%
  35000 14407        cutoff           1117.0000     1106.2685  1587930    0.96%
  35100 14410        cutoff           1117.0000     1106.3196  1591954    0.96%
  35200 14416        cutoff           1117.0000     1106.3755  1595204    0.95%
  35300 14411     1113.8809    44     1117.0000     1106.4261  1598841    0.95%
  35400 14441     1111.1654    48     1117.0000     1106.4557  1602850    0.94%
  35500 14458        cutoff           1117.0000     1106.4939  1607159    0.94%
  35600 14474     1106.5891    68     1117.0000     1106.5206  1611500    0.94%
  35700 14514        cutoff           1117.0000     1106.5334  1615835    0.94%
  35800 14553     1115.8932    47     1117.0000     1106.5629  1619582    0.93%
Elapsed time = 148.15 sec. (tree size =  8.16 MB, solutions = 13)
  35900 14552     1109.5114    52     1117.0000     1106.6162  1623619    0.93%
  36000 14542        cutoff           1117.0000     1106.6458  1627787    0.93%
  36100 14543        cutoff           1117.0000     1106.6810  1632260    0.92%
  36200 14529        cutoff           1117.0000     1106.7322  1637270    0.92%
  36300 14479        cutoff           1117.0000     1106.7902  1642219    0.91%
  36400 14450     1113.6746    72     1117.0000     1106.8481  1646893    0.91%
  36500 14461     1111.8902    58     1117.0000     1106.8773  1651395    0.91%
  36600 14431        cutoff           1117.0000     1106.9356  1655626    0.90%
  36700 14389        cutoff           1117.0000     1106.9840  1658481    0.90%
  36800 14363        cutoff           1117.0000     1107.0465  1662721    0.89%
Elapsed time = 151.78 sec. (tree size =  8.07 MB, solutions = 13)
  36900 14325        cutoff           1117.0000     1107.1106  1667037    0.89%
  37000 14310        cutoff           1117.0000     1107.1695  1670073    0.88%
  37100 14250     1115.0004    23     1117.0000     1107.2502  1674446    0.87%
  37200 14256     1115.7213    81     1117.0000     1107.2784  1678734    0.87%
  37300 14248     1113.6003    37     1117.0000     1107.3208  1681556    0.87%
  37400 14265     1116.1475    66     1117.0000     1107.3526  1685445    0.86%
  37500 14255        cutoff           1117.0000     1107.4026  1689498    0.86%
  37600 14267        cutoff           1117.0000     1107.4409  1692923    0.86%
  37700 14205     1116.9769    35     1117.0000     1107.5009  1697555    0.85%
  37800 14200        cutoff           1117.0000     1107.5446  1700829    0.85%
Elapsed time = 155.07 sec. (tree size =  7.97 MB, solutions = 13)
  37900 14182        cutoff           1117.0000     1107.5924  1705406    0.84%
  38000 14170        cutoff           1117.0000     1107.6362  1708870    0.84%
  38100 14154        cutoff           1117.0000     1107.6810  1713532    0.83%
  38200 14124        cutoff           1117.0000     1107.7546  1717566    0.83%
  38300 14122        cutoff           1117.0000     1107.7939  1721339    0.82%
  38400 14099     1113.1178    62     1117.0000     1107.8667  1725133    0.82%
  38500 14071     1115.4085    83     1117.0000     1107.9258  1729183    0.81%
  38600 14021     1113.0548    32     1117.0000     1107.9797  1733230    0.81%
  38700 14018        cutoff           1117.0000     1108.0201  1736454    0.80%
  38800 13990        cutoff           1117.0000     1108.0667  1740041    0.80%
Elapsed time = 158.33 sec. (tree size =  7.89 MB, solutions = 13)
  38900 13951        cutoff           1117.0000     1108.1152  1744738    0.80%
  39000 13946        cutoff           1117.0000     1108.1469  1748117    0.79%
  39100 13913     1116.5239    79     1117.0000     1108.1922  1751893    0.79%
  39200 13888        cutoff           1117.0000     1108.2462  1755649    0.78%
  39300 13887     1116.3333    23     1117.0000     1108.2908  1758793    0.78%
  39400 13879        cutoff           1117.0000     1108.3245  1762422    0.78%
  39500 13843        cutoff           1117.0000     1108.3754  1765964    0.77%
  39600 13782        cutoff           1117.0000     1108.4335  1770119    0.77%
  39700 13760     1113.8121    39     1117.0000     1108.4737  1773781    0.76%
  39800 13736        cutoff           1117.0000     1108.5224  1777203    0.76%
Elapsed time = 162.21 sec. (tree size =  7.75 MB, solutions = 13)
  39900 13743     1112.7530    65     1117.0000     1108.5415  1780360    0.76%
  40000 13698     1116.6127    48     1117.0000     1108.5891  1784362    0.75%
  40100 13684        cutoff           1117.0000     1108.6330  1787564    0.75%
  40200 13624        cutoff           1117.0000     1108.6841  1791041    0.74%
  40300 13580     1111.6790    53     1117.0000     1108.7509  1794893    0.74%
  40400 13559     1113.0857    56     1117.0000     1108.7979  1798215    0.73%
  40500 13516        cutoff           1117.0000     1108.8556  1801061    0.73%
  40600 13485     1116.3108    38     1117.0000     1108.8989  1804340    0.73%
  40700 13446        cutoff           1117.0000     1108.9573  1807385    0.72%
  40800 13434     1114.2021    31     1117.0000     1108.9920  1810504    0.72%
Elapsed time = 165.64 sec. (tree size =  7.59 MB, solutions = 13)
  40900 13417        cutoff           1117.0000     1109.0496  1813627    0.71%
  41000 13410     1114.0918    22     1117.0000     1109.0936  1816401    0.71%
  41100 13385        cutoff           1117.0000     1109.1512  1819467    0.70%
  41200 13370     1110.1023    54     1117.0000     1109.2176  1821711    0.70%
  41300 13352        cutoff           1117.0000     1109.2530  1825120    0.69%
  41400 13327        cutoff           1117.0000     1109.2997  1828738    0.69%
  41500 13296        cutoff           1117.0000     1109.3528  1832130    0.68%
  41600 13253     1112.6828    36     1117.0000     1109.4175  1835418    0.68%
  41700 13229        cutoff           1117.0000     1109.4521  1838663    0.68%
  41800 13208        cutoff           1117.0000     1109.4922  1841438    0.67%
Elapsed time = 168.50 sec. (tree size =  7.48 MB, solutions = 13)
  41900 13198        cutoff           1117.0000     1109.5413  1844321    0.67%
  42000 13177     1116.3454    85     1117.0000     1109.5827  1848171    0.66%
  42100 13131     1111.9184    32     1117.0000     1109.6451  1851617    0.66%
  42200 13082        cutoff           1117.0000     1109.7084  1855002    0.65%
  42300 13071     1116.6040    45     1117.0000     1109.7491  1858682    0.65%
  42400 13061        cutoff           1117.0000     1109.7890  1861275    0.65%
  42500 13034        cutoff           1117.0000     1109.8359  1863876    0.64%
  42600 13017        cutoff           1117.0000     1109.8705  1867627    0.64%
  42700 13022        cutoff           1117.0000     1109.9007  1871836    0.64%
  42800 12983        cutoff           1117.0000     1109.9654  1874500    0.63%
Elapsed time = 171.57 sec. (tree size =  7.37 MB, solutions = 13)
  42900 12948        cutoff           1117.0000     1110.0070  1878376    0.63%
  43000 12877        cutoff           1117.0000     1110.0746  1881555    0.62%
  43100 12845        cutoff           1117.0000     1110.1246  1885116    0.62%
  43200 12792        cutoff           1117.0000     1110.1889  1888737    0.61%
  43300 12716     1116.5681    72     1117.0000     1110.2521  1892047    0.60%
  43400 12678        cutoff           1117.0000     1110.3051  1895109    0.60%
  43500 12592        cutoff           1117.0000     1110.3819  1898041    0.59%
  43600 12579     1116.0000     6     1117.0000     1110.4250  1901131    0.59%
  43700 12530        cutoff           1117.0000     1110.4743  1905027    0.58%
  43800 12499     1111.1192    31     1117.0000     1110.5179  1908750    0.58%
Elapsed time = 174.60 sec. (tree size =  7.12 MB, solutions = 13)
  43900 12448        cutoff           1117.0000     1110.5698  1912145    0.58%
  44000 12457        cutoff           1117.0000     1110.5939  1914777    0.57%
  44100 12434     1114.5505    19     1117.0000     1110.6296  1917326    0.57%
  44200 12437        cutoff           1117.0000     1110.6668  1918900    0.57%
  44300 12417     1114.5000     6     1117.0000     1110.7048  1922148    0.56%
  44400 12399        cutoff           1117.0000     1110.7409  1924031    0.56%
  44500 12357        cutoff           1117.0000     1110.7817  1927092    0.56%
  44600 12323        cutoff           1117.0000     1110.8250  1930394    0.55%
  44700 12323     1113.4990    21     1117.0000     1110.8645  1932891    0.55%
  44800 12306     1113.6896    29     1117.0000     1110.8974  1935711    0.55%
Elapsed time = 177.17 sec. (tree size =  7.03 MB, solutions = 13)
  44900 12315     1111.6124    60     1117.0000     1110.9199  1938222    0.54%
  45000 12323     1115.6667     6     1117.0000     1110.9388  1941017    0.54%
  45100 12331        cutoff           1117.0000     1110.9598  1942987    0.54%
  45200 12337     1115.6667    12     1117.0000     1110.9809  1945085    0.54%
  45300 12354        cutoff           1117.0000     1110.9977  1946958    0.54%
  45400 12307        cutoff           1117.0000     1111.0268  1949213    0.53%
  45500 12261     1114.5626    23     1117.0000     1111.0682  1951969    0.53%
  45600 12259        cutoff           1117.0000     1111.0939  1953945    0.53%
  45700 12235     1114.8471    53     1117.0000     1111.1284  1956807    0.53%
  45800 12184        cutoff           1117.0000     1111.1603  1959357    0.52%
Elapsed time = 179.52 sec. (tree size =  6.96 MB, solutions = 13)
  45900 12166     1114.6504    29     1117.0000     1111.2033  1961631    0.52%
  46000 12133        cutoff           1117.0000     1111.2353  1963827    0.52%
  46100 12130        cutoff           1117.0000     1111.2591  1966073    0.51%
  46200 12114        cutoff           1117.0000     1111.2810  1968142    0.51%
  46300 12124     1112.8815    20     1117.0000     1111.3095  1970101    0.51%
  46400 12137        cutoff           1117.0000     1111.3285  1972259    0.51%
  46500 12150     1113.2039    34     1117.0000     1111.3478  1974013    0.51%
  46600 12135        cutoff           1117.0000     1111.3691  1976420    0.50%
  46700 12145        cutoff           1117.0000     1111.3886  1978591    0.50%
  46800 12155        cutoff           1117.0000     1111.4042  1980738    0.50%
Elapsed time = 181.49 sec. (tree size =  6.95 MB, solutions = 13)
  46900 12100        cutoff           1117.0000     1111.4418  1983289    0.50%
  47000 12038     1115.9879    30     1117.0000     1111.4916  1985600    0.49%
  47100 12005        cutoff           1117.0000     1111.5289  1987946    0.49%
  47200 11998        cutoff           1117.0000     1111.5577  1989921    0.49%
  47300 11967     1115.0000    16     1117.0000     1111.5961  1992037    0.48%
  47400 11960        cutoff           1117.0000     1111.6166  1994529    0.48%
  47500 11954        cutoff           1117.0000     1111.6352  1997007    0.48%
  47600 11936        cutoff           1117.0000     1111.6640  1999430    0.48%
  47700 11919     1116.9686    35     1117.0000     1111.6863  2001641    0.48%
  47800 11904     1115.6760    54     1117.0000     1111.7143  2004263    0.47%
Elapsed time = 183.64 sec. (tree size =  6.81 MB, solutions = 13)
  47900 11884     1115.2187    17     1117.0000     1111.7553  2007246    0.47%
  48000 11893        cutoff           1117.0000     1111.7791  2008953    0.47%
  48100 11865     1113.8053    23     1117.0000     1111.8074  2011477    0.46%
  48200 11861        cutoff           1117.0000     1111.8333  2013333    0.46%
  48300 11863     1115.1975    40     1117.0000     1111.8552  2015584    0.46%
  48400 11844        cutoff           1117.0000     1111.8849  2017585    0.46%
  48500 11848     1113.8310    37     1117.0000     1111.9137  2020326    0.46%
  48600 11872     1115.3030    20     1117.0000     1111.9258  2022446    0.45%
  48700 11859        cutoff           1117.0000     1111.9485  2024529    0.45%
  48800 11846     1115.6923    13     1117.0000     1111.9767  2026396    0.45%
Elapsed time = 185.55 sec. (tree size =  6.78 MB, solutions = 13)
  48900 11842     1114.6667    15     1117.0000     1112.0000  2029088    0.45%
  49000 11838     1115.5886    16     1117.0000     1112.0209  2031254    0.45%
  49100 11827     1116.9167    15     1117.0000     1112.0449  2033684    0.44%
  49200 11785        cutoff           1117.0000     1112.0794  2035649    0.44%
  49300 11767     1116.2552    29     1117.0000     1112.1041  2037930    0.44%
  49400 11736     1119.0000    22     1117.0000     1112.1363  2040241    0.44%
  49500 11703     1114.9848    19     1117.0000     1112.1705  2042248    0.43%
  49600 11667        cutoff           1117.0000     1112.2024  2044205    0.43%
  49700 11612        cutoff           1117.0000     1112.2385  2046161    0.43%
  49800 11617        cutoff           1117.0000     1112.2666  2047779    0.42%
Elapsed time = 187.59 sec. (tree size =  6.65 MB, solutions = 13)
  49900 11610     1115.6667     6     1117.0000     1112.2866  2049742    0.42%
  50000 11592     1112.3221    50     1117.0000     1112.3236  2051761    0.42%
  50100 11584     1114.3436    40     1117.0000     1112.3601  2053533    0.42%
  50200 11571        cutoff           1117.0000     1112.3872  2055610    0.41%
  50300 11533        cutoff           1117.0000     1112.4244  2057233    0.41%
  50400 11503     1114.7959    19     1117.0000     1112.4568  2059174    0.41%
  50500 11468     1116.2500    12     1117.0000     1112.4867  2061325    0.40%
  50600 11440        cutoff           1117.0000     1112.5208  2063300    0.40%
  50700 11381        cutoff           1117.0000     1112.5611  2064991    0.40%
  50800 11356        cutoff           1117.0000     1112.5973  2067174    0.39%
Elapsed time = 189.58 sec. (tree size =  6.52 MB, solutions = 13)
  50900 11304        cutoff           1117.0000     1112.6415  2069364    0.39%
  51000 11253        cutoff           1117.0000     1112.6767  2071335    0.39%
  51100 11217     1116.6667     9     1117.0000     1112.7106  2073768    0.38%
  51200 11187        cutoff           1117.0000     1112.7465  2075516    0.38%
  51300 11145     1114.6224    22     1117.0000     1112.7832  2077548    0.38%
  51400 11106        cutoff           1117.0000     1112.8123  2079364    0.37%
  51500 11093     1116.3049    27     1117.0000     1112.8255  2081515    0.37%
  51600 11064        cutoff           1117.0000     1112.8575  2082941    0.37%
  51700 11043     1113.6667     9     1117.0000     1112.8933  2084850    0.37%
  51800 10983        cutoff           1117.0000     1112.9348  2086316    0.36%
Elapsed time = 191.52 sec. (tree size =  6.33 MB, solutions = 13)
  51900 10962     1116.3333    13     1117.0000     1112.9574  2088437    0.36%
  52000 10943        cutoff           1117.0000     1112.9864  2090470    0.36%
  52100 10962     1115.3590    12     1117.0000     1113.0000  2092096    0.36%
  52200 10999     1114.0000    21     1117.0000     1113.0000  2093193    0.36%
  52300 11002        cutoff           1117.0000     1113.0135  2094338    0.36%
  52400 10960     1114.3647    29     1117.0000     1113.0491  2095845    0.35%
  52500 10952     1116.1929    19     1117.0000     1113.0772  2097345    0.35%
  52600 10952     1116.6667     7     1117.0000     1113.0976  2098989    0.35%
  52700 10916     1116.6667    10     1117.0000     1113.1199  2101023    0.35%
  52800 10890        cutoff           1117.0000     1113.1393  2102753    0.35%
Elapsed time = 193.17 sec. (tree size =  6.28 MB, solutions = 13)
  52900 10864        cutoff           1117.0000     1113.1602  2104603    0.34%
  53000 10843     1116.6667     9     1117.0000     1113.1896  2106647    0.34%
  53100 10808        cutoff           1117.0000     1113.2131  2108669    0.34%
  53200 10758        cutoff           1117.0000     1113.2429  2110601    0.34%
  53300 10724        cutoff           1117.0000     1113.2694  2112250    0.33%
  53400 10663        cutoff           1117.0000     1113.3003  2114230    0.33%
  53500 10630        cutoff           1117.0000     1113.3311  2115879    0.33%
  53600 10655        cutoff           1117.0000     1113.3333  2117359    0.33%
  53700 10682     1116.8130    16     1117.0000     1113.3333  2118834    0.33%
  53800 10711     1115.1986    25     1117.0000     1113.3333  2120299    0.33%
Elapsed time = 195.02 sec. (tree size =  6.18 MB, solutions = 13)
  53900 10746     1116.5487    16     1117.0000     1113.3333  2121539    0.33%
  54000 10786     1115.8598    12     1117.0000     1113.3333  2123131    0.33%
  54100 10792     1114.7474    27     1117.0000     1113.3454  2124469    0.33%
  54200 10764     1116.3590    12     1117.0000     1113.3726  2126004    0.32%
  54300 10739     1116.7046    22     1117.0000     1113.3944  2127704    0.32%
  54400 10698        cutoff           1117.0000     1113.4247  2129768    0.32%
  54500 10670     1116.4472    20     1117.0000     1113.4527  2131799    0.32%
  54600 10645     1116.8756    26     1117.0000     1113.4668  2133884    0.32%
  54700 10619        cutoff           1117.0000     1113.4858  2135849    0.31%
  54800 10596     1114.7127    16     1117.0000     1113.5039  2137371    0.31%
Elapsed time = 196.62 sec. (tree size =  6.12 MB, solutions = 13)
  54900 10573        cutoff           1117.0000     1113.5208  2139291    0.31%
  55000 10512        cutoff           1117.0000     1113.5597  2140907    0.31%
  55100 10455        cutoff           1117.0000     1113.5925  2142400    0.31%
  55200 10405        cutoff           1117.0000     1113.6211  2143844    0.30%
  55300 10394     1116.8718    18     1117.0000     1113.6354  2145401    0.30%
  55400 10337     1115.9968    28     1117.0000     1113.6664  2147312    0.30%
  55500 10348     1115.7451    10     1117.0000     1113.6667  2148880    0.30%
  55600 10357    infeasible           1117.0000     1113.6667  2150387    0.30%
  55700 10370     1116.1238    15     1117.0000     1113.6667  2152195    0.30%
  55800 10391     1116.5000    15     1117.0000     1113.6667  2153614    0.30%
Elapsed time = 198.13 sec. (tree size =  6.02 MB, solutions = 13)
  55900 10406     1116.5000     8     1117.0000     1113.6667  2155317    0.30%
  56000 10404        cutoff           1117.0000     1113.6728  2157127    0.30%
  56100 10354     1114.1414    37     1117.0000     1113.7020  2158720    0.30%
  56200 10311     1115.8702    38     1117.0000     1113.7259  2160376    0.29%
  56300 10264        cutoff           1117.0000     1113.7488  2161926    0.29%
  56400 10208     1114.3333    12     1117.0000     1113.7787  2163795    0.29%
  56500 10178     1115.5309    40     1117.0000     1113.7987  2165768    0.29%
  56600 10144        cutoff           1117.0000     1113.8123  2167393    0.29%
  56700 10116     1116.1628    38     1117.0000     1113.8268  2169060    0.28%
  56800 10091     1116.7046    21     1117.0000     1113.8394  2170706    0.28%
Elapsed time = 199.84 sec. (tree size =  5.86 MB, solutions = 13)
  56900 10081     1114.1370    23     1117.0000     1113.8533  2172129    0.28%
  57000 10071        cutoff           1117.0000     1113.8669  2173868    0.28%
  57100 10063     1116.2932    35     1117.0000     1113.8789  2175487    0.28%
  57200 10052     1116.4472    23     1117.0000     1113.8878  2177400    0.28%
  57300 10040        cutoff           1117.0000     1113.8943  2178980    0.28%
  57400 10019     1116.4971    17     1117.0000     1113.9085  2180822    0.28%
  57500  9989     1116.1890    30     1117.0000     1113.9280  2182416    0.28%
  57600  9970     1116.2738    18     1117.0000     1113.9388  2183978    0.27%
  57700  9972     1114.1255    58     1117.0000     1113.9460  2185605    0.27%
  57800  9954        cutoff           1117.0000     1113.9585  2187652    0.27%
Elapsed time = 201.49 sec. (tree size =  5.79 MB, solutions = 13)
  57900  9938     1115.8384    42     1117.0000     1113.9718  2189244    0.27%
  58000  9905     1115.0614    26     1117.0000     1113.9895  2191250    0.27%
  58100  9900        cutoff           1117.0000     1113.9998  2193011    0.27%
  58200  9923     1115.3333    12     1117.0000     1114.0000  2194581    0.27%
  58300  9959     1115.4583    23     1117.0000     1114.0000  2196255    0.27%
  58400  9992        cutoff           1117.0000     1114.0015  2197517    0.27%
  58500  9968     1116.8791    54     1117.0000     1114.0185  2199347    0.27%
  58600  9911        cutoff           1117.0000     1114.0441  2201264    0.26%
  58700  9878     1115.8922    47     1117.0000     1114.0657  2203285    0.26%
  58800  9855        cutoff           1117.0000     1114.0805  2205122    0.26%
Elapsed time = 203.16 sec. (tree size =  5.75 MB, solutions = 13)
  58900  9822     1116.3149    86     1117.0000     1114.1038  2206525    0.26%
  59000  9778     1116.8724    27     1117.0000     1114.1338  2208154    0.26%
  59100  9736        cutoff           1117.0000     1114.1624  2209727    0.25%
  59200  9684     1114.9865    45     1117.0000     1114.1955  2211249    0.25%
  59300  9664        cutoff           1117.0000     1114.2099  2212855    0.25%
  59400  9613        cutoff           1117.0000     1114.2352  2214580    0.25%
  59500  9585     1114.8571    13     1117.0000     1114.2500  2215806    0.25%
  59600  9595        cutoff           1117.0000     1114.2500  2217040    0.25%
  59700  9609     1114.8571    11     1117.0000     1114.2500  2218414    0.25%
  59800  9626        cutoff           1117.0000     1114.2500  2219644    0.25%
Elapsed time = 204.48 sec. (tree size =  5.63 MB, solutions = 13)
  59900  9648        cutoff           1117.0000     1114.2500  2220758    0.25%
  60000  9662        cutoff           1117.0000     1114.2500  2221928    0.25%
  60100  9679        cutoff           1117.0000     1114.2500  2223030    0.25%
  60200  9688        cutoff           1117.0000     1114.2524  2224133    0.25%
  60300  9633     1115.5439    23     1117.0000     1114.2805  2225707    0.24%
  60400  9592        cutoff           1117.0000     1114.2999  2227121    0.24%
  60500  9555        cutoff           1117.0000     1114.3246  2228738    0.24%
  60600  9549        cutoff           1117.0000     1114.3333  2230252    0.24%
  60700  9546     1114.3333     7     1117.0000     1114.3333  2231752    0.24%
  60800  9549     1115.7179     7     1117.0000     1114.3333  2233173    0.24%
Elapsed time = 205.70 sec. (tree size =  5.59 MB, solutions = 13)
  60900  9553        cutoff           1117.0000     1114.3333  2234738    0.24%
  61000  9550     1116.7179    12     1117.0000     1114.3333  2236379    0.24%
  61100  9554     1115.7179     7     1117.0000     1114.3333  2237733    0.24%
  61200  9568        cutoff           1117.0000     1114.3333  2239033    0.24%
  61300  9578     1116.8846    12     1117.0000     1114.3333  2240333    0.24%
  61400  9573        cutoff           1117.0000     1114.3409  2241621    0.24%
  61500  9535        cutoff           1117.0000     1114.3655  2243028    0.24%
  61600  9504     1116.1238    19     1117.0000     1114.3862  2244097    0.23%
  61700  9465        cutoff           1117.0000     1114.4122  2245825    0.23%
  61800  9420        cutoff           1117.0000     1114.4356  2247014    0.23%
Elapsed time = 206.91 sec. (tree size =  5.53 MB, solutions = 13)
  61900  9390     1116.2444    20     1117.0000     1114.4572  2248558    0.23%
  62000  9356        cutoff           1117.0000     1114.4793  2250462    0.23%
  62100  9313     1115.3590    14     1117.0000     1114.5000  2251735    0.22%
  62200  9250     1114.7516    32     1117.0000     1114.5186  2253286    0.22%
  62300  9205        cutoff           1117.0000     1114.5387  2254902    0.22%
  62400  9194        cutoff           1117.0000     1114.5487  2256296    0.22%
  62500  9120        cutoff           1117.0000     1114.5714  2257845    0.22%
  62600  9079        cutoff           1117.0000     1114.5886  2259413    0.22%
  62700  9014        cutoff           1117.0000     1114.6141  2261346    0.21%
  62800  8947        cutoff           1117.0000     1114.6354  2263291    0.21%
Elapsed time = 208.49 sec. (tree size =  5.28 MB, solutions = 13)
  62900  8906     1116.1805    19     1117.0000     1114.6531  2264899    0.21%
  63000  8860     1116.0000     4     1117.0000     1114.6667  2266302    0.21%
  63100  8853     1116.2468    24     1117.0000     1114.6667  2267571    0.21%
  63200  8854     1116.0000     6     1117.0000     1114.6667  2268857    0.21%
  63300  8861        cutoff           1117.0000     1114.6667  2269888    0.21%
  63400  8808        cutoff           1117.0000     1114.6872  2271476    0.21%
  63500  8795     1115.3590    14     1117.0000     1114.6923  2272529    0.21%
  63600  8801     1116.0807    24     1117.0000     1114.6923  2273528    0.21%
  63700  8798     1115.1730    10     1117.0000     1114.6923  2274719    0.21%
  63800  8761     1116.6505    31     1117.0000     1114.7038  2276139    0.21%
Elapsed time = 209.69 sec. (tree size =  5.18 MB, solutions = 13)
  63900  8719        cutoff           1117.0000     1114.7187  2277215    0.20%
  64000  8657        cutoff           1117.0000     1114.7401  2278298    0.20%
  64100  8615     1114.7500     7     1117.0000     1114.7500  2279420    0.20%
  64200  8588        cutoff           1117.0000     1114.7608  2280903    0.20%
  64300  8517        cutoff           1117.0000     1114.7811  2282183    0.20%
  64400  8454     1116.5283    54     1117.0000     1114.7984  2283758    0.20%
  64500  8373        cutoff           1117.0000     1114.8221  2285100    0.19%
  64600  8305     1115.4892    59     1117.0000     1114.8459  2286712    0.19%
  64700  8262        cutoff           1117.0000     1114.8616  2287797    0.19%
  64800  8216        cutoff           1117.0000     1114.8754  2289455    0.19%
Elapsed time = 211.08 sec. (tree size =  4.89 MB, solutions = 13)
  64900  8150     1116.3333     8     1117.0000     1114.8986  2290977    0.19%
  65000  8067        cutoff           1117.0000     1114.9228  2292977    0.19%
  65100  8011     1116.0000     5     1117.0000     1114.9431  2295071    0.18%
  65200  7940        cutoff           1117.0000     1114.9647  2296799    0.18%
  65300  7883     1116.7907    79     1117.0000     1114.9811  2299138    0.18%
  65400  7823        cutoff           1117.0000     1114.9986  2301002    0.18%
  65500  7781     1116.5000     8     1117.0000     1115.0000  2302254    0.18%
  65600  7727     1115.3465    61     1117.0000     1115.0058  2304075    0.18%
  65700  7672     1115.4576    24     1117.0000     1115.0236  2306082    0.18%
  65800  7602        cutoff           1117.0000     1115.0421  2307486    0.18%
Elapsed time = 212.83 sec. (tree size =  4.56 MB, solutions = 13)
  65900  7527        cutoff           1117.0000     1115.0660  2308648    0.17%
  66000  7471        cutoff           1117.0000     1115.0843  2309735    0.17%
  66100  7393        cutoff           1117.0000     1115.1111  2310956    0.17%
  66200  7346     1116.2959    29     1117.0000     1115.1252  2312067    0.17%
  66300  7305     1116.6667     9     1117.0000     1115.1410  2312829    0.17%
  66400  7267     1116.7179     7     1117.0000     1115.1535  2313908    0.17%
  66500  7186        cutoff           1117.0000     1115.1716  2315104    0.16%
  66600  7105        cutoff           1117.0000     1115.2023  2316034    0.16%
  66700  7035        cutoff           1117.0000     1115.2233  2317142    0.16%
  66800  6980        cutoff           1117.0000     1115.2441  2318191    0.16%
Elapsed time = 214.09 sec. (tree size =  4.22 MB, solutions = 13)
  66900  6961        cutoff           1117.0000     1115.2500  2319295    0.16%
  67000  6945     1116.2500    18     1117.0000     1115.2500  2320751    0.16%
  67100  6914        cutoff           1117.0000     1115.2500  2321812    0.16%
  67200  6863        cutoff           1117.0000     1115.2584  2323150    0.16%
  67300  6809        cutoff           1117.0000     1115.2707  2324359    0.15%
  67400  6772        cutoff           1117.0000     1115.2814  2325338    0.15%
  67500  6725     1116.6667     8     1117.0000     1115.2935  2326440    0.15%
  67600  6662        cutoff           1117.0000     1115.3121  2327674    0.15%
  67700  6598     1115.8571    13     1117.0000     1115.3333  2328569    0.15%
  67800  6576     1116.4762    12     1117.0000     1115.3333  2329767    0.15%
Elapsed time = 215.34 sec. (tree size =  3.99 MB, solutions = 13)
  67900  6572        cutoff           1117.0000     1115.3333  2331041    0.15%
  68000  6565     1115.8734    23     1117.0000     1115.3333  2332383    0.15%
  68100  6536        cutoff           1117.0000     1115.3366  2333546    0.15%
  68200  6458     1116.9926    47     1117.0000     1115.3575  2334596    0.15%
  68300  6382        cutoff           1117.0000     1115.3750  2335662    0.15%
  68400  6312        cutoff           1117.0000     1115.3966  2336576    0.14%
  68500  6230        cutoff           1117.0000     1115.4215  2337667    0.14%
  68600  6173        cutoff           1117.0000     1115.4348  2338637    0.14%
  68700  6119        cutoff           1117.0000     1115.4537  2339544    0.14%
  68800  6035     1116.6667    18     1117.0000     1115.4747  2340287    0.14%
Elapsed time = 216.55 sec. (tree size =  3.68 MB, solutions = 13)
  68900  5959        cutoff           1117.0000     1115.4991  2341262    0.13%
  69000  5911        cutoff           1117.0000     1115.5075  2342317    0.13%
  69100  5838        cutoff           1117.0000     1115.5306  2343469    0.13%
  69200  5778        cutoff           1117.0000     1115.5495  2344442    0.13%
  69300  5702        cutoff           1117.0000     1115.5765  2345340    0.13%
  69400  5630        cutoff           1117.0000     1115.5915  2345975    0.13%
  69500  5567        cutoff           1117.0000     1115.6116  2346993    0.12%
  69600  5501        cutoff           1117.0000     1115.6324  2347783    0.12%
  69700  5436     1116.3051    23     1117.0000     1115.6531  2348794    0.12%
  69800  5380     1116.7500     8     1117.0000     1115.6667  2349594    0.12%
Elapsed time = 217.74 sec. (tree size =  3.31 MB, solutions = 13)
  69900  5308     1116.1738    29     1117.0000     1115.6786  2350588    0.12%
  70000  5255     1116.7451     8     1117.0000     1115.6923  2351610    0.12%
  70100  5211        cutoff           1117.0000     1115.7002  2352575    0.12%
  70200  5143        cutoff           1117.0000     1115.7225  2353320    0.11%
  70300  5070        cutoff           1117.0000     1115.7451  2354152    0.11%
  70400  5054        cutoff           1117.0000     1115.7451  2354939    0.11%
  70500  5025        cutoff           1117.0000     1115.7468  2355596    0.11%
  70600  4961        cutoff           1117.0000     1115.7693  2356393    0.11%
  70700  4864     1116.6667    21     1117.0000     1115.7897  2357042    0.11%
  70800  4780        cutoff           1117.0000     1115.8062  2357688    0.11%
Elapsed time = 218.88 sec. (tree size =  2.99 MB, solutions = 13)
  70900  4698        cutoff           1117.0000     1115.8300  2358380    0.10%
  71000  4626        cutoff           1117.0000     1115.8453  2359314    0.10%
  71100  4531        cutoff           1117.0000     1115.8676  2360184    0.10%
  71200  4470     1116.6667     7     1117.0000     1115.8887  2360929    0.10%
  71300  4378        cutoff           1117.0000     1115.9122  2361562    0.10%
  71400  4291        cutoff           1117.0000     1115.9367  2362237    0.10%
  71500  4199        cutoff           1117.0000     1115.9576  2363346    0.09%
  71600  4131     1116.6667    21     1117.0000     1115.9774  2364024    0.09%
  71700  4057        cutoff           1117.0000     1116.0000  2365055    0.09%
  71800  4029        cutoff           1117.0000     1116.0000  2365968    0.09%
Elapsed time = 220.01 sec. (tree size =  2.58 MB, solutions = 13)
  71900  3996        cutoff           1117.0000     1116.0000  2366948    0.09%
  72000  3942        cutoff           1117.0000     1116.0000  2368667    0.09%
  72100  3887        cutoff           1117.0000     1116.0000  2370430    0.09%
  72200  3833     1116.5000    15     1117.0000     1116.0000  2372027    0.09%
  72300  3781        cutoff           1117.0000     1116.0000  2373535    0.09%
  72400  3704        cutoff           1117.0000     1116.0083  2374838    0.09%
  72500  3632        cutoff           1117.0000     1116.0267  2375648    0.09%
  72600  3559     1116.3252    18     1117.0000     1116.0443  2376416    0.09%
  72700  3472        cutoff           1117.0000     1116.0689  2377017    0.08%
  72800  3411        cutoff           1117.0000     1116.0833  2377822    0.08%
Elapsed time = 221.22 sec. (tree size =  2.24 MB, solutions = 13)
  72900  3343        cutoff           1117.0000     1116.0987  2378468    0.08%
  73000  3254        cutoff           1117.0000     1116.1227  2379455    0.08%
  73100  3233     1116.6667    10     1117.0000     1116.1293  2380147    0.08%
  73200  3213     1116.1341     6     1117.0000     1116.1341  2380908    0.08%
  73300  3138        cutoff           1117.0000     1116.1524  2381606    0.08%
  73400  3059        cutoff           1117.0000     1116.1778  2382344    0.07%
  73500  2974     1116.5000     8     1117.0000     1116.2010  2382939    0.07%
  73600  2889        cutoff           1117.0000     1116.2271  2383595    0.07%
  73700  2810        cutoff           1117.0000     1116.2486  2384222    0.07%
  73800  2756        cutoff           1117.0000     1116.2554  2384833    0.07%
Elapsed time = 222.31 sec. (tree size =  1.89 MB, solutions = 13)
  73900  2672        cutoff           1117.0000     1116.2774  2385604    0.06%
  74000  2591        cutoff           1117.0000     1116.3011  2386222    0.06%
  74100  2517        cutoff           1117.0000     1116.3181  2386941    0.06%
  74200  2450        cutoff           1117.0000     1116.3333  2387649    0.06%
  74300  2408     1116.6667     6     1117.0000     1116.3333  2388426    0.06%
  74400  2355        cutoff           1117.0000     1116.3346  2389426    0.06%
  74500  2264        cutoff           1117.0000     1116.3571  2389899    0.06%
  74600  2174        cutoff           1117.0000     1116.3838  2390524    0.06%
  74700  2083        cutoff           1117.0000     1116.4116  2390914    0.05%
  74800  2000        cutoff           1117.0000     1116.4407  2391315    0.05%
Elapsed time = 223.34 sec. (tree size =  1.48 MB, solutions = 13)
  74900  1910        cutoff           1117.0000     1116.4641  2391835    0.05%
  75000  1810        cutoff           1117.0000     1116.5000  2392117    0.04%
  75100  1730        cutoff           1117.0000     1116.5000  2392549    0.04%
  75200  1638     1116.8095    24     1117.0000     1116.5294  2392968    0.04%
  75300  1540        cutoff           1117.0000     1116.5527  2393395    0.04%
  75400  1450        cutoff           1117.0000     1116.5764  2393720    0.04%
  75500  1360        cutoff           1117.0000     1116.6037  2394096    0.04%
  75600  1267        cutoff           1117.0000     1116.6298  2394468    0.03%
  75700  1170        cutoff           1117.0000     1116.6545  2394672    0.03%
  75800  1084        cutoff           1117.0000     1116.6667  2395291    0.03%
Elapsed time = 224.25 sec. (tree size =  0.98 MB, solutions = 13)
  75900  1015        cutoff           1117.0000     1116.6667  2395832    0.03%
  76000   925        cutoff           1117.0000     1116.6739  2396300    0.03%
  76100   831        cutoff           1117.0000     1116.6985  2396695    0.03%
  76200   732        cutoff           1117.0000     1116.7345  2396912    0.02%
  76300   641        cutoff           1117.0000     1116.7541  2397177    0.02%
  76400   541        cutoff           1117.0000     1116.7815  2397368    0.02%
  76500   442        cutoff           1117.0000     1116.8122  2397601    0.02%
  76600   343        cutoff           1117.0000     1116.8407  2397815    0.01%
  76700   245        cutoff           1117.0000     1116.8833  2398059    0.01%

Clique cuts applied:  8
Cover cuts applied:  314
Implied bound cuts applied:  157
Flow cuts applied:  49
Mixed integer rounding cuts applied:  122
Zero-half cuts applied:  17
Gomory fractional cuts applied:  7
Lazy constraints applied:  15
Optimal
Lmax: 1117
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 4
Job 7 into batch 2
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 1
Job 14 into batch 10
Job 15 into batch 15
Job 16 into batch 0
Job 17 into batch 17
Job 18 into batch 10
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 12
Job 23 into batch 20
Job 24 into batch 24
Job 25 into batch 15
Job 26 into batch 21
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 31
Job 32 into batch 31
Job 33 into batch 33
Job 34 into batch 34
Job 35 into batch 21
Job 36 into batch 36
Job 37 into batch 0
Job 38 into batch 28
Job 39 into batch 27
Job 40 into batch 40
Job 41 into batch 19
Job 42 into batch 42
Job 43 into batch 19
Job 44 into batch 44
Job 45 into batch 45
Job 46 into batch 44
Job 47 into batch 40
Job 48 into batch 42
Job 49 into batch 19
Job 0:	s=1	p=10	d=25	L=(-15+52-0)=37=			Pk=63	Total size:10
Job 1:	s=3	p=8	d=31	L=(-13+63-0)=50=			Pk=20	Total size:10
Job 2:	s=3	p=7	d=32	L=(-7+66-0)=59=			Pk=11	Total size:8
Job 3:	s=10	p=14	d=33	L=(6+66-0)=72=			Pk=14	Total size:10
Job 4:	s=4	p=1	d=35	L=(5+71-0)=76=			Pk=6	Total size:7
Job 5:	s=10	p=19	d=35	L=(24+71-0)=95=			Pk=19	Total size:10
Job 6:	s=3	p=6	d=50	L=(15+65-1253)=-1173=			Pk=6	Total size:0
Job 7:	s=5	p=11	d=56	L=(20+54-1253)=-1179=			Pk=11	Total size:0
Job 8:	s=4	p=1	d=72	L=(5+54-0)=59=			Pk=1	Total size:4
Job 9:	s=10	p=4	d=79	L=(2+54-0)=56=			Pk=4	Total size:10
Job 10:	s=3	p=16	d=84	L=(13+58-0)=71=			Pk=20	Total size:10
Job 11:	s=9	p=10	d=93	L=(14+58-0)=72=			Pk=10	Total size:9
Job 12:	s=9	p=20	d=96	L=(31+58-0)=89=			Pk=20	Total size:10
Job 13:	s=7	p=20	d=100	L=(47+38-1253)=-1168=			Pk=20	Total size:0
Job 14:	s=4	p=20	d=102	L=(65+18-1253)=-1170=			Pk=20	Total size:0
Job 15:	s=1	p=31	d=104	L=(94+47-0)=141=			Pk=61	Total size:10
Job 16:	s=4	p=51	d=110	L=(139+-4-1253)=-1118=			Pk=51	Total size:0
Job 17:	s=10	p=51	d=111	L=(189+-4-0)=185=			Pk=51	Total size:10
Job 18:	s=3	p=13	d=118	L=(195+-17-1253)=-1075=			Pk=13	Total size:0
Job 19:	s=3	p=90	d=129	L=(274+-10-0)=264=			Pk=97	Total size:10
Job 20:	s=6	p=25	d=143	L=(285+-10-0)=275=			Pk=25	Total size:10
Job 21:	s=1	p=25	d=148	L=(305+49-0)=354=			Pk=85	Total size:10
Job 22:	s=1	p=13	d=153	L=(313+36-1253)=-904=			Pk=13	Total size:0
Job 23:	s=4	p=24	d=164	L=(326+12-1253)=-915=			Pk=24	Total size:0
Job 24:	s=10	p=90	d=164	L=(416+12-0)=428=			Pk=90	Total size:10
Job 25:	s=9	p=61	d=169	L=(472+-49-1253)=-830=			Pk=61	Total size:0
Job 26:	s=5	p=85	d=170	L=(556+-134-1253)=-831=			Pk=85	Total size:0
Job 27:	s=3	p=65	d=180	L=(611+-134-0)=477=			Pk=65	Total size:10
Job 28:	s=8	p=71	d=188	L=(674+-115-0)=559=			Pk=90	Total size:10
Job 29:	s=10	p=32	d=197	L=(697+-115-0)=582=			Pk=32	Total size:10
Job 30:	s=9	p=71	d=197	L=(768+-115-0)=653=			Pk=71	Total size:9
Job 31:	s=8	p=68	d=199	L=(834+-115-0)=719=			Pk=68	Total size:10
Job 32:	s=2	p=59	d=208	L=(884+-174-1253)=-543=			Pk=59	Total size:0
Job 33:	s=10	p=48	d=211	L=(929+-174-0)=755=			Pk=48	Total size:10
Job 34:	s=10	p=36	d=224	L=(952+-174-0)=778=			Pk=36	Total size:10
Job 35:	s=4	p=70	d=232	L=(1014+-244-1253)=-483=			Pk=70	Total size:0
Job 36:	s=10	p=45	d=234	L=(1057+-244-0)=813=			Pk=45	Total size:10
Job 37:	s=5	p=63	d=244	L=(1110+-307-1253)=-450=			Pk=63	Total size:0
Job 38:	s=2	p=90	d=248	L=(1196+-397-1253)=-454=			Pk=90	Total size:0
Job 39:	s=7	p=62	d=253	L=(1253+-459-1253)=-459=			Pk=62	Total size:0
Job 40:	s=9	p=84	d=254	L=(1336+-459-0)=877=			Pk=84	Total size:10
Job 41:	s=3	p=97	d=257	L=(1430+-556-1253)=-379=			Pk=97	Total size:0
Job 42:	s=7	p=83	d=279	L=(1491+-549-0)=942=			Pk=90	Total size:10
Job 43:	s=1	p=86	d=281	L=(1575+-635-1253)=-313=			Pk=86	Total size:0
Job 44:	s=2	p=93	d=284	L=(1665+-635-0)=1030=			Pk=93	Total size:10
Job 45:	s=10	p=84	d=286	L=(1747+-635-0)=1112=			Pk=84	Total size:10
Job 46:	s=8	p=93	d=287	L=(1839+-728-1253)=-142=			Pk=93	Total size:0
Job 47:	s=1	p=83	d=295	L=(1914+-811-1253)=-150=			Pk=83	Total size:0
Job 48:	s=3	p=90	d=298	L=(2001+-901-1253)=-153=			Pk=90	Total size:0
Job 49:	s=3	p=93	d=317	L=(2075+-994-1253)=-172=			Pk=93	Total size:0

0
1.72414
1117
226.48 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-34.csv
35
50
53
108
109
117
121
125
127
128
135
135
136
141
142
147
151
152
153
153
155
157
166
167
178
190
191
209
213
226
233
240
240
241
247
254
269
270
275
278
280
300
332
339
377
390
393
433
436
471
Job 0: due 35
Job 1: due 50
Job 2: due 53
Job 3: due 108
Job 4: due 109
Job 5: due 117
Job 6: due 121
Job 7: due 125
Job 8: due 127
Job 9: due 128
Job 10: due 135
Job 11: due 135
Job 12: due 136
Job 13: due 141
Job 14: due 142
Job 15: due 147
Job 16: due 151
Job 17: due 152
Job 18: due 153
Job 19: due 153
Job 20: due 155
Job 21: due 157
Job 22: due 166
Job 23: due 167
Job 24: due 178
Job 25: due 190
Job 26: due 191
Job 27: due 209
Job 28: due 213
Job 29: due 226
Job 30: due 233
Job 31: due 240
Job 32: due 240
Job 33: due 241
Job 34: due 247
Job 35: due 254
Job 36: due 269
Job 37: due 270
Job 38: due 275
Job 39: due 278
Job 40: due 280
Job 41: due 300
Job 42: due 332
Job 43: due 339
Job 44: due 377
Job 45: due 390
Job 46: due 393
Job 47: due 433
Job 48: due 436
Job 49: due 471
Ignore all jobs after 50
Lmaxinc before safe moves: 2283
Now using unsafety tolerance 0
New Lmaxincnew: 1112
Difference: 1171
Lmaxinc after safe moves: 1.23654e+06
Initial solution:
0 1 2 3 4 5 6 7 1 9 0 11 12 3 14 15 16 17 18 19 9 18 9 15 4 25 4 27 28 29 30 5 12 33 27 5 36 37 19 3 16 11 33 43 36 43 46 19 12 49 
Updating LmaxLB to -30.5. C=4.5, d=35same duedate: 10
Updating LmaxLB to 25. C=160, d=135Updating LmaxLB to 40.4. C=176.4, d=136Updating LmaxLB to 78.6. C=220.6, d=142Updating LmaxLB to 102.4. C=249.4, d=147Updating LmaxLB to 127.8. C=278.8, d=151Updating LmaxLB to 221.8. C=373.8, d=152same duedate: 18
Updating LmaxLB to 275.2. C=428.2, d=153Updating LmaxLB to 287.2. C=442.2, d=155Updating LmaxLB to 296.6. C=453.6, d=157Updating LmaxLB to 301.2. C=467.2, d=166Updating LmaxLB to 314.6. C=481.6, d=167Updating LmaxLB to 351.9. C=541.9, d=190Updating LmaxLB to 365.9. C=556.9, d=191Updating LmaxLB to 366.3. C=575.3, d=209Updating LmaxLB to 425.5. C=638.5, d=213Updating LmaxLB to 464.5. C=690.5, d=226Updating LmaxLB to 482.1. C=715.1, d=233same duedate: 31
Updating LmaxLB to 497.6. C=737.6, d=240Updating LmaxLB to 544.1. C=785.1, d=241Updating LmaxLB to 551.3. C=798.3, d=247Updating LmaxLB to 569.5. C=823.5, d=254Updating LmaxLB to 580.6. C=849.6, d=269Updating LmaxLB to 651.6. C=921.6, d=270Updating LmaxLB to 657.8. C=932.8, d=275Updating LmaxLB to 710.1. C=988.1, d=278Updating LmaxLB to 716.1. C=996.1, d=280Updating LmaxLB to 722.2. C=1061.2, d=339Updating LmaxLB to 728.2. C=1105.2, d=377Updating LmaxLB to 735. C=1125, d=390Updating LmaxLB to 811.2. C=1204.2, d=393Updating LmaxLB to 826.7. C=1262.7, d=436Updating LmaxLB to 849.1. C=1320.1, d=471Lower bound on Lmax based on areas:0
Max Lksingle:2283
Max reduction:2283
Now adding static psi-2-in-2 dominance rules ...
Added 267 safe move dominance lazy constraints
Added 204 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2552 rows and 1730 columns.
MIP Presolve modified 2303 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 1217 rows, 819 columns, and 5513 nonzeros.
Reduced MIP has 768 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.01 sec.
Tried aggregator 1 time.
Presolve time =    0.04 sec.
Probing time =    0.00 sec.
Clique table members: 1355.
Problem contains 204 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.04 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      537.3006   196                    537.3006      578         
      0     0      583.3859   212                   Cuts: 162      809         
      0     0      623.1787   200                   Cuts: 200     1097         
      0     0      644.6135   220                   Cuts: 189     1387         
      0     0      658.5725   237                   Cuts: 176     1608         
      0     0      663.5236   238                   Cuts: 139     1748         
      0     0      665.8546   234                    Cuts: 77     1833         
      0     0      667.7987   234                    Cuts: 80     1923         
      0     0      668.9384   249                   Cuts: 121     1989         
      0     0      670.2087   239                    Cuts: 61     2065         
      0     0      670.8965   243                    Cuts: 70     2150         
      0     0      672.3502   253                    Cuts: 62     2210         
      0     0      673.8186   234                    Cuts: 47     2269         
      0     0      674.3062   244                    Cuts: 59     2300         
      0     0      674.4146   240                    Cuts: 58     2326         
      0     0      674.4470   244                    Cuts: 23     2342         
      0     0      674.5429   244                    Cuts: 63     2371         
      0     2      674.5429   238                    674.5840     2371         
Elapsed time =   1.14 sec. (tree size =  0.00 MB, solutions = 0)
*    30+   30                         1087.0000      676.4012     6323   37.77%
*    30+   30                         1063.0000      676.4012     6323   36.37%
*    80+   80                         1035.0000      676.4012    10809   34.65%
*    89    86      integral     0     1015.0000      676.4012    10958   33.36%
    100    95      767.8036   195     1015.0000      680.9795    13676   32.91%
    200   192      871.6126   135     1015.0000      681.2202    25056   32.88%
    300   289      981.4249    78     1015.0000      694.1706    33481   31.61%
    400   381      776.8585   244     1015.0000      695.5288    41985   31.47%
    500   475      971.3179   101     1015.0000      696.9122    49363   31.34%
*   566+  359                          965.0000      876.6306    53924    9.16%
    600   382      912.7328    73      965.0000      876.6306    55113    9.16%
    700   426      951.4500    28      965.0000      876.6306    57974    9.16%
    800   465      925.9706   110      965.0000      881.7847    64837    8.62%
    900   520      963.5585    58      965.0000      881.7847    67564    8.62%
Elapsed time =  17.01 sec. (tree size =  1.96 MB, solutions = 5)
   1000   555      910.7863   104      965.0000      882.7858    71692    8.52%
   1100   612      903.4973   108      965.0000      883.0618    77123    8.49%
   1200   666      955.0524    31      965.0000      883.0618    80375    8.49%
   1300   731      907.8840    95      965.0000      883.7224    84624    8.42%
   1400   823      907.7962   121      965.0000      885.6830    88106    8.22%
   1500   919      933.5501   141      965.0000      885.9569    90354    8.19%
*  1516+  920                          962.0000      885.9569    90614    7.90%
   1600  1003      941.2851    65      962.0000      885.9948    92876    7.90%
   1700  1095      927.6941   106      962.0000      886.1140    94797    7.89%
   1800  1191      940.6278   106      962.0000      886.7316    96967    7.82%
   1900  1282      946.7769    70      962.0000      887.0716    98941    7.79%
Elapsed time =  22.58 sec. (tree size =  9.85 MB, solutions = 6)
   2000  1372      924.4963    81      962.0000      887.9217   101910    7.70%
   2100  1468      919.2434   104      962.0000      887.9973   104452    7.69%
   2200  1568      957.4437    41      962.0000      887.9973   105950    7.69%
   2300  1661      954.5618    72      962.0000      888.2875   108147    7.66%
*  2376+ 1598                          957.0000      888.9088   110169    7.12%
   2400  1621      925.4993   115      957.0000      889.9264   110932    7.01%
*  2476+ 1662                          956.0000      890.9853   113357    6.80%
   2500  1688      936.8907    41      956.0000      890.9853   113720    6.80%
   2600  1777      953.1352    87      956.0000      891.1817   115638    6.78%
   2700  1868      939.2290    34      956.0000      891.4996   118107    6.75%
   2800  1958      915.8967   110      956.0000      891.7899   120434    6.72%
   2900  2052      946.2520    92      956.0000      891.9666   123149    6.70%
Elapsed time =  26.95 sec. (tree size = 16.47 MB, solutions = 8)
   3000  2143      912.4166    93      956.0000      892.5912   126204    6.63%
*  3080  1863      integral     0      948.0000      892.5912   127326    5.84%
   3100  1881      927.3857   106      948.0000      892.5992   128017    5.84%
   3200  1977      937.5021    25      948.0000      892.6451   130710    5.84%
   3300  2065      932.3923   120      948.0000      893.3774   134361    5.76%
   3400  2152      947.2650    42      948.0000      893.8752   137167    5.71%
   3500  2243      942.2095    42      948.0000      894.2399   140122    5.67%
   3600  2330      921.5657    90      948.0000      895.6330   142769    5.52%
   3700  2421      920.0885    83      948.0000      896.0475   145407    5.48%
   3800  2514      938.1286    73      948.0000      896.5187   147684    5.43%
Elapsed time =  31.77 sec. (tree size = 24.90 MB, solutions = 9)
   3900  2606      943.0762    13      948.0000      896.9374   150845    5.39%
   4000  2688      916.4672   116      948.0000      897.2036   153977    5.36%
   4100  2774      942.1877    93      948.0000      897.6497   158004    5.31%
   4200  2862      947.1397    46      948.0000      897.8875   161350    5.29%
   4300  2946      936.3641   100      948.0000      898.1515   163667    5.26%
   4400  3032      942.5202    38      948.0000      898.5788   167351    5.21%
   4500  3110      926.0460    93      948.0000      898.7603   170120    5.19%
   4600  3193      919.9253   109      948.0000      899.5750   173688    5.11%
   4700  3285      933.0951    65      948.0000      899.6589   175684    5.10%
   4800  3375      936.4353    68      948.0000      899.8484   177830    5.08%
Elapsed time =  37.88 sec. (tree size = 34.70 MB, solutions = 9)
   4900  3468        cutoff            948.0000      899.8632   180160    5.08%
   5000  3546        cutoff            948.0000      900.1634   183490    5.05%
   5100  3638      942.7061    56      948.0000      900.2317   186564    5.04%
   5200  3725      922.5361   103      948.0000      900.2972   188731    5.03%
   5300  3810      942.0495    69      948.0000      900.5232   191201    5.01%
   5400  3903      941.9662    52      948.0000      900.5535   193555    5.00%
   5500  3983        cutoff            948.0000      900.6891   195737    4.99%
   5600  4077      943.8785    78      948.0000      900.9111   198486    4.97%
   5700  4158      921.4573   130      948.0000      901.3667   201731    4.92%
   5800  4250      918.8283    90      948.0000      901.3855   203375    4.92%
Elapsed time =  43.20 sec. (tree size = 46.82 MB, solutions = 9)
   5900  4343      946.7897    75      948.0000      901.5779   205364    4.90%
   6000  4419      936.5637    85      948.0000      901.9702   208798    4.86%
   6100  4505      920.4453    96      948.0000      902.1323   211873    4.84%
   6200  4587      921.9565    97      948.0000      902.2971   214391    4.82%
   6300  4681      935.8906    57      948.0000      902.3145   216400    4.82%
   6400  4758      914.2500   124      948.0000      902.5839   220152    4.79%
   6500  4849      936.2920    63      948.0000      902.7767   222572    4.77%
*  6516+ 4708                          947.0000      902.7767   222761    4.67%
   6600  4776      929.5810   100      947.0000      902.9939   225007    4.65%
   6700  4863      934.1184    61      947.0000      903.0364   227505    4.64%
   6800  4945      942.6637    59      947.0000      903.4005   230401    4.60%
Elapsed time =  48.00 sec. (tree size = 57.70 MB, solutions = 10)
   6900  5026      934.8350    94      947.0000      903.6507   233012    4.58%
   7000  5117      946.4805    85      947.0000      903.8965   236297    4.55%
   7100  5201      916.1740    83      947.0000      903.9524   239393    4.55%
   7200  5286      937.4576    72      947.0000      904.1446   242876    4.53%
   7300  5368      926.4177    83      947.0000      904.5421   245222    4.48%
   7400  5456      935.9767    87      947.0000      904.7783   248929    4.46%
   7500  5542      921.3103   107      947.0000      904.9613   252111    4.44%
   7600  5629      925.1423    67      947.0000      905.1457   254499    4.42%
   7700  5721      940.8729    71      947.0000      905.2414   256643    4.41%
   7800  5801        cutoff            947.0000      905.3967   259331    4.39%
Elapsed time =  53.38 sec. (tree size = 67.20 MB, solutions = 10)
   7900  5888      940.1117    58      947.0000      905.8397   261960    4.35%
   8000  5974      938.5150    77      947.0000      905.8585   264141    4.34%
   8100  6050      915.4584   114      947.0000      906.1725   267353    4.31%
   8200  6143      942.4123    76      947.0000      906.2045   270201    4.31%
   8300  6226      918.5652    70      947.0000      906.2585   273174    4.30%
   8400  6315      934.7750    97      947.0000      906.2881   275650    4.30%
   8500  6403      940.1122    59      947.0000      906.3623   278063    4.29%
   8600  6483      921.9885   112      947.0000      906.5390   280887    4.27%
   8700  6561      935.3546    61      947.0000      906.6245   284112    4.26%
   8800  6641      930.8843   102      947.0000      906.6910   287193    4.26%
Elapsed time =  58.63 sec. (tree size = 76.45 MB, solutions = 10)
   8900  6729      929.9469   100      947.0000      906.7173   289553    4.25%
   9000  6820      930.4180    63      947.0000      906.7629   292204    4.25%
   9100  6902      936.6739    72      947.0000      906.8185   295173    4.24%
   9200  6977      927.3004   108      947.0000      907.0105   298296    4.22%
   9300  7057      941.2247    76      947.0000      907.1409   300842    4.21%
   9400  7146      936.2702   108      947.0000      907.2276   303003    4.20%
   9500  7226      923.5561   109      947.0000      907.2763   305652    4.19%
*  9516+ 6428                          944.0000      907.2763   306090    3.89%
   9600  6507      938.2897    81      944.0000      907.2836   307866    3.89%
   9700  6598      936.9542    88      944.0000      907.3938   310317    3.88%
   9800  6677      942.1702    63      944.0000      907.4594   313726    3.87%
Elapsed time =  63.82 sec. (tree size = 81.05 MB, solutions = 11)
   9900  6738      934.9859   115      944.0000      907.6210   317921    3.85%
*  9965  6437      integral     0      943.0000      907.6354   319389    3.75%
  10000  6467      941.4030    64      943.0000      907.6551   320224    3.75%
* 10065+ 5209                          939.0000      907.7964   322074    3.32%
  10100  5245      933.0949    68      939.0000      907.7964   322777    3.32%
  10200  5333      938.4453    52      939.0000      907.8191   325132    3.32%
  10300  5409        cutoff            939.0000      907.8735   328238    3.31%
  10400  5495      934.2078   122      939.0000      907.9615   330757    3.31%
  10500  5566      928.2949   118      939.0000      908.0956   333950    3.29%
  10600  5652      933.1427    60      939.0000      908.1919   336758    3.28%
  10700  5728      924.4876    81      939.0000      908.4172   340105    3.26%
Elapsed time =  68.84 sec. (tree size = 66.97 MB, solutions = 13)
  10800  5818      928.0306    73      939.0000      908.4321   342606    3.26%
* 10836+ 5526                          938.0000      908.4321   343312    3.15%
  10900  5586      932.1671    73      938.0000      908.6050   345331    3.13%
  11000  5658      930.4182    78      938.0000      908.7897   349216    3.11%
  11100  5742      937.2368    51      938.0000      908.8534   352067    3.11%
  11200  5807      930.0294    81      938.0000      909.0531   355400    3.09%
  11300  5873      922.3259    65      938.0000      909.3538   358501    3.05%
  11400  5944        cutoff            938.0000      909.4258   360783    3.05%
  11500  6005        cutoff            938.0000      909.6129   364693    3.03%
  11600  6080      919.3327    99      938.0000      909.7129   368470    3.02%
  11700  6174      937.0830    44      938.0000      909.7372   370834    3.01%
Elapsed time =  80.12 sec. (tree size = 74.45 MB, solutions = 14)
  11800  6217      918.1565    96      938.0000      910.0009   375359    2.98%
  11900  6302      916.3730   104      938.0000      910.0046   377755    2.98%
  12000  6386      920.0524    82      938.0000      910.0613   380440    2.98%
  12100  6456      919.5043   105      938.0000      910.2793   384115    2.96%
  12200  6533      933.3930    81      938.0000      910.3392   387734    2.95%
  12300  6587      932.1375    94      938.0000      910.5144   391719    2.93%
  12400  6660      933.9337    61      938.0000      910.6084   395085    2.92%
  12500  6732      936.8370   105      938.0000      910.6948   398308    2.91%
  12600  6810      935.5893    72      938.0000      910.7652   401259    2.90%
  12700  6889        cutoff            938.0000      910.8036   403509    2.90%
Elapsed time =  87.08 sec. (tree size = 85.96 MB, solutions = 14)
  12800  6959      933.9856    91      938.0000      910.9086   406161    2.89%
  12900  7021      924.5278   114      938.0000      911.1105   409748    2.87%
  13000  7100      934.0040   115      938.0000      911.1967   413642    2.86%
  13100  7166      927.6716    93      938.0000      911.2792   417316    2.85%
  13200  7245      930.3325    59      938.0000      911.3675   421311    2.84%
  13300  7307      936.6106    60      938.0000      911.4583   424753    2.83%
  13400  7381      936.3005    47      938.0000      911.5619   427836    2.82%
  13500  7444      933.6526   103      938.0000      911.6731   431496    2.81%
  13600  7509      936.4283   117      938.0000      911.7876   435182    2.79%
  13700  7584      933.0846   131      938.0000      911.8238   438489    2.79%
Elapsed time =  93.73 sec. (tree size = 90.95 MB, solutions = 14)
  13800  7654      927.9810    90      938.0000      911.9042   441362    2.78%
  13900  7729      927.6951    72      938.0000      911.9528   444951    2.78%
  14000  7773      931.3638    88      938.0000      912.1612   449899    2.75%
  14100  7840      917.1778    97      938.0000      912.2394   453625    2.75%
  14200  7916      937.8315    99      938.0000      912.3378   457539    2.74%
  14300  7993      927.5367   105      938.0000      912.3579   460035    2.73%
  14400  8068      924.3592    88      938.0000      912.4460   463296    2.72%
  14500  8137        cutoff            938.0000      912.5470   466755    2.71%
  14600  8207        cutoff            938.0000      912.6663   469990    2.70%
  14700  8277      934.6872    33      938.0000      912.7652   473085    2.69%
Elapsed time = 100.01 sec. (tree size = 95.67 MB, solutions = 14)
  14800  8345      935.6819    56      938.0000      912.8775   476552    2.68%
  14900  8407      937.4881    83      938.0000      913.0178   480472    2.66%
  15000  8468        cutoff            938.0000      913.1046   483753    2.65%
  15100  8540      928.5669   107      938.0000      913.1349   487492    2.65%
  15200  8608      929.5559    76      938.0000      913.2832   490801    2.64%
  15300  8671      917.7222   115      938.0000      913.3906   494313    2.62%
  15400  8755      920.9653    85      938.0000      913.4409   496918    2.62%
  15500  8823      937.4575    47      938.0000      913.6028   500004    2.60%
  15600  8888      937.1998    77      938.0000      913.6605   503591    2.59%
  15700  8945      924.2920   115      938.0000      913.8121   508028    2.58%
Elapsed time = 107.59 sec. (tree size = 103.05 MB, solutions = 14)
  15800  9021      935.7087    65      938.0000      913.8664   511366    2.57%
  15900  9093      937.1711    91      938.0000      913.9528   514311    2.56%
  16000  9155      930.4354   115      938.0000      914.0950   518986    2.55%
  16100  9220      937.5761    61      938.0000      914.2640   522588    2.53%
  16200  9294      931.2949    63      938.0000      914.3088   524931    2.53%
  16300  9347      927.0456    74      938.0000      914.3784   528347    2.52%
  16400  9412      935.7165    42      938.0000      914.4063   531798    2.52%
  16500  9483      923.0718   109      938.0000      914.4732   534286    2.51%
  16600  9547      925.2473    85      938.0000      914.5527   537461    2.50%
  16700  9598        cutoff            938.0000      914.6919   541718    2.48%
Elapsed time = 114.46 sec. (tree size = 110.56 MB, solutions = 14)
  16800  9656      927.5040    69      938.0000      914.7617   545431    2.48%
  16900  9722      921.5699    45      938.0000      914.8626   548385    2.47%
  17000  9793      933.1501    98      938.0000      914.8860   551214    2.46%
  17100  9854      927.3652   100      938.0000      915.0074   554888    2.45%
  17200  9913      937.6382    54      938.0000      915.0621   557555    2.45%
  17300  9972      927.8843    94      938.0000      915.1815   561013    2.43%
  17400 10055      934.1074    75      938.0000      915.2201   563641    2.43%
  17500 10123      930.4565    61      938.0000      915.2882   567881    2.42%
  17600 10204      935.4750    96      938.0000      915.3447   570927    2.42%
  17700 10269        cutoff            938.0000      915.3940   574628    2.41%
Elapsed time = 121.01 sec. (tree size = 119.45 MB, solutions = 14)
  17800 10354      930.6775   106      938.0000      915.4220   577349    2.41%
  17900 10422      937.8267   113      938.0000      915.5647   580790    2.39%
  18000 10467      932.6663    84      938.0000      915.6763   584532    2.38%
  18100 10538        cutoff            938.0000      915.7033   587672    2.38%
  18200 10581      931.3279    89      938.0000      915.7939   591614    2.37%
  18300 10654      921.2633    82      938.0000      915.8724   594678    2.36%
  18400 10722      927.0934   125      938.0000      915.9919   598266    2.35%
  18500 10778      937.4369   100      938.0000      916.0968   601613    2.34%
  18600 10832      933.3561    95      938.0000      916.1771   605968    2.33%
  18700 10879      923.7018    94      938.0000      916.2862   610022    2.31%
Elapsed time = 127.32 sec. (tree size = 125.10 MB, solutions = 14)
  18800 10947      936.6793    81      938.0000      916.3781   613474    2.31%
  18900 11006      927.5250   103      938.0000      916.4516   616796    2.30%
  19000 11064        cutoff            938.0000      916.5526   620751    2.29%
  19100 11130      935.5868   122      938.0000      916.5979   624741    2.28%
  19200 11183      928.3048    97      938.0000      916.7115   628554    2.27%
  19300 11229        cutoff            938.0000      916.8162   632203    2.26%
  19400 11287      934.6109    89      938.0000      916.8678   635858    2.25%
  19500 11344      935.8581   101      938.0000      916.9180   639964    2.25%
  19600 11391      937.3716    52      938.0000      916.9946   644165    2.24%
  19700 11459      931.7263   111      938.0000      917.0207   647287    2.24%
Elapsed time = 134.10 sec. (tree size = 133.43 MB, solutions = 14)
Nodefile size =  5.57 MB (4.49 MB after compression)
  19800 11524      924.2582    97      938.0000      917.0831   651732    2.23%
  19900 11569      929.7386    76      938.0000      917.1556   656400    2.22%
  20000 11623      932.3006    90      938.0000      917.2080   659986    2.22%
  20100 11681        cutoff            938.0000      917.2674   663686    2.21%
  20200 11748      929.1522   112      938.0000      917.3482   666768    2.20%
  20300 11809      934.6829    71      938.0000      917.4157   670023    2.19%
  20400 11887      934.8945    54      938.0000      917.4367   672871    2.19%
  20500 11951      929.9664    63      938.0000      917.4906   676252    2.19%
  20600 12004      932.9943   102      938.0000      917.5601   679639    2.18%
  20700 12059      933.7206    63      938.0000      917.6585   682883    2.17%
Elapsed time = 140.43 sec. (tree size = 141.77 MB, solutions = 14)
Nodefile size = 14.41 MB (11.60 MB after compression)
  20800 12116        cutoff            938.0000      917.7032   686576    2.16%
  20900 12147      934.4846    93      938.0000      917.8455   691237    2.15%
  21000 12181      931.3950    46      938.0000      917.9407   694812    2.14%
  21100 12227      925.8053    72      938.0000      918.0532   698324    2.13%
  21200 12276      929.2847    99      938.0000      918.1160   701757    2.12%
  21300 12315      933.6811    69      938.0000      918.2039   705449    2.11%
  21400 12371        cutoff            938.0000      918.2479   708531    2.11%
  21500 12435        cutoff            938.0000      918.2928   711872    2.10%
  21600 12500      931.0369    69      938.0000      918.3306   715507    2.10%
  21700 12553      924.8900    82      938.0000      918.3924   719248    2.09%
Elapsed time = 147.90 sec. (tree size = 144.81 MB, solutions = 14)
Nodefile size = 17.24 MB (13.86 MB after compression)
  21800 12589        cutoff            938.0000      918.5081   722877    2.08%
  21900 12636        cutoff            938.0000      918.6135   726818    2.07%
  22000 12671      935.5524    85      938.0000      918.6841   730686    2.06%
  22100 12729      930.6286    74      938.0000      918.7641   733324    2.05%
  22200 12797      937.1096    76      938.0000      918.8160   736337    2.05%
  22300 12853      936.2847    87      938.0000      918.8638   739956    2.04%
  22400 12900        cutoff            938.0000      918.9124   743362    2.03%
  22500 12940        cutoff            938.0000      918.9868   747401    2.03%
  22600 12979        cutoff            938.0000      919.1000   751482    2.01%
  22700 13044      935.2039    66      938.0000      919.1192   755332    2.01%
Elapsed time = 155.58 sec. (tree size = 150.28 MB, solutions = 14)
Nodefile size = 22.73 MB (18.26 MB after compression)
  22800 13072      936.4868    98      938.0000      919.2137   759779    2.00%
  22900 13108      932.7898    59      938.0000      919.2960   763810    1.99%
  23000 13167      935.1111    57      938.0000      919.3266   767075    1.99%
  23100 13207      937.5110    96      938.0000      919.3860   770433    1.98%
  23200 13251        cutoff            938.0000      919.4514   773420    1.98%
  23300 13305      937.8936    39      938.0000      919.4890   776775    1.97%
  23400 13341      923.2583    96      938.0000      919.5570   780074    1.97%
  23500 13389        cutoff            938.0000      919.6344   783380    1.96%
  23600 13457      937.7343    51      938.0000      919.6592   786815    1.96%
  23700 13487      930.2360   122      938.0000      919.7565   790945    1.94%
Elapsed time = 162.97 sec. (tree size = 154.63 MB, solutions = 14)
Nodefile size = 27.50 MB (22.05 MB after compression)
  23800 13537      935.5140    56      938.0000      919.8110   794884    1.94%
  23900 13575      927.8817    89      938.0000      919.8862   798771    1.93%
  24000 13617      935.4284    59      938.0000      919.9721   802556    1.92%
  24100 13662      927.5034   104      938.0000      920.0735   806458    1.91%
  24200 13690        cutoff            938.0000      920.1399   810546    1.90%
  24300 13748        cutoff            938.0000      920.1690   813535    1.90%
  24400 13755      937.3021    84      938.0000      920.2537   817499    1.89%
  24500 13819      925.3339    80      938.0000      920.2781   820691    1.89%
  24600 13880        cutoff            938.0000      920.3207   824611    1.88%
  24700 13917      931.5395   115      938.0000      920.4101   828102    1.88%
Elapsed time = 170.16 sec. (tree size = 161.26 MB, solutions = 14)
Nodefile size = 34.31 MB (27.48 MB after compression)
  24800 13939      936.7459    72      938.0000      920.5109   832171    1.86%
  24900 13957        cutoff            938.0000      920.6254   836411    1.85%
  25000 13997      934.7235   100      938.0000      920.7159   840443    1.84%
  25100 14032      937.9351   110      938.0000      920.7922   844397    1.83%
  25200 14076      926.8732   101      938.0000      920.8809   847560    1.83%
  25300 14122      929.8386   101      938.0000      920.9584   850848    1.82%
  25400 14178      935.6984    82      938.0000      921.0181   854347    1.81%
  25500 14234      935.3818    56      938.0000      921.0534   857835    1.81%
  25600 14279      933.6528   107      938.0000      921.1018   861250    1.80%
  25700 14331      928.4624   102      938.0000      921.1580   865238    1.80%
Elapsed time = 177.21 sec. (tree size = 166.81 MB, solutions = 14)
Nodefile size = 39.00 MB (31.20 MB after compression)
  25800 14374      935.6695    61      938.0000      921.2128   868353    1.79%
  25900 14417      926.5073    80      938.0000      921.2771   872539    1.78%
  26000 14456      935.4948    91      938.0000      921.3522   876507    1.77%
  26100 14510        cutoff            938.0000      921.4064   880284    1.77%
  26200 14547      936.6414    81      938.0000      921.4616   884501    1.76%
  26300 14575      934.3594   126      938.0000      921.5165   888268    1.76%
  26400 14615      931.4719    36      938.0000      921.5845   891386    1.75%
  26500 14642        cutoff            938.0000      921.6683   895378    1.74%
  26600 14691      933.5107    58      938.0000      921.7309   899188    1.73%
  26700 14728      933.4874    69      938.0000      921.8022   902961    1.73%
Elapsed time = 184.42 sec. (tree size = 173.35 MB, solutions = 14)
Nodefile size = 45.88 MB (36.71 MB after compression)
  26800 14743        cutoff            938.0000      921.8857   906866    1.72%
  26900 14791        cutoff            938.0000      921.9444   910543    1.71%
  27000 14828      928.0455   106      938.0000      922.0102   914532    1.70%
  27100 14884      931.7213    80      938.0000      922.0381   918455    1.70%
  27200 14903        cutoff            938.0000      922.1362   921564    1.69%
  27300 14960      931.4563    99      938.0000      922.1926   924671    1.69%
  27400 14989      934.1025    74      938.0000      922.2426   928783    1.68%
  27500 15023      927.8205    90      938.0000      922.3192   932611    1.67%
  27600 15046        cutoff            938.0000      922.3878   936755    1.66%
  27700 15083      931.3606    90      938.0000      922.4451   940214    1.66%
Elapsed time = 191.48 sec. (tree size = 178.56 MB, solutions = 14)
Nodefile size = 51.66 MB (41.35 MB after compression)
  27800 15141      932.2195    84      938.0000      922.4692   943331    1.66%
  27900 15163        cutoff            938.0000      922.5716   947657    1.64%
  28000 15160        cutoff            938.0000      922.6671   951417    1.63%
  28100 15214      937.6021    75      938.0000      922.7013   954224    1.63%
  28200 15248      937.8184    68      938.0000      922.7504   957350    1.63%
  28300 15291      931.0325    95      938.0000      922.8056   960267    1.62%
  28400 15348        cutoff            938.0000      922.8308   963026    1.62%
  28500 15392        cutoff            938.0000      922.9059   967020    1.61%
  28600 15401      937.6363    75      938.0000      922.9862   971112    1.60%
  28700 15451      931.3658    76      938.0000      923.0320   975341    1.60%
Elapsed time = 198.83 sec. (tree size = 183.97 MB, solutions = 14)
Nodefile size = 56.29 MB (45.02 MB after compression)
  28800 15471      935.2038   100      938.0000      923.1078   979993    1.59%
  28900 15498      935.1610    71      938.0000      923.1859   984583    1.58%
  29000 15524        cutoff            938.0000      923.2761   988928    1.57%
  29100 15567      931.8718    43      938.0000      923.3214   992596    1.56%
  29200 15595      929.1097   115      938.0000      923.3623   995875    1.56%
  29300 15616      934.7512    84      938.0000      923.4634   998748    1.55%
  29400 15676      933.4325    77      938.0000      923.4814  1001799    1.55%
  29500 15709        cutoff            938.0000      923.5355  1005055    1.54%
  29600 15724        cutoff            938.0000      923.6100  1008419    1.53%
  29700 15745      933.3193    72      938.0000      923.6866  1012356    1.53%
Elapsed time = 206.53 sec. (tree size = 187.30 MB, solutions = 14)
Nodefile size = 60.16 MB (48.09 MB after compression)
  29800 15747        cutoff            938.0000      923.7624  1016784    1.52%
  29900 15760      929.4951    64      938.0000      923.8292  1019992    1.51%
  30000 15785        cutoff            938.0000      923.8712  1024209    1.51%
  30100 15817      935.8537    92      938.0000      923.9120  1028165    1.50%
  30200 15876      931.9135    65      938.0000      923.9209  1031922    1.50%
  30300 15919      936.2013    88      938.0000      923.9628  1035821    1.50%
  30400 15908      937.8548    86      938.0000      924.0643  1040015    1.49%
  30500 15919      935.9012   117      938.0000      924.1292  1043810    1.48%
  30600 15943      935.4706    60      938.0000      924.1869  1046811    1.47%
  30700 15962      935.0840    67      938.0000      924.2503  1050496    1.47%
Elapsed time = 214.59 sec. (tree size = 192.07 MB, solutions = 14)
Nodefile size = 64.84 MB (51.82 MB after compression)
  30800 15982        cutoff            938.0000      924.2935  1053660    1.46%
  30900 16033      934.7215    51      938.0000      924.3207  1056877    1.46%
  31000 16083      934.8777    34      938.0000      924.3560  1059781    1.45%
  31100 16083      935.2503    49      938.0000      924.4206  1063601    1.45%
  31200 16074      933.0811    67      938.0000      924.5207  1067101    1.44%
  31300 16078        cutoff            938.0000      924.5908  1069831    1.43%
  31400 16092        cutoff            938.0000      924.6424  1073217    1.42%
  31500 16158      935.7715    96      938.0000      924.6627  1075590    1.42%
  31600 16165      928.1135    73      938.0000      924.7342  1078843    1.41%
  31700 16159      933.1183   110      938.0000      924.8039  1082501    1.41%
Elapsed time = 221.22 sec. (tree size = 196.61 MB, solutions = 14)
Nodefile size = 69.73 MB (55.73 MB after compression)
  31800 16207      935.0664    38      938.0000      924.8442  1085406    1.40%
  31900 16239      934.9113    80      938.0000      924.8815  1088679    1.40%
  32000 16244        cutoff            938.0000      924.9525  1091777    1.39%
  32100 16260      930.2890    78      938.0000      925.0124  1095541    1.38%
  32200 16252      934.4295    84      938.0000      925.1071  1099519    1.37%
  32300 16268      937.2034    97      938.0000      925.1655  1103301    1.37%
  32400 16248      935.0453    35      938.0000      925.2633  1106971    1.36%
  32500 16275        cutoff            938.0000      925.2995  1110586    1.35%
  32600 16258      937.5066    47      938.0000      925.3792  1114111    1.35%
  32700 16283      935.8625   105      938.0000      925.4338  1118900    1.34%
Elapsed time = 228.50 sec. (tree size = 199.20 MB, solutions = 14)
Nodefile size = 71.70 MB (57.24 MB after compression)
  32800 16320        cutoff            938.0000      925.4852  1122021    1.33%
  32900 16344      935.5223   120      938.0000      925.5273  1125399    1.33%
  33000 16367      936.1389   104      938.0000      925.5915  1129673    1.32%
  33100 16365      937.9913    83      938.0000      925.6717  1133926    1.31%
  33200 16389        cutoff            938.0000      925.7202  1137373    1.31%
  33300 16421      934.5419    58      938.0000      925.7716  1140746    1.30%
  33400 16429        cutoff            938.0000      925.8199  1144464    1.30%
  33500 16443      935.5857    91      938.0000      925.8693  1147551    1.29%
  33600 16448      931.7122    59      938.0000      925.9207  1150397    1.29%
  33700 16464      928.4751    86      938.0000      925.9649  1153951    1.28%
Elapsed time = 235.35 sec. (tree size = 201.06 MB, solutions = 14)
Nodefile size = 73.58 MB (58.72 MB after compression)
  33800 16489      937.2227    49      938.0000      926.0268  1156466    1.28%
  33900 16491      937.6506   115      938.0000      926.0944  1159768    1.27%
  34000 16490        cutoff            938.0000      926.1394  1163677    1.26%
  34100 16514      937.2298    79      938.0000      926.1809  1167635    1.26%
  34200 16537      932.1070    64      938.0000      926.2192  1170266    1.26%
  34300 16515      932.9751    74      938.0000      926.2993  1174191    1.25%
  34400 16532      937.1563    67      938.0000      926.3419  1177971    1.24%
  34500 16524        cutoff            938.0000      926.4028  1181414    1.24%
  34600 16530        cutoff            938.0000      926.4611  1184775    1.23%
  34700 16532      932.8477    94      938.0000      926.5092  1188572    1.23%
Elapsed time = 242.35 sec. (tree size = 202.25 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  34800 16581        cutoff            938.0000      926.5176  1192161    1.22%
  34900 16566      931.1935    82      938.0000      926.5812  1196107    1.22%
  35000 16562      928.0009    74      938.0000      926.6388  1199642    1.21%
  35100 16599      934.8279    81      938.0000      926.6680  1203327    1.21%
  35200 16617      937.5024    89      938.0000      926.7032  1206926    1.20%
  35300 16631      936.8344    71      938.0000      926.7380  1210400    1.20%
  35400 16606        cutoff            938.0000      926.8161  1213830    1.19%
  35500 16591        cutoff            938.0000      926.8915  1218201    1.18%
  35600 16582        cutoff            938.0000      926.9595  1221342    1.18%
  35700 16581      933.2635    60      938.0000      927.0169  1224487    1.17%
Elapsed time = 249.47 sec. (tree size = 201.41 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  35800 16556        cutoff            938.0000      927.0806  1227770    1.16%
  35900 16537        cutoff            938.0000      927.1353  1231250    1.16%
  36000 16552        cutoff            938.0000      927.1747  1234484    1.15%
  36100 16564        cutoff            938.0000      927.2110  1238259    1.15%
  36200 16558      935.4223    64      938.0000      927.2629  1242221    1.14%
  36300 16538      930.6191    88      938.0000      927.3271  1245934    1.14%
  36400 16544        cutoff            938.0000      927.3668  1249648    1.13%
  36500 16558      932.7751    84      938.0000      927.4030  1253139    1.13%
  36600 16529      936.5979    73      938.0000      927.4576  1257228    1.12%
  36700 16530      932.8198    89      938.0000      927.5043  1260802    1.12%
Elapsed time = 257.39 sec. (tree size = 201.38 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  36800 16531      929.9338   113      938.0000      927.5442  1265129    1.11%
  36900 16542        cutoff            938.0000      927.5807  1268351    1.11%
  37000 16534        cutoff            938.0000      927.6336  1271068    1.11%
  37100 16519      929.2971    86      938.0000      927.6800  1274888    1.10%
  37200 16508      932.7977    56      938.0000      927.7372  1278413    1.09%
  37300 16504      934.3133    99      938.0000      927.7899  1281714    1.09%
  37400 16505      935.3387   118      938.0000      927.8231  1285737    1.08%
  37500 16505        cutoff            938.0000      927.8607  1289156    1.08%
  37600 16469      936.4805    73      938.0000      927.9194  1292594    1.07%
  37700 16437        cutoff            938.0000      927.9875  1295769    1.07%
Elapsed time = 265.02 sec. (tree size = 201.10 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  37800 16437      931.6425    40      938.0000      928.0161  1298957    1.06%
  37900 16463        cutoff            938.0000      928.0346  1301637    1.06%
  38000 16484        cutoff            938.0000      928.0624  1305241    1.06%
  38100 16497      936.4571    59      938.0000      928.0887  1308743    1.06%
  38200 16502      936.9025    60      938.0000      928.1220  1312565    1.05%
  38300 16463        cutoff            938.0000      928.1825  1315369    1.05%
  38400 16426      935.9598    45      938.0000      928.2424  1318498    1.04%
  38500 16428        cutoff            938.0000      928.2845  1321330    1.04%
  38600 16407        cutoff            938.0000      928.3342  1325025    1.03%
  38700 16380        cutoff            938.0000      928.3941  1328132    1.02%
Elapsed time = 272.06 sec. (tree size = 199.76 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  38800 16342        cutoff            938.0000      928.4576  1331421    1.02%
  38900 16320      933.4410    67      938.0000      928.5034  1335033    1.01%
  39000 16319      932.6249    96      938.0000      928.5447  1337515    1.01%
  39100 16325      934.8491    74      938.0000      928.5692  1341520    1.01%
  39200 16332      933.0925   106      938.0000      928.6004  1344831    1.00%
  39300 16342        cutoff            938.0000      928.6335  1347711    1.00%
  39400 16334        cutoff            938.0000      928.6770  1350678    0.99%
  39500 16294        cutoff            938.0000      928.7375  1354109    0.99%
  39600 16248        cutoff            938.0000      928.7933  1357470    0.98%
  39700 16227        cutoff            938.0000      928.8474  1360780    0.98%
Elapsed time = 279.25 sec. (tree size = 197.78 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  39800 16183        cutoff            938.0000      928.9056  1363983    0.97%
  39900 16141        cutoff            938.0000      928.9589  1367225    0.96%
  40000 16148      935.0355    39      938.0000      929.0019  1370952    0.96%
  40100 16145        cutoff            938.0000      929.0494  1375196    0.95%
  40200 16108      934.9905    91      938.0000      929.1075  1378340    0.95%
  40300 16117        cutoff            938.0000      929.1354  1382093    0.95%
  40400 16129        cutoff            938.0000      929.1605  1385305    0.94%
  40500 16124        cutoff            938.0000      929.2028  1388406    0.94%
  40600 16109        cutoff            938.0000      929.2389  1392463    0.93%
  40700 16077        cutoff            938.0000      929.2863  1395376    0.93%
Elapsed time = 286.62 sec. (tree size = 196.82 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  40800 16058        cutoff            938.0000      929.3341  1398254    0.92%
  40900 16030        cutoff            938.0000      929.3717  1401600    0.92%
  41000 16037      933.1381    68      938.0000      929.4055  1404284    0.92%
  41100 16042      936.5346   110      938.0000      929.4485  1407785    0.91%
  41200 16035      937.3388    44      938.0000      929.4790  1411062    0.91%
  41300 16021        cutoff            938.0000      929.5216  1414571    0.90%
  41400 16022      933.0121    71      938.0000      929.5523  1418075    0.90%
  41500 16006        cutoff            938.0000      929.5983  1421215    0.90%
  41600 16006      935.7267    59      938.0000      929.6321  1423875    0.89%
  41700 15968        cutoff            938.0000      929.6809  1427215    0.89%
Elapsed time = 293.25 sec. (tree size = 194.04 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  41800 15948      931.3380    72      938.0000      929.7178  1430549    0.88%
  41900 15929        cutoff            938.0000      929.7549  1433682    0.88%
  42000 15912      936.6613    64      938.0000      929.7976  1437259    0.87%
  42100 15853        cutoff            938.0000      929.8589  1440513    0.87%
  42200 15836        cutoff            938.0000      929.8929  1443862    0.86%
  42300 15825      933.8982    67      938.0000      929.9220  1446937    0.86%
  42400 15813      934.3364   126      938.0000      929.9561  1449930    0.86%
  42500 15785        cutoff            938.0000      929.9982  1453390    0.85%
  42600 15738        cutoff            938.0000      930.0377  1456980    0.85%
  42700 15700        cutoff            938.0000      930.0770  1460157    0.84%
Elapsed time = 300.44 sec. (tree size = 192.21 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  42800 15666        cutoff            938.0000      930.1257  1463670    0.84%
  42900 15665        cutoff            938.0000      930.1545  1467004    0.84%
  43000 15646        cutoff            938.0000      930.1938  1469971    0.83%
  43100 15623        cutoff            938.0000      930.2356  1473207    0.83%
  43200 15573        cutoff            938.0000      930.2712  1476487    0.82%
  43300 15516        cutoff            938.0000      930.3220  1479527    0.82%
  43400 15497        cutoff            938.0000      930.3811  1483453    0.81%
  43500 15506      935.9900    68      938.0000      930.4112  1486784    0.81%
  43600 15476      932.9204   107      938.0000      930.4551  1489687    0.80%
  43700 15442      936.8219    98      938.0000      930.4949  1492726    0.80%
Elapsed time = 307.19 sec. (tree size = 188.44 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  43800 15383        cutoff            938.0000      930.5410  1495455    0.80%
  43900 15346        cutoff            938.0000      930.5815  1498663    0.79%
  44000 15341        cutoff            938.0000      930.6113  1501934    0.79%
  44100 15302        cutoff            938.0000      930.6557  1505963    0.78%
  44200 15262        cutoff            938.0000      930.7012  1509170    0.78%
  44300 15216        cutoff            938.0000      930.7415  1512715    0.77%
  44400 15200      937.6630    81      938.0000      930.7750  1515660    0.77%
  44500 15174        cutoff            938.0000      930.8059  1519053    0.77%
  44600 15145        cutoff            938.0000      930.8390  1522055    0.76%
  44700 15103        cutoff            938.0000      930.8800  1525265    0.76%
Elapsed time = 313.96 sec. (tree size = 183.49 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  44800 15048        cutoff            938.0000      930.9362  1528661    0.75%
  44900 15009        cutoff            938.0000      930.9751  1531745    0.75%
  45000 14973        cutoff            938.0000      931.0132  1535102    0.74%
  45100 14937        cutoff            938.0000      931.0481  1537807    0.74%
  45200 14892      937.7218    88      938.0000      931.0896  1541428    0.74%
  45300 14861        cutoff            938.0000      931.1213  1544989    0.73%
  45400 14840        cutoff            938.0000      931.1543  1548348    0.73%
  45500 14771        cutoff            938.0000      931.1983  1551281    0.73%
  45600 14745      936.5389    67      938.0000      931.2438  1554045    0.72%
  45700 14719        cutoff            938.0000      931.2827  1557133    0.72%
Elapsed time = 321.22 sec. (tree size = 177.94 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
  45800 14690        cutoff            938.0000      931.3229  1561373    0.71%
  45900 14643      935.5634    73      938.0000      931.3639  1565102    0.71%
  46000 14618      936.0651    74      938.0000      931.4073  1568183    0.70%
  46100 14582      937.0201    91      938.0000      931.4443  1571415    0.70%
  46200 14570      932.9948    81      938.0000      931.4679  1574616    0.70%
  46300 14505      935.5839    67      938.0000      931.5123  1577789    0.69%
  46400 14504        cutoff            938.0000      931.5371  1580694    0.69%
  46500 14431        cutoff            938.0000      931.5803  1582982    0.68%
  46600 14383      934.2615    55      938.0000      931.6197  1586170    0.68%
  46700 14341        cutoff            938.0000      931.6461  1589336    0.68%
Elapsed time = 328.17 sec. (tree size = 172.41 MB, solutions = 14)
Nodefile size = 75.51 MB (60.22 MB after compression)
* 46718 10936      integral     0      936.0000      931.6492  1590144    0.46%
  46800 10869        cutoff            936.0000      931.6916  1592911    0.46%
  46900 10815        cutoff            936.0000      931.7427  1596822    0.45%
  47000 10736        cutoff            936.0000      931.7876  1600392    0.45%
  47100 10677        cutoff            936.0000      931.8288  1603698    0.45%
  47200 10609        cutoff            936.0000      931.8757  1607432    0.44%
  47300 10537        cutoff            936.0000      931.9247  1610816    0.44%
  47400 10467        cutoff            936.0000      931.9695  1614049    0.43%
  47500 10385        cutoff            936.0000      932.0240  1616625    0.42%
  47600 10300        cutoff            936.0000      932.0658  1619346    0.42%
Elapsed time = 332.49 sec. (tree size = 124.15 MB, solutions = 15)
Nodefile size = 50.94 MB (40.55 MB after compression)
  47700 10259        cutoff            936.0000      932.1011  1622503    0.42%
  47800 10192        cutoff            936.0000      932.1461  1626207    0.41%
  47900 10110        cutoff            936.0000      932.1944  1629275    0.41%
  48000 10028        cutoff            936.0000      932.2343  1632356    0.40%
  48100  9949      935.8954    73      936.0000      932.2771  1635799    0.40%
  48200  9893        cutoff            936.0000      932.3229  1638778    0.39%
  48300  9814        cutoff            936.0000      932.3691  1641735    0.39%
  48400  9735      933.3974   111      936.0000      932.4231  1644821    0.38%
  48500  9651        cutoff            936.0000      932.4729  1647804    0.38%
  48600  9598        cutoff            936.0000      932.5095  1650677    0.37%
Elapsed time = 336.89 sec. (tree size = 115.25 MB, solutions = 15)
Nodefile size = 50.94 MB (40.55 MB after compression)
  48700  9531        cutoff            936.0000      932.5528  1653834    0.37%
  48800  9447        cutoff            936.0000      932.6012  1656741    0.36%
  48900  9370        cutoff            936.0000      932.6384  1659555    0.36%
  49000  9292        cutoff            936.0000      932.6796  1662300    0.35%
  49100  9209        cutoff            936.0000      932.7212  1665218    0.35%
  49200  9142        cutoff            936.0000      932.7551  1668544    0.35%
  49300  9062        cutoff            936.0000      932.7998  1671077    0.34%
  49400  8982        cutoff            936.0000      932.8408  1673974    0.34%
  49500  8910        cutoff            936.0000      932.8816  1676735    0.33%
  49600  8827        cutoff            936.0000      932.9231  1679790    0.33%
Elapsed time = 341.12 sec. (tree size = 105.09 MB, solutions = 15)
Nodefile size = 50.94 MB (40.55 MB after compression)
  49700  8734        cutoff            936.0000      932.9682  1682397    0.32%
  49800  8642        cutoff            936.0000      933.0206  1684704    0.32%
  49900  8560        cutoff            936.0000      933.0570  1687037    0.31%
  50000  8488        cutoff            936.0000      933.0989  1690130    0.31%
  50100  8413        cutoff            936.0000      933.1328  1692686    0.31%
  50200  8353        cutoff            936.0000      933.1635  1694798    0.30%
  50300  8261        cutoff            936.0000      933.2042  1697006    0.30%
  50400  8182        cutoff            936.0000      933.2399  1699497    0.29%
  50500  8088      935.0132    47      936.0000      933.2895  1701571    0.29%
  50600  8012        cutoff            936.0000      933.3258  1704004    0.29%
Elapsed time = 344.48 sec. (tree size = 95.02 MB, solutions = 15)
Nodefile size = 50.94 MB (40.55 MB after compression)
  50700  7937        cutoff            936.0000      933.3641  1706845    0.28%
  50800  7858        cutoff            936.0000      933.4037  1709036    0.28%
  50900  7766      934.6564    59      936.0000      933.4413  1711129    0.27%
  51000  7691        cutoff            936.0000      933.4740  1713546    0.27%
  51100  7603        cutoff            936.0000      933.5114  1715832    0.27%
  51200  7522        cutoff            936.0000      933.5466  1718134    0.26%
  51300  7462        cutoff            936.0000      933.5793  1719884    0.26%
  51400  7376      935.3517    71      936.0000      933.6189  1722198    0.25%
  51500  7297        cutoff            936.0000      933.6580  1724636    0.25%
  51600  7214        cutoff            936.0000      933.6978  1726932    0.25%
Elapsed time = 347.76 sec. (tree size = 85.25 MB, solutions = 15)
Nodefile size = 50.94 MB (40.55 MB after compression)
  51700  7139        cutoff            936.0000      933.7295  1729190    0.24%
  51800  7050        cutoff            936.0000      933.7671  1731328    0.24%
  51900  6957        cutoff            936.0000      933.8098  1733318    0.23%
  52000  6869        cutoff            936.0000      933.8508  1735257    0.23%
  52100  6783      935.7177    40      936.0000      933.8949  1737248    0.22%
  52200  6712        cutoff            936.0000      933.9248  1739831    0.22%
  52300  6622      934.4613    46      936.0000      933.9671  1741985    0.22%
  52400  6535        cutoff            936.0000      934.0067  1743320    0.21%
  52500  6449        cutoff            936.0000      934.0419  1745609    0.21%
  52600  6355        cutoff            936.0000      934.0805  1747298    0.21%
Elapsed time = 350.74 sec. (tree size = 75.29 MB, solutions = 15)
Nodefile size = 50.94 MB (40.55 MB after compression)
  52700  6272        cutoff            936.0000      934.1154  1749617    0.20%
  52800  6190        cutoff            936.0000      934.1500  1751757    0.20%
  52900  6095        cutoff            936.0000      934.1799  1753450    0.19%
  53000  6002        cutoff            936.0000      934.2208  1755328    0.19%
  53100  5919        cutoff            936.0000      934.2592  1756933    0.19%
  53200  5824        cutoff            936.0000      934.2967  1758642    0.18%
  53300  5724        cutoff            936.0000      934.3359  1759974    0.18%
  53400  5613        cutoff            936.0000      934.3714  1761467    0.17%
  53500  5534        cutoff            936.0000      934.4055  1763161    0.17%
  53600  5445        cutoff            936.0000      934.4352  1765315    0.17%
Elapsed time = 353.49 sec. (tree size = 63.82 MB, solutions = 15)
Nodefile size = 47.98 MB (38.22 MB after compression)
  53700  5296        cutoff            936.0000      934.4721  1766717    0.16%
  53800  5169        cutoff            936.0000      934.5088  1768148    0.16%
  53900  5052        cutoff            936.0000      934.5373  1769677    0.16%
  54000  4903        cutoff            936.0000      934.5741  1770878    0.15%
  54100  4805        cutoff            936.0000      934.6096  1771991    0.15%
  54200  4707        cutoff            936.0000      934.6495  1773622    0.14%
  54300  4577        cutoff            936.0000      934.6831  1774935    0.14%
  54400  4457        cutoff            936.0000      934.7186  1776062    0.14%
  54500  4323        cutoff            936.0000      934.7544  1777291    0.13%
  54600  4213        cutoff            936.0000      934.7844  1778620    0.13%
Elapsed time = 355.81 sec. (tree size = 45.34 MB, solutions = 15)
Nodefile size = 32.69 MB (26.07 MB after compression)
  54700  4092        cutoff            936.0000      934.8189  1779792    0.13%
  54800  3973      935.6429    67      936.0000      934.8521  1780938    0.12%
  54900  3815        cutoff            936.0000      934.8895  1781959    0.12%
  55000  3669        cutoff            936.0000      934.9189  1783335    0.12%
  55100  3579        cutoff            936.0000      934.9458  1784521    0.11%
  55200  3457        cutoff            936.0000      934.9827  1785520    0.11%
  55300  3307        cutoff            936.0000      935.0154  1786495    0.11%
  55400  3202        cutoff            936.0000      935.0486  1787469    0.10%
  55500  3106        cutoff            936.0000      935.0876  1788383    0.10%
  55600  2981        cutoff            936.0000      935.1203  1789478    0.09%
Elapsed time = 357.87 sec. (tree size = 29.16 MB, solutions = 15)
Nodefile size = 20.07 MB (15.94 MB after compression)
  55700  2881        cutoff            936.0000      935.1597  1790233    0.09%
  55800  2763        cutoff            936.0000      935.1979  1790947    0.09%
  55900  2649        cutoff            936.0000      935.2336  1791599    0.08%
  56000  2537        cutoff            936.0000      935.2648  1792451    0.08%
  56100  2437        cutoff            936.0000      935.2988  1793162    0.07%
  56200  2302        cutoff            936.0000      935.3389  1793898    0.07%
  56300  2166        cutoff            936.0000      935.3683  1794450    0.07%
  56400  2068        cutoff            936.0000      935.4043  1795075    0.06%
  56500  1943        cutoff            936.0000      935.4366  1795571    0.06%
  56600  1784        cutoff            936.0000      935.4694  1796118    0.06%
Elapsed time = 359.56 sec. (tree size = 16.93 MB, solutions = 15)
Nodefile size = 11.59 MB (9.20 MB after compression)
  56700  1690        cutoff            936.0000      935.5014  1796764    0.05%
  56800  1568        cutoff            936.0000      935.5399  1797186    0.05%
  56900  1460        cutoff            936.0000      935.5765  1797650    0.05%
  57000  1343        cutoff            936.0000      935.6076  1798084    0.04%
  57100  1227        cutoff            936.0000      935.6460  1798452    0.04%
  57200  1065        cutoff            936.0000      935.6861  1798950    0.03%
  57300   943        cutoff            936.0000      935.7227  1799273    0.03%
  57400   820        cutoff            936.0000      935.7538  1799574    0.03%
  57500   720        cutoff            936.0000      935.7912  1799821    0.02%
  57600   532        cutoff            936.0000      935.8324  1800160    0.02%
Elapsed time = 361.20 sec. (tree size =  4.87 MB, solutions = 15)
Nodefile size =  2.84 MB (2.27 MB after compression)
  57700   403        cutoff            936.0000      935.8652  1800365    0.01%
  57800   289        cutoff            936.0000      935.9039  1800571    0.01%

Clique cuts applied:  11
Cover cuts applied:  506
Implied bound cuts applied:  267
Flow cuts applied:  53
Mixed integer rounding cuts applied:  129
Zero-half cuts applied:  29
Gomory fractional cuts applied:  17
Lazy constraints applied:  19
Optimal
Lmax: 936
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 1
Job 9 into batch 9
Job 10 into batch 7
Job 11 into batch 11
Job 12 into batch 11
Job 13 into batch 13
Job 14 into batch 4
Job 15 into batch 15
Job 16 into batch 9
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 21
Job 23 into batch 23
Job 24 into batch 18
Job 25 into batch 13
Job 26 into batch 18
Job 27 into batch 23
Job 28 into batch 3
Job 29 into batch 29
Job 30 into batch 20
Job 31 into batch 9
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 23
Job 35 into batch 19
Job 36 into batch 33
Job 37 into batch 37
Job 38 into batch 15
Job 39 into batch 32
Job 40 into batch 15
Job 41 into batch 41
Job 42 into batch 41
Job 43 into batch 33
Job 44 into batch 41
Job 45 into batch 45
Job 46 into batch 45
Job 47 into batch 37
Job 48 into batch 5
Job 49 into batch 49
Job 0:	s=9	p=5	d=35	L=(-30+0-0)=-30=			Pk=5	Total size:9
Job 1:	s=8	p=13	d=50	L=(-32+0-0)=-32=			Pk=13	Total size:9
Job 2:	s=9	p=2	d=53	L=(-33+0-0)=-33=			Pk=2	Total size:9
Job 3:	s=2	p=80	d=108	L=(-8+0-0)=-8=			Pk=80	Total size:10
Job 4:	s=1	p=31	d=109	L=(22+12-0)=34=			Pk=44	Total size:10
Job 5:	s=5	p=71	d=117	L=(85+23-0)=108=			Pk=83	Total size:10
Job 6:	s=8	p=4	d=121	L=(85+23-0)=108=			Pk=4	Total size:8
Job 7:	s=8	p=5	d=125	L=(86+23-0)=109=			Pk=5	Total size:9
Job 8:	s=1	p=13	d=127	L=(97+10-1112)=-1005=			Pk=13	Total size:0
Job 9:	s=2	p=35	d=128	L=(131+16-9.87654e-13)=147=			Pk=42	Total size:10
Job 10:	s=1	p=4	d=135	L=(128+12-1112)=-972=			Pk=4	Total size:0
Job 11:	s=8	p=91	d=135	L=(219+12-0)=231=			Pk=91	Total size:10
Job 12:	s=2	p=82	d=136	L=(300+-70-1112)=-882=			Pk=82	Total size:0
Job 13:	s=1	p=46	d=141	L=(341+-58-0)=283=			Pk=58	Total size:10
Job 14:	s=9	p=44	d=142	L=(384+-102-1112)=-830=			Pk=44	Total size:0
Job 15:	s=6	p=48	d=147	L=(427+-94-0)=333=			Pk=56	Total size:10
Job 16:	s=7	p=42	d=151	L=(465+-136-1112)=-783=			Pk=42	Total size:0
Job 17:	s=10	p=95	d=152	L=(559+-136-0)=423=			Pk=95	Total size:10
Job 18:	s=2	p=20	d=153	L=(578+-126-0)=452=			Pk=30	Total size:10
Job 19:	s=6	p=84	d=153	L=(662+-126-0)=536=			Pk=84	Total size:10
Job 20:	s=4	p=35	d=155	L=(695+-120-0)=575=			Pk=41	Total size:10
Job 21:	s=6	p=19	d=157	L=(712+-105-0)=607=			Pk=34	Total size:10
Job 22:	s=4	p=34	d=166	L=(737+-139-1112)=-514=			Pk=34	Total size:0
Job 23:	s=3	p=48	d=167	L=(784+-139-0)=645=			Pk=48	Total size:10
Job 24:	s=3	p=27	d=178	L=(800+-166-1112)=-478=			Pk=27	Total size:0
Job 25:	s=9	p=58	d=190	L=(846+-224-1112)=-490=			Pk=58	Total size:0
Job 26:	s=5	p=30	d=191	L=(875+-254-1112)=-491=			Pk=30	Total size:0
Job 27:	s=4	p=46	d=209	L=(903+-300-1112)=-509=			Pk=46	Total size:0
Job 28:	s=8	p=79	d=213	L=(978+-379-1112)=-513=			Pk=79	Total size:0
Job 29:	s=10	p=52	d=226	L=(1017+-379-0)=638=			Pk=52	Total size:10
Job 30:	s=6	p=41	d=233	L=(1051+-420-1112)=-481=			Pk=41	Total size:0
Job 31:	s=1	p=42	d=240	L=(1086+-462-1112)=-488=			Pk=42	Total size:0
Job 32:	s=3	p=61	d=240	L=(1147+-444-0)=703=			Pk=79	Total size:10
Job 33:	s=5	p=95	d=241	L=(1241+-441-0)=800=			Pk=98	Total size:10
Job 34:	s=3	p=44	d=247	L=(1279+-485-1112)=-318=			Pk=44	Total size:0
Job 35:	s=4	p=63	d=254	L=(1335+-548-1112)=-325=			Pk=63	Total size:0
Job 36:	s=3	p=87	d=269	L=(1407+-635-1112)=-340=			Pk=87	Total size:0
Job 37:	s=8	p=90	d=270	L=(1496+-635-0)=861=			Pk=90	Total size:10
Job 38:	s=2	p=56	d=275	L=(1547+-691-1112)=-256=			Pk=56	Total size:0
Job 39:	s=7	p=79	d=278	L=(1623+-770-1112)=-259=			Pk=79	Total size:0
Job 40:	s=2	p=40	d=280	L=(1661+-810-1112)=-261=			Pk=40	Total size:0
Job 41:	s=1	p=87	d=300	L=(1728+-805-0)=923=			Pk=92	Total size:10
Job 42:	s=4	p=92	d=332	L=(1788+-897-1112)=-221=			Pk=92	Total size:0
Job 43:	s=2	p=98	d=339	L=(1879+-995-1112)=-228=			Pk=98	Total size:0
Job 44:	s=5	p=88	d=377	L=(1929+-1083-1112)=-266=			Pk=88	Total size:0
Job 45:	s=2	p=99	d=390	L=(2015+-1083-0)=932=			Pk=99	Total size:10
Job 46:	s=8	p=99	d=393	L=(2111+-1182-1112)=-183=			Pk=99	Total size:0
Job 47:	s=2	p=85	d=433	L=(2156+-1267-1112)=-223=			Pk=85	Total size:0
Job 48:	s=5	p=83	d=436	L=(2236+-1350-1112)=-226=			Pk=83	Total size:0
Job 49:	s=7	p=82	d=471	L=(2283+-1350-0)=933=			Pk=82	Total size:7

0
2
936
363.56 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-35.csv
93
115
159
192
193
206
220
232
255
286
302
308
324
329
340
355
383
488
500
572
606
630
639
687
724
731
736
750
819
828
858
878
897
921
926
928
964
967
970
1025
1034
1071
1102
1119
1226
1245
1247
1287
1290
1375
Job 0: due 93
Job 1: due 115
Job 2: due 159
Job 3: due 192
Job 4: due 193
Job 5: due 206
Job 6: due 220
Job 7: due 232
Job 8: due 255
Job 9: due 286
Job 10: due 302
Job 11: due 308
Job 12: due 324
Job 13: due 329
Job 14: due 340
Job 15: due 355
Job 16: due 383
Job 17: due 488
Job 18: due 500
Job 19: due 572
Job 20: due 606
Job 21: due 630
Job 22: due 639
Job 23: due 687
Job 24: due 724
Job 25: due 731
Job 26: due 736
Job 27: due 750
Job 28: due 819
Job 29: due 828
Job 30: due 858
Job 31: due 878
Job 32: due 897
Job 33: due 921
Job 34: due 926
Job 35: due 928
Job 36: due 964
Job 37: due 967
Job 38: due 970
Job 39: due 1025
Job 40: due 1034
Job 41: due 1071
Job 42: due 1102
Job 43: due 1119
Job 44: due 1226
Job 45: due 1245
Job 46: due 1247
Job 47: due 1287
Job 48: due 1290
Job 49: due 1375
Ignore all jobs after 47
Lmaxinc before safe moves: 1099
Now using unsafety tolerance 0
New Lmaxincnew: 418
Difference: 681
Lmaxinc after safe moves: 174724
Initial solution:
0 1 2 1 4 5 6 7 6 9 10 11 10 13 14 15 16 17 6 14 20 9 20 0 24 25 26 11 28 1 30 31 0 7 34 35 36 31 6 5 16 41 42 43 17 2 46 
Updating LmaxLB to -70.6. C=22.4, d=93Updating LmaxLB to -63.1. C=244.9, d=308Updating LmaxLB to -8.29999. C=346.7, d=355Updating LmaxLB to -4.29999. C=378.7, d=383Updating LmaxLB to 37.2001. C=965.2, d=928Updating LmaxLB to 60.4. C=1024.4, d=964Updating LmaxLB to 72.1. C=1039.1, d=967Updating LmaxLB to 77.5. C=1047.5, d=970Updating LmaxLB to 102.4. C=1173.4, d=1071Updating LmaxLB to 139.8. C=1241.8, d=1102Updating LmaxLB to 188.8. C=1307.8, d=1119Lower bound on Lmax based on areas:0
Max Lksingle:1099
Max reduction:1099
Now adding static psi-2-in-2 dominance rules ...
Added 480 safe move dominance lazy constraints
Added 214 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2578 rows and 1652 columns.
MIP Presolve modified 1822 coefficients.
Aggregator did 6 substitutions.
Reduced MIP has 780 rows, 600 columns, and 3438 nonzeros.
Reduced MIP has 552 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1535.
Problem contains 214 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0        5.8477   110                      5.8477      594         
      0     0       46.6598   113                   Cuts: 106      783         
      0     0       79.2695   113                    Cuts: 96      951         
      0     0       91.9394   123                   Cuts: 109     1063         
      0     0      101.2231   128                    Cuts: 87     1149         
      0     0      105.8642   135                    Cuts: 62     1211         
      0     0      110.6927   132                    Cuts: 71     1295         
*     0+    0                          418.0000      110.6927     1295   73.52%
      0     0      112.7091   134      418.0000      Cuts: 56     1339   73.04%
      0     0      113.2318   132      418.0000      Cuts: 42     1363   72.91%
      0     0      114.0295   134      418.0000      Cuts: 32     1385   72.72%
      0     0      114.1791   136      418.0000  Impl Bds: 13     1399   72.68%
      0     0      114.2639   139      418.0000  Impl Bds: 14     1407   72.66%
      0     0      114.2658   140      418.0000       Cuts: 5     1411   72.66%
      0     0      114.2927   140      418.0000   Impl Bds: 3     1424   72.66%
      0     0      114.3052   153      418.0000      Cuts: 11     1435   72.65%
      0     2      114.3052   151      418.0000      114.4217     1435   72.63%
Elapsed time =   0.46 sec. (tree size =  0.00 MB, solutions = 1)
    100    95      350.6211    21      418.0000      130.7232     6688   68.73%
    200   178      417.1667    11      418.0000      132.9784    10915   68.19%
*   240+  209                          397.0000      133.1842    13195   66.45%
*   250+  216                          388.0000      133.1842    13423   65.67%
*   290+  229                          361.0000      133.3830    15934   63.05%
    300   239        cutoff            361.0000      133.3830    16255   63.05%
    400   322      318.7914    55      361.0000      139.6477    22276   61.32%
    500   407      271.7726    80      361.0000      141.7178    28028   60.74%
*   520+  284                          342.0000      286.2656    29429   16.30%
*   520+  189                          333.0000      287.0481    29693   13.80%
*   520+  125                          302.0000      287.0481    29693    4.95%
*   520+   82                          301.0000      287.0481    29693    4.64%
*   520+   54                          300.0000      287.1759    30301    4.27%
*   547    27      integral     0      294.0000      289.5313    30962    1.52%
*   560+    9                          292.0000      290.7635    31133    0.42%

Clique cuts applied:  8
Cover cuts applied:  32
Implied bound cuts applied:  17
Flow cuts applied:  5
Mixed integer rounding cuts applied:  23
Zero-half cuts applied:  19
Gomory fractional cuts applied:  7
Lazy constraints applied:  7
Optimal
Lmax: 292
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 1
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 6
Job 10 into batch 7
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 0
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 11
Job 21 into batch 18
Job 22 into batch 18
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 14
Job 26 into batch 26
Job 27 into batch 16
Job 28 into batch 28
Job 29 into batch 1
Job 30 into batch 5
Job 31 into batch 23
Job 32 into batch 19
Job 33 into batch 12
Job 34 into batch 34
Job 35 into batch 35
Job 36 into batch 8
Job 37 into batch 23
Job 38 into batch 26
Job 39 into batch 17
Job 40 into batch 2
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 43
Job 44 into batch 44
Job 45 into batch 44
Job 46 into batch 46
Job 0:	s=8	p=28	d=93	L=(-65+0-0)=-65=			Pk=28	Total size:10
Job 1:	s=5	p=12	d=115	L=(-75+0-0)=-75=			Pk=12	Total size:10
Job 2:	s=7	p=79	d=159	L=(-40+0-0)=-40=			Pk=79	Total size:10
Job 3:	s=1	p=6	d=192	L=(-67+-6-418)=-491=			Pk=6	Total size:0
Job 4:	s=4	p=3	d=193	L=(-65+-5-0)=-70=			Pk=3	Total size:4
Job 5:	s=4	p=28	d=206	L=(-50+10-0)=-40=			Pk=43	Total size:10
Job 6:	s=6	p=86	d=220	L=(22+13-0)=35=			Pk=89	Total size:10
Job 7:	s=7	p=11	d=232	L=(21+17-0)=38=			Pk=15	Total size:10
Job 8:	s=2	p=69	d=255	L=(67+22-0)=89=			Pk=74	Total size:10
Job 9:	s=4	p=89	d=286	L=(125+-67-418)=-360=			Pk=89	Total size:0
Job 10:	s=3	p=15	d=302	L=(124+-82-418)=-376=			Pk=15	Total size:0
Job 11:	s=5	p=70	d=308	L=(188+-60-0)=128=			Pk=92	Total size:10
Job 12:	s=5	p=8	d=324	L=(180+-59-0)=121=			Pk=9	Total size:8
Job 13:	s=2	p=18	d=329	L=(193+-77-418)=-302=			Pk=18	Total size:0
Job 14:	s=2	p=41	d=340	L=(223+-58-0)=165=			Pk=60	Total size:10
Job 15:	s=10	p=86	d=355	L=(294+-58-0)=236=			Pk=86	Total size:10
Job 16:	s=5	p=64	d=383	L=(330+-53-0)=277=			Pk=69	Total size:10
Job 17:	s=5	p=20	d=488	L=(245+-47-0)=198=			Pk=26	Total size:10
Job 18:	s=1	p=62	d=500	L=(295+-22-0)=273=			Pk=87	Total size:10
Job 19:	s=8	p=21	d=572	L=(244+-22-0)=222=			Pk=21	Total size:9
Job 20:	s=5	p=92	d=606	L=(302+-114-418)=-230=			Pk=92	Total size:0
Job 21:	s=6	p=87	d=630	L=(365+-201-418)=-254=			Pk=87	Total size:0
Job 22:	s=3	p=60	d=639	L=(416+-261-418)=-263=			Pk=60	Total size:0
Job 23:	s=1	p=27	d=687	L=(395+-221-0)=174=			Pk=67	Total size:10
Job 24:	s=8	p=63	d=724	L=(421+-221-0)=200=			Pk=63	Total size:8
Job 25:	s=8	p=60	d=731	L=(474+-281-418)=-225=			Pk=60	Total size:0
Job 26:	s=8	p=91	d=736	L=(560+-281-0)=279=			Pk=91	Total size:9
Job 27:	s=5	p=69	d=750	L=(615+-350-418)=-153=			Pk=69	Total size:0
Job 28:	s=9	p=7	d=819	L=(553+-350-0)=203=			Pk=7	Total size:9
Job 29:	s=4	p=12	d=828	L=(556+-362-418)=-224=			Pk=12	Total size:0
Job 30:	s=6	p=43	d=858	L=(569+-405-418)=-254=			Pk=43	Total size:0
Job 31:	s=6	p=67	d=878	L=(616+-472-418)=-274=			Pk=67	Total size:0
Job 32:	s=1	p=17	d=897	L=(614+-489-418)=-293=			Pk=17	Total size:0
Job 33:	s=3	p=9	d=921	L=(599+-498-418)=-317=			Pk=9	Total size:0
Job 34:	s=10	p=88	d=926	L=(682+-498-0)=184=			Pk=88	Total size:10
Job 35:	s=9	p=66	d=928	L=(746+-498-0)=248=			Pk=66	Total size:9
Job 36:	s=8	p=74	d=964	L=(784+-572-418)=-206=			Pk=74	Total size:0
Job 37:	s=3	p=49	d=967	L=(830+-621-418)=-209=			Pk=49	Total size:0
Job 38:	s=1	p=84	d=970	L=(911+-705-418)=-212=			Pk=84	Total size:0
Job 39:	s=5	p=26	d=1025	L=(882+-731-418)=-267=			Pk=26	Total size:0
Job 40:	s=3	p=63	d=1034	L=(936+-794-418)=-276=			Pk=63	Total size:0
Job 41:	s=10	p=94	d=1071	L=(993+-794-0)=199=			Pk=94	Total size:10
Job 42:	s=9	p=76	d=1102	L=(1038+-794-0)=244=			Pk=76	Total size:9
Job 43:	s=10	p=66	d=1119	L=(1087+-794-0)=293=			Pk=66	Total size:10
Job 44:	s=5	p=20	d=1226	L=(1000+-743-0)=257=			Pk=71	Total size:8
Job 45:	s=3	p=71	d=1245	L=(1052+-814-418)=-180=			Pk=71	Total size:0
Job 46:	s=10	p=49	d=1247	L=(1099+-814-0)=285=			Pk=49	Total size:10

0
1.74074
292
4.6 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-36.csv
79
118
128
161
242
306
309
312
320
373
391
406
416
416
428
440
475
506
582
627
633
639
669
699
734
753
795
799
803
874
890
895
924
930
941
955
994
996
1035
1090
1090
1122
1136
1146
1156
1213
1255
1282
1303
1369
Job 0: due 79
Job 1: due 118
Job 2: due 128
Job 3: due 161
Job 4: due 242
Job 5: due 306
Job 6: due 309
Job 7: due 312
Job 8: due 320
Job 9: due 373
Job 10: due 391
Job 11: due 406
Job 12: due 416
Job 13: due 416
Job 14: due 428
Job 15: due 440
Job 16: due 475
Job 17: due 506
Job 18: due 582
Job 19: due 627
Job 20: due 633
Job 21: due 639
Job 22: due 669
Job 23: due 699
Job 24: due 734
Job 25: due 753
Job 26: due 795
Job 27: due 799
Job 28: due 803
Job 29: due 874
Job 30: due 890
Job 31: due 895
Job 32: due 924
Job 33: due 930
Job 34: due 941
Job 35: due 955
Job 36: due 994
Job 37: due 996
Job 38: due 1035
Job 39: due 1090
Job 40: due 1090
Job 41: due 1122
Job 42: due 1136
Job 43: due 1146
Job 44: due 1156
Job 45: due 1213
Job 46: due 1255
Job 47: due 1282
Job 48: due 1303
Job 49: due 1369
Ignore all jobs after 49
Lmaxinc before safe moves: 1051
Now using unsafety tolerance 0
New Lmaxincnew: 232
Difference: 819
Lmaxinc after safe moves: 53824
Initial solution:
0 1 2 3 4 5 6 1 8 9 10 11 12 13 14 15 16 3 2 19 20 19 22 23 20 14 22 2 28 1 5 2 32 13 9 35 19 37 38 39 40 35 15 32 12 2 3 9 32 
Updating LmaxLB to -63. C=16, d=79same duedate: 12
same duedate: 39
Lower bound on Lmax based on areas:-2147483648
Max Lksingle:1051
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 513 safe move dominance lazy constraints
Added 265 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2708 rows and 1721 columns.
MIP Presolve modified 1777 coefficients.
Aggregator did 3 substitutions.
Reduced MIP has 1011 rows, 728 columns, and 4536 nonzeros.
Reduced MIP has 678 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1814.
Problem contains 265 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      -63.0000    99                    -63.0000      372         
      0     0      -63.0000    64                    Cuts: 24      424         
      0     0      -63.0000    88                    Cuts: 53      596         
      0     0      -57.4748    82                    Cuts: 35      721         
      0     0      -55.4644    92                    Cuts: 42      796         
      0     0      -49.9958    82                    Cuts: 28      849         
      0     0      -43.9131    84                    Cuts: 32      909         
      0     0      -42.9956    89                    Cuts: 24      966         
      0     0      -42.8608    86                    Cuts: 23     1002         
      0     0      -42.8608    92                    Cuts: 15     1032         
*     0+    0                          194.0000      -42.8608     1032  122.09%
      0     2      -42.8608    92      194.0000      -42.4560     1032  121.88%
Elapsed time =   0.42 sec. (tree size =  0.00 MB, solutions = 1)
*    60+   60                          138.0000      -36.7380     5929  126.62%
    100    90       96.8889    36      138.0000      -36.2669     8546  126.28%
*   130+  116                          122.0000      -36.2669     9886  129.73%
    200   177       57.0000    63      122.0000      -20.3190    14283  116.65%
*   230+  137                           93.0000      -20.3190    15828  121.85%
*   230+  135                           92.0000      -20.3190    15828  122.09%
    300   204       46.0000    43       92.0000      -19.0144    18674  120.67%
    400   291        cutoff             92.0000       -2.6393    22218  102.87%
*   474+  238                           88.0000        3.2395    26235   96.32%
*   474+  158                           75.0000        3.2657    26496   95.65%
*   474+  105                           57.0000        3.2657    26654   94.27%
    500   120       22.8990    62       57.0000        8.0921    28283   85.80%
*   524+   99                           56.0000        8.0921    28763   85.55%
*   524+   79                           51.0000        8.0921    28763   84.13%
    600    96       35.5584    40       51.0000        9.6667    32267   81.05%
*   624+  107                           48.0000        9.6667    33175   79.86%
    700   168       43.4091    64       48.0000       11.7793    34938   75.46%
    800   252       22.0743    70       48.0000       12.0000    37961   75.00%
    900   336       46.9960    61       48.0000       12.0000    40185   75.00%
   1000   424       42.8926    33       48.0000       12.0000    45054   75.00%
Elapsed time =   8.07 sec. (tree size =  1.98 MB, solutions = 11)
*  1034+  315                           38.0000       12.0000    47723   68.42%
*  1044+  285                           35.0000       12.0000    47832   65.71%
   1100   338       32.1811    49       35.0000       12.0000    49064   65.71%
   1200   419       13.3125    71       35.0000       12.0000    52289   65.71%
   1300   515       18.9399    63       35.0000       12.0000    54054   65.71%
   1400   584       13.0097    78       35.0000       12.5729    57152   64.08%
   1500   650        cutoff             35.0000       12.9727    60278   62.94%
   1600   737       30.7131    38       35.0000       13.1180    62732   62.52%
   1700   815       30.8655    54       35.0000       13.1556    64962   62.41%
   1800   889       24.7030   105       35.0000       13.5655    67094   61.24%
   1900   975       19.1264    58       35.0000       13.7019    69735   60.85%
   2000  1058       22.6007    71       35.0000       13.8690    71610   60.37%
Elapsed time =  11.61 sec. (tree size =  6.12 MB, solutions = 13)
   2100  1130        cutoff             35.0000       14.0216    73341   59.94%
*  2184+ 1139                           33.0000       14.1485    74796   57.13%
   2200  1157       25.1070    62       33.0000       14.1485    75094   57.13%
   2300  1228       31.9131    44       33.0000       14.2983    77335   56.67%
   2400  1306       20.4568    69       33.0000       14.4016    79425   56.36%
   2500  1386       17.8792    71       33.0000       14.5295    81403   55.97%
   2600  1472       30.0704    51       33.0000       14.5602    83089   55.88%
   2700  1546       19.9198    49       33.0000       14.7023    85279   55.45%
   2800  1624       21.1476    65       33.0000       14.8727    87316   54.93%
*  2854+ 1630                           32.0000       14.8827    88195   53.49%
   2900  1662       24.2369    84       32.0000       14.9490    89091   53.28%
   3000  1723       30.4245    33       32.0000       15.1881    91301   52.54%
Elapsed time =  14.60 sec. (tree size = 10.57 MB, solutions = 15)
   3100  1784       23.0199    76       32.0000       15.4234    93431   51.80%
   3200  1841       24.4328    80       32.0000       15.5000    96359   51.56%
   3300  1906       27.4089    75       32.0000       15.5000    99753   51.56%
   3400  1969       26.3467    51       32.0000       15.5824   102026   51.30%
   3500  2024       19.3653    75       32.0000       15.7154   104668   50.89%
   3600  2099       31.4226    63       32.0000       15.7759   106769   50.70%
   3700  2165       31.1734    52       32.0000       15.9190   109009   50.25%
   3800  2228       31.5212    62       32.0000       16.0111   111475   49.97%
   3900  2296       25.5421    56       32.0000       16.1211   113634   49.62%
   4000  2341       22.7647    54       32.0000       16.2874   116401   49.10%
Elapsed time =  18.31 sec. (tree size = 14.84 MB, solutions = 15)
   4100  2396       16.8555    58       32.0000       16.3992   119123   48.75%
   4200  2441        cutoff             32.0000       16.5041   121751   48.42%
*  4264+ 1851                           27.0000       16.5919   123259   38.55%
   4300  1865       19.3237    60       27.0000       16.6443   124015   38.35%
   4400  1898       21.8563    85       27.0000       16.8188   126418   37.71%
   4500  1916       19.6805    82       27.0000       17.0314   129802   36.92%
   4600  1923    infeasible             27.0000       17.2731   132272   36.03%
   4700  1951       26.5368    55       27.0000       17.5486   133972   35.01%
   4800  1947    infeasible             27.0000       17.8091   137268   34.04%
   4900  1965       17.9796    59       27.0000       17.9796   140077   33.41%
   5000  1954       26.9340    73       27.0000       18.2528   142363   32.40%
Elapsed time =  22.22 sec. (tree size = 13.46 MB, solutions = 16)
   5100  1948       19.4980    66       27.0000       18.5385   144293   31.34%
   5200  1961       23.0967    32       27.0000       18.6503   146436   30.92%
   5300  1913        cutoff             27.0000       18.9996   148151   29.63%
   5400  1938        cutoff             27.0000       19.0000   154231   29.63%
   5500  1974       22.7197    60       27.0000       19.0000   159439   29.63%
   5600  1988        cutoff             27.0000       19.1249   162408   29.17%
   5700  1931    infeasible             27.0000       19.4040   164690   28.13%
   5800  1955       25.9302    46       27.0000       19.4913   167013   27.81%
   5900  1921        cutoff             27.0000       19.6818   169874   27.10%
   6000  1921       22.7244    45       27.0000       19.8618   172720   26.44%
Elapsed time =  26.34 sec. (tree size = 13.89 MB, solutions = 16)
   6100  1890    infeasible             27.0000       20.0860   174986   25.61%
   6200  1857       20.9073    44       27.0000       20.2669   177108   24.94%
   6300  1826       24.1450    53       27.0000       20.4407   179650   24.29%
   6400  1824       26.1037    28       27.0000       20.5731   182667   23.80%
   6500  1795       25.4680    54       27.0000       20.7326   184636   23.21%
   6600  1745       25.6990    56       27.0000       20.9412   186762   22.44%
   6700  1719       25.7803    62       27.0000       21.1324   188636   21.73%
   6800  1669        cutoff             27.0000       21.3351   190934   20.98%
   6900  1617    infeasible             27.0000       21.5398   193163   20.22%
   7000  1560       23.1844    30       27.0000       21.7476   194954   19.45%
Elapsed time =  29.48 sec. (tree size = 10.88 MB, solutions = 16)
   7100  1496    infeasible             27.0000       21.9966   196391   18.53%
   7200  1425    infeasible             27.0000       22.2017   197919   17.77%
   7300  1363        cutoff             27.0000       22.3478   199506   17.23%
   7400  1301    infeasible             27.0000       22.5790   201090   16.37%
   7500  1204    infeasible             27.0000       22.9178   201894   15.12%
   7600  1120        cutoff             27.0000       23.2093   203277   14.04%
   7700  1050    infeasible             27.0000       23.4018   204541   13.33%
   7800   954        cutoff             27.0000       23.6970   205737   12.23%
   7900   875        cutoff             27.0000       23.9867   207277   11.16%
   8000   793        cutoff             27.0000       24.2058   208790   10.35%
Elapsed time =  31.44 sec. (tree size =  5.40 MB, solutions = 16)
   8100   715       26.0000    32       27.0000       24.4716   210196    9.36%
   8200   623        cutoff             27.0000       24.7517   211070    8.33%
   8300   540    infeasible             27.0000       24.9652   212260    7.54%
   8400   446    infeasible             27.0000       25.2530   213148    6.47%
   8500   351    infeasible             27.0000       25.5550   213460    5.35%
   8600   251    infeasible             27.0000       25.8996   213765    4.08%
   8700   158    infeasible             27.0000       26.2261   214835    2.87%
   8800    59        cutoff             27.0000       26.7230   214941    1.03%

Clique cuts applied:  18
Cover cuts applied:  164
Implied bound cuts applied:  56
Flow cuts applied:  12
Mixed integer rounding cuts applied:  45
Zero-half cuts applied:  19
Gomory fractional cuts applied:  14
Lazy constraints applied:  14
Optimal
Lmax: 27
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 2
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 1
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 9
Job 14 into batch 4
Job 15 into batch 5
Job 16 into batch 16
Job 17 into batch 12
Job 18 into batch 2
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 21
Job 23 into batch 23
Job 24 into batch 20
Job 25 into batch 25
Job 26 into batch 21
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 1
Job 30 into batch 30
Job 31 into batch 27
Job 32 into batch 30
Job 33 into batch 19
Job 34 into batch 19
Job 35 into batch 27
Job 36 into batch 36
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 36
Job 41 into batch 41
Job 42 into batch 41
Job 43 into batch 41
Job 44 into batch 44
Job 45 into batch 16
Job 46 into batch 36
Job 47 into batch 47
Job 48 into batch 47
Job 0:	s=10	p=16	d=79	L=(-63+0-0)=-63=			Pk=16	Total size:10
Job 1:	s=3	p=5	d=118	L=(-97+0-0)=-97=			Pk=6	Total size:10
Job 2:	s=2	p=38	d=128	L=(-69+15-0)=-54=			Pk=53	Total size:9
Job 3:	s=4	p=53	d=161	L=(-49+-38-232)=-319=			Pk=53	Total size:0
Job 4:	s=8	p=7	d=242	L=(-123+-34-0)=-157=			Pk=11	Total size:10
Job 5:	s=3	p=87	d=306	L=(-100+-32-0)=-132=			Pk=89	Total size:10
Job 6:	s=10	p=1	d=309	L=(-102+-32-0)=-134=			Pk=1	Total size:10
Job 7:	s=2	p=6	d=312	L=(-99+-38-232)=-369=			Pk=6	Total size:0
Job 8:	s=10	p=46	d=320	L=(-61+-38-0)=-99=			Pk=46	Total size:10
Job 9:	s=2	p=83	d=373	L=(-31+-38-0)=-69=			Pk=83	Total size:9
Job 10:	s=9	p=55	d=391	L=(6+-38-0)=-32=			Pk=55	Total size:9
Job 11:	s=3	p=2	d=406	L=(-7+-38-0)=-45=			Pk=2	Total size:3
Job 12:	s=5	p=55	d=416	L=(38+-38-0)=0=			Pk=55	Total size:10
Job 13:	s=7	p=81	d=416	L=(119+-119-232)=-232=			Pk=81	Total size:0
Job 14:	s=2	p=11	d=428	L=(118+-130-232)=-244=			Pk=11	Total size:0
Job 15:	s=7	p=89	d=440	L=(195+-219-232)=-256=			Pk=89	Total size:0
Job 16:	s=9	p=77	d=475	L=(237+-219-0)=18=			Pk=77	Total size:10
Job 17:	s=5	p=53	d=506	L=(259+-272-232)=-245=			Pk=53	Total size:0
Job 18:	s=3	p=35	d=582	L=(218+-307-232)=-321=			Pk=35	Total size:0
Job 19:	s=4	p=79	d=627	L=(252+-304-0)=-52=			Pk=82	Total size:10
Job 20:	s=4	p=16	d=633	L=(262+-304-0)=-42=			Pk=16	Total size:9
Job 21:	s=2	p=68	d=639	L=(324+-304-0)=20=			Pk=68	Total size:9
Job 22:	s=5	p=63	d=669	L=(357+-367-232)=-242=			Pk=63	Total size:0
Job 23:	s=9	p=6	d=699	L=(333+-367-0)=-34=			Pk=6	Total size:9
Job 24:	s=5	p=14	d=734	L=(312+-381-232)=-301=			Pk=14	Total size:0
Job 25:	s=8	p=6	d=753	L=(299+-381-0)=-82=			Pk=6	Total size:8
Job 26:	s=2	p=60	d=795	L=(317+-441-232)=-356=			Pk=60	Total size:0
Job 27:	s=2	p=23	d=799	L=(336+-419-0)=-83=			Pk=45	Total size:10
Job 28:	s=10	p=17	d=803	L=(349+-419-0)=-70=			Pk=17	Total size:10
Job 29:	s=5	p=6	d=874	L=(284+-425-232)=-373=			Pk=6	Total size:0
Job 30:	s=7	p=87	d=890	L=(355+-419-0)=-64=			Pk=93	Total size:10
Job 31:	s=2	p=37	d=895	L=(387+-456-232)=-301=			Pk=37	Total size:0
Job 32:	s=3	p=93	d=924	L=(451+-549-232)=-330=			Pk=93	Total size:0
Job 33:	s=3	p=73	d=930	L=(518+-622-232)=-336=			Pk=73	Total size:0
Job 34:	s=3	p=82	d=941	L=(589+-704-232)=-347=			Pk=82	Total size:0
Job 35:	s=6	p=45	d=955	L=(620+-749-232)=-361=			Pk=45	Total size:0
Job 36:	s=4	p=77	d=994	L=(658+-749-0)=-91=			Pk=77	Total size:10
Job 37:	s=9	p=97	d=996	L=(753+-749-0)=4=			Pk=97	Total size:9
Job 38:	s=9	p=47	d=1035	L=(761+-749-0)=12=			Pk=47	Total size:9
Job 39:	s=10	p=18	d=1090	L=(724+-749-0)=-25=			Pk=18	Total size:10
Job 40:	s=5	p=71	d=1090	L=(795+-820-232)=-257=			Pk=71	Total size:0
Job 41:	s=4	p=42	d=1122	L=(805+-793-0)=12=			Pk=69	Total size:10
Job 42:	s=3	p=69	d=1136	L=(860+-862-232)=-234=			Pk=69	Total size:0
Job 43:	s=3	p=67	d=1146	L=(917+-929-232)=-244=			Pk=67	Total size:0
Job 44:	s=4	p=48	d=1156	L=(955+-929-0)=26=			Pk=48	Total size:4
Job 45:	s=1	p=20	d=1213	L=(918+-949-232)=-263=			Pk=20	Total size:0
Job 46:	s=1	p=48	d=1255	L=(924+-997-232)=-305=			Pk=48	Total size:0
Job 47:	s=4	p=82	d=1282	L=(979+-986-0)=-7=			Pk=93	Total size:8
Job 48:	s=4	p=93	d=1303	L=(1051+-1079-232)=-260=			Pk=93	Total size:0

-2147483648
1.81481
27
32.62 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-37.csv
60
65
66
84
88
92
99
101
103
105
107
115
118
130
131
135
135
138
139
139
139
147
156
157
158
162
169
176
183
185
195
199
210
213
220
225
225
227
233
251
254
256
267
267
269
271
273
322
361
391
Job 0: due 60
Job 1: due 65
Job 2: due 66
Job 3: due 84
Job 4: due 88
Job 5: due 92
Job 6: due 99
Job 7: due 101
Job 8: due 103
Job 9: due 105
Job 10: due 107
Job 11: due 115
Job 12: due 118
Job 13: due 130
Job 14: due 131
Job 15: due 135
Job 16: due 135
Job 17: due 138
Job 18: due 139
Job 19: due 139
Job 20: due 139
Job 21: due 147
Job 22: due 156
Job 23: due 157
Job 24: due 158
Job 25: due 162
Job 26: due 169
Job 27: due 176
Job 28: due 183
Job 29: due 185
Job 30: due 195
Job 31: due 199
Job 32: due 210
Job 33: due 213
Job 34: due 220
Job 35: due 225
Job 36: due 225
Job 37: due 227
Job 38: due 233
Job 39: due 251
Job 40: due 254
Job 41: due 256
Job 42: due 267
Job 43: due 267
Job 44: due 269
Job 45: due 271
Job 46: due 273
Job 47: due 322
Job 48: due 361
Job 49: due 391
Ignore all jobs after 50
Lmaxinc before safe moves: 2171
Now using unsafety tolerance 0
New Lmaxincnew: 1546
Difference: 625
Lmaxinc after safe moves: 2.39012e+06
Initial solution:
0 1 2 3 4 5 6 7 2 9 10 11 12 13 14 2 16 6 18 19 10 13 22 23 24 6 26 27 28 29 10 27 32 33 34 35 36 37 13 23 40 41 42 43 44 7 22 47 48 40 
Updating LmaxLB to -59.4. C=0.6, d=60Updating LmaxLB to -3.4. C=61.6, d=65Updating LmaxLB to -0.800003. C=65.2, d=66Updating LmaxLB to 25.2. C=109.2, d=84Updating LmaxLB to 26.7. C=114.7, d=88Updating LmaxLB to 60.7. C=152.7, d=92Updating LmaxLB to 68.1. C=167.1, d=99Updating LmaxLB to 118.3. C=219.3, d=101Updating LmaxLB to 119.1. C=222.1, d=103Updating LmaxLB to 131.5. C=236.5, d=105Updating LmaxLB to 167.5. C=274.5, d=107Updating LmaxLB to 184.7. C=299.7, d=115Updating LmaxLB to 190.1. C=308.1, d=118Updating LmaxLB to 212.1. C=342.1, d=130Updating LmaxLB to 216.7. C=347.7, d=131same duedate: 15
Updating LmaxLB to 222.3. C=357.3, d=135Updating LmaxLB to 226.1. C=364.1, d=138same duedate: 18
same duedate: 19
Updating LmaxLB to 339. C=478, d=139Updating LmaxLB to 351.9. C=507.9, d=156Updating LmaxLB to 388.9. C=545.9, d=157Updating LmaxLB to 452.7. C=610.7, d=158Updating LmaxLB to 461.9. C=623.9, d=162Updating LmaxLB to 493.4. C=662.4, d=169Updating LmaxLB to 506.4. C=682.4, d=176Updating LmaxLB to 519.7. C=702.7, d=183Updating LmaxLB to 528.1. C=713.1, d=185Updating LmaxLB to 532.5. C=731.5, d=199Updating LmaxLB to 581.5. C=791.5, d=210Updating LmaxLB to 612.8. C=825.8, d=213Updating LmaxLB to 641.8. C=861.8, d=220same duedate: 35
Updating LmaxLB to 792.6. C=1017.6, d=225Updating LmaxLB to 817.2. C=1044.2, d=227Updating LmaxLB to 835.6. C=1068.6, d=233Updating LmaxLB to 836.8. C=1087.8, d=251Updating LmaxLB to 893.2. C=1147.2, d=254Updating LmaxLB to 969.2. C=1225.2, d=256same duedate: 42
Updating LmaxLB to 1056. C=1323, d=267Updating LmaxLB to 1096.5. C=1365.5, d=269Updating LmaxLB to 1100. C=1371, d=271Updating LmaxLB to 1125.5. C=1398.5, d=273Updating LmaxLB to 1148.1. C=1509.1, d=361Lower bound on Lmax based on areas:0
Max Lksingle:2171
Max reduction:2171
Now adding static psi-2-in-2 dominance rules ...
Added 237 safe move dominance lazy constraints
Added 127 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 3159 rows and 2020 columns.
MIP Presolve modified 2156 coefficients.
Aggregator did 7 substitutions.
Reduced MIP has 704 rows, 525 columns, and 2787 nonzeros.
Reduced MIP has 474 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.01 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 898.
Problem contains 127 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.01 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      954.3498   126                    954.3498      321         
      0     0     1058.3828   134                   Cuts: 104      474         
      0     0     1094.5427   104                   Cuts: 112      610         
      0     0     1110.5253   111                    Cuts: 95      702         
      0     0     1126.9732   142                    Cuts: 89      800         
      0     0     1132.8734   129                    Cuts: 96      920         
      0     0     1134.2348   132                    Cuts: 47      956         
*     0+    0                         1507.0000     1134.2348      956   24.74%
      0     0     1135.5036   123     1507.0000      Cuts: 41      994   24.65%
      0     0     1138.0098   132     1507.0000      Cuts: 48     1038   24.49%
      0     0     1140.0237   134     1507.0000      Cuts: 51     1064   24.35%
      0     0     1142.3236   158     1507.0000      Cuts: 44     1094   24.20%
*     0+    0                         1456.0000     1142.3236     1094   21.54%
      0     0     1142.6626   137     1456.0000      Cuts: 54     1103   21.52%
      0     0     1142.7890   155     1456.0000      Cuts: 25     1114   21.51%
      0     0     1142.8363   134     1456.0000      Cuts: 62     1122   21.51%
      0     0     1142.8454   135     1456.0000       Cuts: 9     1129   21.51%
*     0+    0                         1443.0000     1142.8454     1129   20.80%
      0     2     1142.8454   133     1443.0000     1142.9800     1129   20.79%
Elapsed time =   0.40 sec. (tree size =  0.00 MB, solutions = 3)
*    60+   52                         1433.0000     1147.9601     4231   19.89%
    100    94     1394.2433    27     1433.0000     1147.9601     6164   19.89%
*   160+  141                         1423.0000     1150.7209     8469   19.13%
*   160+  133                         1402.0000     1150.7209     8469   17.92%
    200   172     1251.0838    56     1402.0000     1153.1056     9726   17.75%
    300   265     1383.9668    46     1402.0000     1157.5354    13023   17.44%
    400   350     1319.6881    69     1402.0000     1159.6464    15461   17.29%
    500   440     1370.5733    73     1402.0000     1160.0276    19558   17.26%
*   504+  294                         1332.0000     1310.2214    20055    1.64%
*   504+  196                         1328.0000     1313.1028    20127    1.12%

Clique cuts applied:  3
Cover cuts applied:  18
Implied bound cuts applied:  38
Flow cuts applied:  5
Mixed integer rounding cuts applied:  7
Zero-half cuts applied:  15
Gomory fractional cuts applied:  12
Lazy constraints applied:  2
Optimal
Lmax: 1328
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 2
Job 5 into batch 5
Job 6 into batch 0
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 11
Job 16 into batch 16
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 20
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 21
Job 25 into batch 0
Job 26 into batch 17
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 30
Job 31 into batch 29
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 22
Job 35 into batch 35
Job 36 into batch 30
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 27
Job 40 into batch 10
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 38
Job 44 into batch 23
Job 45 into batch 35
Job 46 into batch 13
Job 47 into batch 20
Job 48 into batch 48
Job 49 into batch 48
Job 0:	s=2	p=3	d=60	L=(-57+33-0)=-24=			Pk=36	Total size:10
Job 1:	s=10	p=61	d=65	L=(-1+33-0)=32=			Pk=61	Total size:10
Job 2:	s=4	p=9	d=66	L=(7+35-0)=42=			Pk=11	Total size:9
Job 3:	s=10	p=44	d=84	L=(33+35-0)=68=			Pk=44	Total size:10
Job 4:	s=5	p=11	d=88	L=(40+24-1546)=-1482=			Pk=11	Total size:0
Job 5:	s=10	p=38	d=92	L=(74+24-0)=98=			Pk=38	Total size:10
Job 6:	s=4	p=36	d=99	L=(103+-12-1546)=-1455=			Pk=36	Total size:0
Job 7:	s=9	p=58	d=101	L=(159+-12-0)=147=			Pk=58	Total size:9
Job 8:	s=4	p=7	d=103	L=(164+-12-0)=152=			Pk=7	Total size:4
Job 9:	s=8	p=18	d=105	L=(180+-11-0)=169=			Pk=18	Total size:8
Job 10:	s=4	p=95	d=107	L=(273+-7-0)=266=			Pk=99	Total size:10
Job 11:	s=7	p=36	d=115	L=(301+-7-0)=294=			Pk=36	Total size:9
Job 12:	s=7	p=12	d=118	L=(310+-6-0)=304=			Pk=12	Total size:7
Job 13:	s=5	p=68	d=130	L=(366+-6-0)=360=			Pk=68	Total size:10
Job 14:	s=8	p=7	d=131	L=(372+-6-0)=366=			Pk=7	Total size:8
Job 15:	s=2	p=8	d=135	L=(376+-14-1546)=-1184=			Pk=8	Total size:0
Job 16:	s=10	p=8	d=135	L=(384+-14-0)=370=			Pk=8	Total size:10
Job 17:	s=2	p=34	d=138	L=(415+6-0)=421=			Pk=55	Total size:9
Job 18:	s=8	p=22	d=139	L=(436+6-0)=442=			Pk=22	Total size:8
Job 19:	s=8	p=61	d=139	L=(497+6-0)=503=			Pk=61	Total size:8
Job 20:	s=5	p=95	d=139	L=(592+9-0)=601=			Pk=98	Total size:10
Job 21:	s=1	p=67	d=147	L=(651+14-0)=665=			Pk=72	Total size:10
Job 22:	s=4	p=58	d=156	L=(700+15-0)=715=			Pk=60	Total size:10
Job 23:	s=5	p=76	d=157	L=(775+24-0)=799=			Pk=85	Total size:10
Job 24:	s=9	p=72	d=158	L=(846+-48-1546)=-748=			Pk=72	Total size:0
Job 25:	s=4	p=33	d=162	L=(875+-81-1546)=-752=			Pk=33	Total size:0
Job 26:	s=7	p=55	d=169	L=(923+-136-1546)=-759=			Pk=55	Total size:0
Job 27:	s=5	p=40	d=176	L=(956+-128-0)=828=			Pk=48	Total size:9
Job 28:	s=7	p=29	d=183	L=(978+-128-0)=850=			Pk=29	Total size:7
Job 29:	s=4	p=26	d=185	L=(1002+-126-0)=876=			Pk=28	Total size:8
Job 30:	s=1	p=72	d=195	L=(1064+-100-0)=964=			Pk=98	Total size:9
Job 31:	s=4	p=28	d=199	L=(1088+-128-1546)=-586=			Pk=28	Total size:0
Job 32:	s=10	p=60	d=210	L=(1137+-128-0)=1009=			Pk=60	Total size:10
Job 33:	s=7	p=49	d=213	L=(1183+-128-0)=1055=			Pk=49	Total size:7
Job 34:	s=6	p=60	d=220	L=(1236+-188-1546)=-498=			Pk=60	Total size:0
Job 35:	s=9	p=86	d=225	L=(1317+-188-0)=1129=			Pk=86	Total size:10
Job 36:	s=8	p=98	d=225	L=(1415+-286-1546)=-417=			Pk=98	Total size:0
Job 37:	s=7	p=38	d=227	L=(1451+-286-0)=1165=			Pk=38	Total size:7
Job 38:	s=4	p=61	d=233	L=(1506+-279-0)=1227=			Pk=68	Total size:10
Job 39:	s=4	p=48	d=251	L=(1536+-327-1546)=-337=			Pk=48	Total size:0
Job 40:	s=6	p=99	d=254	L=(1632+-426-1546)=-340=			Pk=99	Total size:0
Job 41:	s=10	p=78	d=256	L=(1708+-426-0)=1282=			Pk=78	Total size:10
Job 42:	s=10	p=57	d=267	L=(1754+-426-0)=1328=			Pk=57	Total size:10
Job 43:	s=6	p=68	d=267	L=(1822+-494-1546)=-218=			Pk=68	Total size:0
Job 44:	s=5	p=85	d=269	L=(1905+-579-1546)=-220=			Pk=85	Total size:0
Job 45:	s=1	p=55	d=271	L=(1958+-634-1546)=-222=			Pk=55	Total size:0
Job 46:	s=5	p=55	d=273	L=(2011+-689-1546)=-224=			Pk=55	Total size:0
Job 47:	s=5	p=98	d=322	L=(2060+-787-1546)=-273=			Pk=98	Total size:0
Job 48:	s=7	p=88	d=361	L=(2109+-783-0)=1326=			Pk=92	Total size:10
Job 49:	s=3	p=92	d=391	L=(2171+-875-1546)=-250=			Pk=92	Total size:0

0
1.51515
1328
2.85 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-38.csv
10
38
39
57
76
79
88
98
98
102
104
105
106
125
136
143
145
148
156
157
157
160
160
161
164
168
171
174
179
181
214
243
247
257
259
267
268
275
306
314
319
350
356
387
393
399
425
436
444
465
Job 0: due 10
Job 1: due 38
Job 2: due 39
Job 3: due 57
Job 4: due 76
Job 5: due 79
Job 6: due 88
Job 7: due 98
Job 8: due 98
Job 9: due 102
Job 10: due 104
Job 11: due 105
Job 12: due 106
Job 13: due 125
Job 14: due 136
Job 15: due 143
Job 16: due 145
Job 17: due 148
Job 18: due 156
Job 19: due 157
Job 20: due 157
Job 21: due 160
Job 22: due 160
Job 23: due 161
Job 24: due 164
Job 25: due 168
Job 26: due 171
Job 27: due 174
Job 28: due 179
Job 29: due 181
Job 30: due 214
Job 31: due 243
Job 32: due 247
Job 33: due 257
Job 34: due 259
Job 35: due 267
Job 36: due 268
Job 37: due 275
Job 38: due 306
Job 39: due 314
Job 40: due 319
Job 41: due 350
Job 42: due 356
Job 43: due 387
Job 44: due 393
Job 45: due 399
Job 46: due 425
Job 47: due 436
Job 48: due 444
Job 49: due 465
Ignore all jobs after 50
Lmaxinc before safe moves: 2083
Now using unsafety tolerance 0
New Lmaxincnew: 1295
Difference: 788
Lmaxinc after safe moves: 1.67702e+06
Initial solution:
0 1 2 3 4 3 6 1 8 1 10 11 12 13 6 15 15 17 18 19 20 20 22 23 24 25 8 22 28 29 10 20 32 33 20 35 36 22 15 39 32 41 42 25 44 45 46 47 48 32 
Updating LmaxLB to -9. C=1, d=10same duedate: 7
Updating LmaxLB to -6.5. C=98.5, d=105Updating LmaxLB to 8.5. C=114.5, d=106Updating LmaxLB to 24.3. C=167.3, d=143Updating LmaxLB to 40.3. C=185.3, d=145Updating LmaxLB to 48.3. C=196.3, d=148Updating LmaxLB to 67.5. C=223.5, d=156same duedate: 19
Updating LmaxLB to 95.6. C=252.6, d=157same duedate: 21
Updating LmaxLB to 117.4. C=277.4, d=160Updating LmaxLB to 137.2. C=298.2, d=161Updating LmaxLB to 182.8. C=346.8, d=164Updating LmaxLB to 222.3. C=390.3, d=168Updating LmaxLB to 225.7. C=396.7, d=171Updating LmaxLB to 245.7. C=419.7, d=174Updating LmaxLB to 278.3. C=457.3, d=179Updating LmaxLB to 296.6. C=477.6, d=181Updating LmaxLB to 303.2. C=550.2, d=247Updating LmaxLB to 314.7. C=571.7, d=257Updating LmaxLB to 340.7. C=599.7, d=259Updating LmaxLB to 405.5. C=672.5, d=267Updating LmaxLB to 454.9. C=722.9, d=268Updating LmaxLB to 504.8. C=818.8, d=314Updating LmaxLB to 515.6. C=834.6, d=319Updating LmaxLB to 533.1. C=883.1, d=350Updating LmaxLB to 577.5. C=933.5, d=356Updating LmaxLB to 579.3. C=966.3, d=387Updating LmaxLB to 632.1. C=1025.1, d=393Updating LmaxLB to 698.9. C=1097.9, d=399Updating LmaxLB to 739.4. C=1164.4, d=425Updating LmaxLB to 772.2. C=1208.2, d=436Updating LmaxLB to 828.6. C=1272.6, d=444Lower bound on Lmax based on areas:0
Max Lksingle:2083
Max reduction:2083
Now adding static psi-2-in-2 dominance rules ...
Added 98 safe move dominance lazy constraints
Added 114 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2689 rows and 1832 columns.
MIP Presolve modified 2614 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 1087 rows, 718 columns, and 5407 nonzeros.
Reduced MIP has 667 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1232.
Problem contains 114 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.03 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      539.7378   174                    539.7378      594         
      0     0      616.6302   154                   Cuts: 163     1052         
      0     0      689.7552   162                   Cuts: 170     1401         
      0     0      723.1802   170                   Cuts: 130     1623         
      0     0      747.1001   180                   Cuts: 135     1782         
      0     0      753.3858   198                    Cuts: 83     1844         
      0     0      763.8393   219                    Cuts: 87     1905         
*     0+    0                         1181.0000      763.8393     1905   35.32%
      0     0      766.6864   217     1181.0000      Cuts: 29     1950   35.08%
      0     0      767.8916   215     1181.0000      Cuts: 60     1980   34.98%
      0     0      768.7253   211     1181.0000      Cuts: 35     2028   34.91%
      0     0      769.1203   231     1181.0000      Cuts: 36     2054   34.88%
      0     0      769.1463   229     1181.0000      Cuts: 46     2066   34.87%
      0     0      769.1477   217     1181.0000   Impl Bds: 9     2068   34.87%
      0     0      769.1477   220     1181.0000      Cuts: 25     2072   34.87%
      0     2      769.1477   215     1181.0000      769.2112     2072   34.87%
Elapsed time =   0.66 sec. (tree size =  0.00 MB, solutions = 1)
    100    96      812.7839   161     1181.0000      770.2926     8542   34.78%
    200   190     1091.3926    54     1181.0000      776.4732    15574   34.25%
    300   278      845.4383   193     1181.0000      780.0495    21051   33.95%
*   350+  321                         1161.0000      780.0495    24486   32.81%
*   390+  340                         1127.0000      784.2637    27977   30.41%
    400   352      928.0069   115     1127.0000      784.2637    29001   30.41%
*   441   356      integral     0     1095.0000      784.2637    30656   28.38%
    500   415     1077.3848    39     1095.0000      785.3787    35174   28.28%
*   541+  432                         1078.0000      785.4730    38380   27.14%
*   541+  431                         1075.0000      785.4730    38380   26.93%
    600   486      958.6095    85     1075.0000      786.0802    41394   26.88%
*   651+  354                         1072.0000     1022.0000    45101    4.66%
*   651+  236                         1025.0000     1022.0000    45212    0.29%

Clique cuts applied:  8
Cover cuts applied:  17
Implied bound cuts applied:  98
Flow cuts applied:  3
Mixed integer rounding cuts applied:  9
Zero-half cuts applied:  3
Gomory fractional cuts applied:  4
Lazy constraints applied:  2
Optimal
Lmax: 1025
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 3
Job 6 into batch 6
Job 7 into batch 6
Job 8 into batch 8
Job 9 into batch 6
Job 10 into batch 6
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 15
Job 16 into batch 16
Job 17 into batch 11
Job 18 into batch 18
Job 19 into batch 19
Job 20 into batch 15
Job 21 into batch 15
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 25
Job 26 into batch 8
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 29
Job 30 into batch 19
Job 31 into batch 16
Job 32 into batch 32
Job 33 into batch 27
Job 34 into batch 25
Job 35 into batch 22
Job 36 into batch 36
Job 37 into batch 14
Job 38 into batch 38
Job 39 into batch 39
Job 40 into batch 40
Job 41 into batch 32
Job 42 into batch 16
Job 43 into batch 36
Job 44 into batch 40
Job 45 into batch 45
Job 46 into batch 38
Job 47 into batch 14
Job 48 into batch 48
Job 49 into batch 38
Job 0:	s=10	p=1	d=10	L=(-9+0-0)=-9=			Pk=1	Total size:10
Job 1:	s=7	p=22	d=38	L=(-15+0-0)=-15=			Pk=22	Total size:7
Job 2:	s=8	p=3	d=39	L=(-13+0-0)=-13=			Pk=3	Total size:8
Job 3:	s=7	p=16	d=57	L=(-15+0-0)=-15=			Pk=16	Total size:9
Job 4:	s=6	p=4	d=76	L=(-30+0-0)=-30=			Pk=4	Total size:6
Job 5:	s=2	p=13	d=79	L=(-20+-13-1295)=-1328=			Pk=13	Total size:0
Job 6:	s=7	p=39	d=88	L=(10+-13-0)=-3=			Pk=39	Total size:10
Job 7:	s=1	p=15	d=98	L=(15+-28-1295)=-1308=			Pk=15	Total size:0
Job 8:	s=7	p=33	d=98	L=(48+-28-0)=20=			Pk=33	Total size:9
Job 9:	s=1	p=22	d=102	L=(66+-50-1295)=-1279=			Pk=22	Total size:0
Job 10:	s=1	p=39	d=104	L=(103+-89-1295)=-1281=			Pk=39	Total size:0
Job 11:	s=5	p=11	d=105	L=(113+-78-0)=35=			Pk=22	Total size:10
Job 12:	s=10	p=16	d=106	L=(128+-78-0)=50=			Pk=16	Total size:10
Job 13:	s=9	p=4	d=125	L=(113+-78-0)=35=			Pk=4	Total size:9
Job 14:	s=3	p=40	d=136	L=(142+-45-0)=97=			Pk=73	Total size:10
Job 15:	s=6	p=62	d=143	L=(197+-45-0)=152=			Pk=62	Total size:10
Job 16:	s=3	p=60	d=145	L=(255+-21-0)=234=			Pk=84	Total size:10
Job 17:	s=5	p=22	d=148	L=(274+-43-1295)=-1064=			Pk=22	Total size:0
Job 18:	s=8	p=34	d=156	L=(300+-43-0)=257=			Pk=34	Total size:8
Job 19:	s=5	p=35	d=157	L=(334+-41-0)=293=			Pk=37	Total size:10
Job 20:	s=2	p=58	d=157	L=(392+-99-1295)=-1002=			Pk=58	Total size:0
Job 21:	s=2	p=53	d=160	L=(442+-152-1295)=-1005=			Pk=53	Total size:0
Job 22:	s=2	p=71	d=160	L=(513+-132-0)=381=			Pk=91	Total size:10
Job 23:	s=8	p=26	d=161	L=(538+-132-0)=406=			Pk=26	Total size:8
Job 24:	s=9	p=54	d=164	L=(589+-132-0)=457=			Pk=54	Total size:9
Job 25:	s=5	p=87	d=168	L=(672+-132-0)=540=			Pk=87	Total size:10
Job 26:	s=2	p=32	d=171	L=(701+-164-1295)=-758=			Pk=32	Total size:0
Job 27:	s=5	p=46	d=174	L=(744+-164-0)=580=			Pk=46	Total size:10
Job 28:	s=8	p=47	d=179	L=(786+-164-0)=622=			Pk=47	Total size:8
Job 29:	s=7	p=29	d=181	L=(813+-164-0)=649=			Pk=29	Total size:7
Job 30:	s=5	p=37	d=214	L=(817+-201-1295)=-679=			Pk=37	Total size:0
Job 31:	s=1	p=56	d=243	L=(844+-257-1295)=-708=			Pk=56	Total size:0
Job 32:	s=5	p=97	d=247	L=(937+-257-0)=680=			Pk=97	Total size:10
Job 33:	s=5	p=43	d=257	L=(970+-300-1295)=-625=			Pk=43	Total size:0
Job 34:	s=5	p=56	d=259	L=(1024+-356-1295)=-627=			Pk=56	Total size:0
Job 35:	s=8	p=91	d=267	L=(1107+-447-1295)=-635=			Pk=91	Total size:0
Job 36:	s=6	p=84	d=268	L=(1190+-447-0)=743=			Pk=84	Total size:10
Job 37:	s=1	p=64	d=275	L=(1247+-511-1295)=-559=			Pk=64	Total size:0
Job 38:	s=1	p=58	d=306	L=(1274+-471-0)=803=			Pk=98	Total size:9
Job 39:	s=9	p=93	d=314	L=(1359+-471-0)=888=			Pk=93	Total size:9
Job 40:	s=2	p=79	d=319	L=(1433+-466-0)=967=			Pk=84	Total size:9
Job 41:	s=5	p=97	d=350	L=(1499+-563-1295)=-359=			Pk=97	Total size:0
Job 42:	s=6	p=84	d=356	L=(1577+-647-1295)=-365=			Pk=84	Total size:0
Job 43:	s=4	p=82	d=387	L=(1628+-729-1295)=-396=			Pk=82	Total size:0
Job 44:	s=7	p=84	d=393	L=(1706+-813-1295)=-402=			Pk=84	Total size:0
Job 45:	s=8	p=91	d=399	L=(1791+-813-0)=978=			Pk=91	Total size:8
Job 46:	s=7	p=95	d=425	L=(1860+-908-1295)=-343=			Pk=95	Total size:0
Job 47:	s=6	p=73	d=436	L=(1922+-981-1295)=-354=			Pk=73	Total size:0
Job 48:	s=7	p=92	d=444	L=(2006+-981-0)=1025=			Pk=92	Total size:7
Job 49:	s=1	p=98	d=465	L=(2083+-1079-1295)=-291=			Pk=98	Total size:0

0
1.72414
1025
6.23 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-39.csv
22
129
178
240
261
320
367
379
381
396
470
483
526
558
611
619
621
626
628
688
700
704
744
763
768
802
804
814
848
857
893
944
970
975
1065
1075
1118
1129
1189
1193
1199
1241
1246
1261
1289
1310
1317
1387
1457
1508
Job 0: due 22
Job 1: due 129
Job 2: due 178
Job 3: due 240
Job 4: due 261
Job 5: due 320
Job 6: due 367
Job 7: due 379
Job 8: due 381
Job 9: due 396
Job 10: due 470
Job 11: due 483
Job 12: due 526
Job 13: due 558
Job 14: due 611
Job 15: due 619
Job 16: due 621
Job 17: due 626
Job 18: due 628
Job 19: due 688
Job 20: due 700
Job 21: due 704
Job 22: due 744
Job 23: due 763
Job 24: due 768
Job 25: due 802
Job 26: due 804
Job 27: due 814
Job 28: due 848
Job 29: due 857
Job 30: due 893
Job 31: due 944
Job 32: due 970
Job 33: due 975
Job 34: due 1065
Job 35: due 1075
Job 36: due 1118
Job 37: due 1129
Job 38: due 1189
Job 39: due 1193
Job 40: due 1199
Job 41: due 1241
Job 42: due 1246
Job 43: due 1261
Job 44: due 1289
Job 45: due 1310
Job 46: due 1317
Job 47: due 1387
Job 48: due 1457
Job 49: due 1508
Ignore all jobs after 50
Lmaxinc before safe moves: 934
Now using unsafety tolerance 0
New Lmaxincnew: 307
Difference: 627
Lmaxinc after safe moves: 94249
Initial solution:
0 1 2 2 4 5 6 7 8 9 10 11 12 13 14 12 16 17 18 10 7 21 22 23 8 25 26 27 28 16 30 2 32 33 9 35 11 37 11 7 2 21 10 43 44 9 46 6 11 16 
Updating LmaxLB to -20.8. C=1.2, d=22Updating LmaxLB to -11.0001. C=846, d=857Lower bound on Lmax based on areas:-2147483648
Max Lksingle:934
Max reduction:2.14748e+09
Now adding static psi-2-in-2 dominance rules ...
Added 674 safe move dominance lazy constraints
Added 255 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2950 rows and 1900 columns.
MIP Presolve modified 1843 coefficients.
Aggregator did 5 substitutions.
Reduced MIP has 853 rows, 647 columns, and 4627 nonzeros.
Reduced MIP has 596 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.02 sec.
Probing time =    0.01 sec.
Clique table members: 1588.
Problem contains 255 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0       -8.2111   101                     -8.2111      384         
      0     0       19.7394    66                    Cuts: 88      469         
      0     0       34.1112    68                    Cuts: 45      527         
      0     0       41.1901    70                    Cuts: 31      569         
      0     0       42.3555    74                    Cuts: 25      593         
      0     0       44.5188    78                    Cuts: 24      606         
      0     0       45.1282    85                    Cuts: 16      617         
      0     0       45.6596    85                    Cuts: 13      639         
      0     0       46.0242    82                    Cuts: 34      657         
      0     0       46.5191    84                    Cuts: 16      675         
      0     0       46.6600    90                    Cuts: 23      691         
*     0+    0                          176.0000       46.6600      691   73.49%
      0     0       46.6760    90      176.0000      Cuts: 12      692   73.48%
      0     0       46.7016    85      176.0000       Cuts: 7      696   73.47%
*     0+    0                          155.0000       46.7016      696   69.87%
      0     0       46.8193    87      155.0000      Cuts: 15      704   69.79%
      0     0       46.9336    88      155.0000      Cuts: 16      710   69.72%
      0     0       46.9980    88      155.0000   Impl Bds: 9      715   69.68%
      0     0       46.9983    88      155.0000       Cuts: 5      717   69.68%
*     0+    0                          145.0000       46.9983      717   67.59%
*     0+    0                          125.0000       46.9983      717   62.40%
      0     2       46.9983    82      125.0000       46.9983      717   62.40%
Elapsed time =   0.30 sec. (tree size =  0.00 MB, solutions = 4)
*    40+   27                          124.0000       48.5920     1713   60.81%
*    70+   46                          122.0000       51.3233     2504   57.93%
    100    68       71.3231    67      122.0000       52.5752     3187   56.91%
*   170+  121                          120.0000       57.9941     4534   51.67%
    200   138      103.6305    44      120.0000       61.8297     5354   48.48%
    300   205      104.8998    47      120.0000       66.1316     7387   44.89%
*   310+  199                          116.0000       66.3229     7553   42.83%
    400   259       95.8047    48      116.0000       69.5499     9264   40.04%
*   410+  255                          114.0000       69.9403     9380   38.65%
    500   309        cutoff            114.0000       71.8574    11356   36.97%
*   520     0      integral     0      114.0000                  13392    0.00%

Clique cuts applied:  3
Cover cuts applied:  18
Implied bound cuts applied:  11
Flow cuts applied:  4
Mixed integer rounding cuts applied:  6
Zero-half cuts applied:  13
Gomory fractional cuts applied:  8
Optimal
Lmax: 114
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 5
Job 6 into batch 6
Job 7 into batch 6
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 0
Job 11 into batch 11
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 14
Job 15 into batch 12
Job 16 into batch 3
Job 17 into batch 17
Job 18 into batch 18
Job 19 into batch 0
Job 20 into batch 2
Job 21 into batch 21
Job 22 into batch 22
Job 23 into batch 23
Job 24 into batch 8
Job 25 into batch 3
Job 26 into batch 21
Job 27 into batch 27
Job 28 into batch 28
Job 29 into batch 11
Job 30 into batch 30
Job 31 into batch 17
Job 32 into batch 32
Job 33 into batch 33
Job 34 into batch 30
Job 35 into batch 35
Job 36 into batch 36
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 27
Job 40 into batch 23
Job 41 into batch 36
Job 42 into batch 33
Job 43 into batch 43
Job 44 into batch 36
Job 45 into batch 30
Job 46 into batch 38
Job 47 into batch 47
Job 48 into batch 38
Job 49 into batch 49
Job 0:	s=2	p=6	d=22	L=(-16+29-0)=13=			Pk=36	Total size:10
Job 1:	s=10	p=17	d=129	L=(-106+29-0)=-77=			Pk=17	Total size:10
Job 2:	s=6	p=62	d=178	L=(-93+33-0)=-60=			Pk=66	Total size:10
Job 3:	s=1	p=62	d=240	L=(-93+64-0)=-29=			Pk=94	Total size:10
Job 4:	s=9	p=36	d=261	L=(-78+64-0)=-14=			Pk=36	Total size:9
Job 5:	s=10	p=19	d=320	L=(-118+64-0)=-54=			Pk=19	Total size:10
Job 6:	s=5	p=64	d=367	L=(-101+70-0)=-31=			Pk=70	Total size:10
Job 7:	s=5	p=70	d=379	L=(-43+0-307)=-350=			Pk=70	Total size:0
Job 8:	s=4	p=41	d=381	L=(-4+1-0)=-3=			Pk=42	Total size:10
Job 9:	s=7	p=40	d=396	L=(21+1-0)=22=			Pk=40	Total size:7
Job 10:	s=4	p=36	d=470	L=(-17+-35-307)=-359=			Pk=36	Total size:0
Job 11:	s=6	p=80	d=483	L=(50+-35-0)=15=			Pk=80	Total size:10
Job 12:	s=6	p=43	d=526	L=(50+-35-0)=15=			Pk=43	Total size:10
Job 13:	s=10	p=27	d=558	L=(45+-35-0)=10=			Pk=27	Total size:10
Job 14:	s=10	p=55	d=611	L=(47+-35-0)=12=			Pk=55	Total size:10
Job 15:	s=4	p=41	d=619	L=(80+-76-307)=-303=			Pk=41	Total size:0
Job 16:	s=2	p=84	d=621	L=(162+-160-307)=-305=			Pk=84	Total size:0
Job 17:	s=7	p=60	d=626	L=(217+-160-0)=57=			Pk=60	Total size:8
Job 18:	s=10	p=13	d=628	L=(228+-160-0)=68=			Pk=13	Total size:10
Job 19:	s=4	p=15	d=688	L=(183+-175-307)=-299=			Pk=15	Total size:0
Job 20:	s=4	p=66	d=700	L=(237+-241-307)=-311=			Pk=66	Total size:0
Job 21:	s=5	p=43	d=704	L=(276+-218-0)=58=			Pk=66	Total size:10
Job 22:	s=10	p=51	d=744	L=(287+-218-0)=69=			Pk=51	Total size:10
Job 23:	s=8	p=56	d=763	L=(324+-218-0)=106=			Pk=56	Total size:10
Job 24:	s=6	p=42	d=768	L=(361+-260-307)=-206=			Pk=42	Total size:0
Job 25:	s=7	p=94	d=802	L=(421+-354-307)=-240=			Pk=94	Total size:0
Job 26:	s=5	p=66	d=804	L=(485+-420-307)=-242=			Pk=66	Total size:0
Job 27:	s=7	p=49	d=814	L=(524+-420-0)=104=			Pk=49	Total size:8
Job 28:	s=6	p=42	d=848	L=(532+-420-0)=112=			Pk=42	Total size:6
Job 29:	s=4	p=75	d=857	L=(598+-494-307)=-203=			Pk=75	Total size:0
Job 30:	s=8	p=41	d=893	L=(603+-494-0)=109=			Pk=41	Total size:10
Job 31:	s=1	p=60	d=944	L=(612+-554-307)=-249=			Pk=60	Total size:0
Job 32:	s=10	p=43	d=970	L=(629+-554-0)=75=			Pk=43	Total size:10
Job 33:	s=8	p=24	d=975	L=(648+-554-0)=94=			Pk=24	Total size:10
Job 34:	s=1	p=40	d=1065	L=(598+-594-307)=-303=			Pk=40	Total size:0
Job 35:	s=7	p=42	d=1075	L=(630+-594-0)=36=			Pk=42	Total size:7
Job 36:	s=2	p=77	d=1118	L=(664+-572-0)=92=			Pk=99	Total size:10
Job 37:	s=10	p=17	d=1129	L=(670+-572-0)=98=			Pk=17	Total size:10
Job 38:	s=1	p=72	d=1189	L=(682+-570-0)=112=			Pk=74	Total size:10
Job 39:	s=1	p=44	d=1193	L=(722+-614-307)=-199=			Pk=44	Total size:0
Job 40:	s=2	p=52	d=1199	L=(768+-666-307)=-205=			Pk=52	Total size:0
Job 41:	s=4	p=40	d=1241	L=(766+-706-307)=-247=			Pk=40	Total size:0
Job 42:	s=2	p=23	d=1246	L=(784+-729-307)=-252=			Pk=23	Total size:0
Job 43:	s=9	p=51	d=1261	L=(820+-729-0)=91=			Pk=51	Total size:9
Job 44:	s=4	p=99	d=1289	L=(891+-828-307)=-244=			Pk=99	Total size:0
Job 45:	s=1	p=39	d=1310	L=(909+-867-307)=-265=			Pk=39	Total size:0
Job 46:	s=8	p=24	d=1317	L=(926+-891-307)=-272=			Pk=24	Total size:0
Job 47:	s=5	p=53	d=1387	L=(909+-891-0)=18=			Pk=53	Total size:5
Job 48:	s=1	p=74	d=1457	L=(913+-965-307)=-359=			Pk=74	Total size:0
Job 49:	s=3	p=72	d=1508	L=(934+-965-0)=-31=			Pk=72	Total size:3

-2147483648
1.66667
114
2.05 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-40.csv
97
138
157
162
205
276
284
316
353
372
390
412
420
434
454
475
498
501
517
530
533
706
719
742
767
768
777
777
836
853
855
880
903
929
929
935
942
988
1002
1019
1111
1114
1152
1169
1217
1223
1269
1289
1423
1541
Job 0: due 97
Job 1: due 138
Job 2: due 157
Job 3: due 162
Job 4: due 205
Job 5: due 276
Job 6: due 284
Job 7: due 316
Job 8: due 353
Job 9: due 372
Job 10: due 390
Job 11: due 412
Job 12: due 420
Job 13: due 434
Job 14: due 454
Job 15: due 475
Job 16: due 498
Job 17: due 501
Job 18: due 517
Job 19: due 530
Job 20: due 533
Job 21: due 706
Job 22: due 719
Job 23: due 742
Job 24: due 767
Job 25: due 768
Job 26: due 777
Job 27: due 777
Job 28: due 836
Job 29: due 853
Job 30: due 855
Job 31: due 880
Job 32: due 903
Job 33: due 929
Job 34: due 929
Job 35: due 935
Job 36: due 942
Job 37: due 988
Job 38: due 1002
Job 39: due 1019
Job 40: due 1111
Job 41: due 1114
Job 42: due 1152
Job 43: due 1169
Job 44: due 1217
Job 45: due 1223
Job 46: due 1269
Job 47: due 1289
Job 48: due 1423
Job 49: due 1541
Ignore all jobs after 48
Lmaxinc before safe moves: 943
Now using unsafety tolerance 0
New Lmaxincnew: 346
Difference: 597
Lmaxinc after safe moves: 119716
Initial solution:
0 1 2 3 4 2 6 2 8 9 10 2 12 13 14 15 16 17 18 19 20 3 8 23 24 16 15 14 24 23 30 31 16 33 34 35 19 9 3 39 6 14 13 2 44 18 46 4 
Updating LmaxLB to -76. C=21, d=97Updating LmaxLB to -42.1. C=458.9, d=501Updating LmaxLB to -16.1. C=513.9, d=530Updating LmaxLB to 11.3. C=544.3, d=533same duedate: 26
same duedate: 33
Lower bound on Lmax based on areas:0
Max Lksingle:943
Max reduction:943
Now adding static psi-2-in-2 dominance rules ...
Added 958 safe move dominance lazy constraints
Added 319 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2589 rows and 1634 columns.
MIP Presolve modified 1788 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 880 rows, 718 columns, and 4897 nonzeros.
Reduced MIP has 669 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.00 sec.
Tried aggregator 1 time.
MIP Presolve eliminated 2 rows and 0 columns.
Reduced MIP has 878 rows, 718 columns, and 4863 nonzeros.
Reduced MIP has 669 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time =    0.02 sec.
Probing time =    0.00 sec.
Clique table members: 1375.
Problem contains 319 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.02 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0        0.0000   110                      0.0000      422         
      0     0       24.1831    64                    Cuts: 45      536         
      0     0       35.1159    66                    Cuts: 39      607         
      0     0       40.1744    71                    Cuts: 33      713         
      0     0       42.5339    70                    Cuts: 20      754         
*     0+    0                          144.0000       42.5339      754   70.46%
      0     0       45.7868    66      144.0000      Cuts: 24      822   68.20%
*     0+    0                          137.0000       45.7868      822   66.58%
      0     0       47.3694    70      137.0000      Cuts: 25      852   65.42%
      0     0       48.0399    77      137.0000      Cuts: 17      884   64.93%
      0     0       48.2319    80      137.0000      Cuts: 13      903   64.79%
      0     0       48.2455    82      137.0000       Cuts: 5      914   64.78%
      0     0       48.2576    81      137.0000       Cuts: 8      927   64.78%
      0     0       48.2576    84      137.0000       Cuts: 4      932   64.78%
      0     0       48.2576    76      137.0000   Impl Bds: 2      936   64.78%
      0     2       48.2576    69      137.0000       48.3825      936   64.68%
Elapsed time =   0.45 sec. (tree size =  0.00 MB, solutions = 2)
    100    80      110.0000    19      137.0000       51.4951     4509   62.41%
*   199   134      integral     0      122.0000       53.6582     8840   56.02%
    200   135       65.8689    68      122.0000       54.0862     9022   55.67%
    300   216      110.0000    24      122.0000       59.0064    12249   51.63%
    400   283       74.3919    74      122.0000       60.5443    15359   50.37%
*   476   160      integral     0      110.0000       62.4744    18637   43.21%
    500   174      102.0000    23      110.0000       65.2268    20183   40.70%
    600   238      101.5000    17      110.0000       75.3548    26412   31.50%
    700   162        cutoff            110.0000       91.3224    29212   16.98%
*   746+  121                          106.0000       92.4975    30340   12.74%
    800   113      102.6352    38      106.0000       98.0000    32455    7.55%
Elapsed time =   4.13 sec. (tree size =  0.37 MB, solutions = 5)
    900   115      103.3781    56      106.0000       98.7138    34152    6.87%
   1000   145      104.7546    39      106.0000      100.4568    35671    5.23%
   1100   143      102.3130    33      106.0000      102.0000    38385    3.77%
*  1196+  131                          105.0000      102.0000    42143    2.86%
   1200   135      102.2206    59      105.0000      102.0000    42191    2.86%
*  1220     0      integral     0      102.0000      102.0000    42341    0.00%

Clique cuts applied:  4
Cover cuts applied:  84
Implied bound cuts applied:  23
Flow cuts applied:  4
Mixed integer rounding cuts applied:  10
Zero-half cuts applied:  8
Gomory fractional cuts applied:  7
Lazy constraints applied:  31
Optimal
Lmax: 102
We moved the following jobs: 
Job 0 into batch 0
Job 1 into batch 1
Job 2 into batch 2
Job 3 into batch 3
Job 4 into batch 4
Job 5 into batch 4
Job 6 into batch 3
Job 7 into batch 7
Job 8 into batch 8
Job 9 into batch 9
Job 10 into batch 10
Job 11 into batch 8
Job 12 into batch 12
Job 13 into batch 13
Job 14 into batch 13
Job 15 into batch 2
Job 16 into batch 13
Job 17 into batch 7
Job 18 into batch 18
Job 19 into batch 18
Job 20 into batch 20
Job 21 into batch 9
Job 22 into batch 20
Job 23 into batch 23
Job 24 into batch 24
Job 25 into batch 23
Job 26 into batch 26
Job 27 into batch 4
Job 28 into batch 24
Job 29 into batch 29
Job 30 into batch 26
Job 31 into batch 31
Job 32 into batch 32
Job 33 into batch 29
Job 34 into batch 34
Job 35 into batch 32
Job 36 into batch 31
Job 37 into batch 37
Job 38 into batch 38
Job 39 into batch 38
Job 40 into batch 34
Job 41 into batch 41
Job 42 into batch 42
Job 43 into batch 42
Job 44 into batch 44
Job 45 into batch 41
Job 46 into batch 46
Job 47 into batch 47
Job 0:	s=10	p=21	d=97	L=(-76+0-0)=-76=			Pk=21	Total size:10
Job 1:	s=9	p=2	d=138	L=(-115+0-0)=-115=			Pk=2	Total size:9
Job 2:	s=2	p=51	d=157	L=(-83+6-0)=-77=			Pk=58	Total size:10
Job 3:	s=4	p=33	d=162	L=(-55+9-0)=-46=			Pk=37	Total size:10
Job 4:	s=8	p=99	d=205	L=(1+9-0)=10=			Pk=99	Total size:10
Job 5:	s=1	p=52	d=276	L=(-18+-43-346)=-407=			Pk=52	Total size:0
Job 6:	s=6	p=37	d=284	L=(11+-80-346)=-415=			Pk=37	Total size:0
Job 7:	s=2	p=51	d=316	L=(30+-71-0)=-41=			Pk=60	Total size:10
Job 8:	s=8	p=21	d=353	L=(14+-71-0)=-57=			Pk=21	Total size:9
Job 9:	s=7	p=47	d=372	L=(42+-71-0)=-29=			Pk=47	Total size:10
Job 10:	s=10	p=58	d=390	L=(82+-71-0)=11=			Pk=58	Total size:10
Job 11:	s=1	p=13	d=412	L=(73+-84-346)=-357=			Pk=13	Total size:0
Job 12:	s=9	p=19	d=420	L=(84+-84-0)=0=			Pk=19	Total size:9
Job 13:	s=3	p=55	d=434	L=(125+-51-1.15241e-13)=74=			Pk=88	Total size:10
Job 14:	s=4	p=88	d=454	L=(193+-139-346)=-292=			Pk=88	Total size:0
Job 15:	s=8	p=58	d=475	L=(230+-197-346)=-313=			Pk=58	Total size:0
Job 16:	s=3	p=79	d=498	L=(286+-276-346)=-336=			Pk=79	Total size:0
Job 17:	s=8	p=60	d=501	L=(343+-336-346)=-339=			Pk=60	Total size:0
Job 18:	s=5	p=23	d=517	L=(350+-272-0)=78=			Pk=87	Total size:10
Job 19:	s=5	p=87	d=530	L=(424+-359-346)=-281=			Pk=87	Total size:0
Job 20:	s=8	p=38	d=533	L=(459+-359-0)=100=			Pk=38	Total size:10
Job 21:	s=3	p=27	d=706	L=(313+-386-346)=-419=			Pk=27	Total size:0
Job 22:	s=2	p=6	d=719	L=(306+-392-346)=-432=			Pk=6	Total size:0
Job 23:	s=6	p=79	d=742	L=(362+-391-0)=-29=			Pk=80	Total size:9
Job 24:	s=5	p=94	d=767	L=(431+-391-0)=40=			Pk=94	Total size:10
Job 25:	s=3	p=80	d=768	L=(510+-471-346)=-307=			Pk=80	Total size:0
Job 26:	s=2	p=2	d=777	L=(503+-471-0)=32=			Pk=2	Total size:10
Job 27:	s=1	p=84	d=777	L=(587+-555-346)=-314=			Pk=84	Total size:0
Job 28:	s=5	p=91	d=836	L=(619+-646-346)=-373=			Pk=91	Total size:0
Job 29:	s=3	p=5	d=853	L=(607+-637-0)=-30=			Pk=14	Total size:9
Job 30:	s=8	p=1	d=855	L=(606+-638-346)=-378=			Pk=1	Total size:0
Job 31:	s=6	p=67	d=880	L=(648+-625-0)=23=			Pk=80	Total size:10
Job 32:	s=2	p=80	d=903	L=(705+-614-0)=91=			Pk=91	Total size:9
Job 33:	s=6	p=14	d=929	L=(693+-628-346)=-281=			Pk=14	Total size:0
Job 34:	s=5	p=25	d=929	L=(718+-628-0)=90=			Pk=25	Total size:8
Job 35:	s=7	p=91	d=935	L=(803+-719-346)=-262=			Pk=91	Total size:0
Job 36:	s=4	p=80	d=942	L=(876+-799-346)=-269=			Pk=80	Total size:0
Job 37:	s=3	p=11	d=988	L=(841+-799-0)=42=			Pk=11	Total size:3
Job 38:	s=3	p=22	d=1002	L=(849+-799-0)=50=			Pk=22	Total size:10
Job 39:	s=7	p=10	d=1019	L=(842+-809-346)=-313=			Pk=10	Total size:0
Job 40:	s=3	p=14	d=1111	L=(764+-823-346)=-405=			Pk=14	Total size:0
Job 41:	s=4	p=89	d=1114	L=(850+-823-0)=27=			Pk=89	Total size:9
Job 42:	s=6	p=50	d=1152	L=(862+-823-0)=39=			Pk=50	Total size:9
Job 43:	s=3	p=46	d=1169	L=(891+-869-346)=-324=			Pk=46	Total size:0
Job 44:	s=9	p=33	d=1217	L=(876+-869-0)=7=			Pk=33	Total size:9
Job 45:	s=5	p=14	d=1223	L=(884+-883-346)=-345=			Pk=14	Total size:0
Job 46:	s=6	p=38	d=1269	L=(876+-883-0)=-7=			Pk=38	Total size:6
Job 47:	s=2	p=87	d=1289	L=(943+-883-0)=60=			Pk=87	Total size:2

0
1.77778
102
5.45 seconds
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: ls
number of moves (njm): 0
Min Lmax: 0
Max Lmax: 3000
Loading file: /home/sebastian/thesis/daste/data/bp50-01.csv
35
47
49
50
50
54
57
70
78
80
93
93
94
96
117
119
119
120
124
126
133
140
142
143
147
147
154
170
186
200
212
212
216
219
236
240
245
249
254
256
259
265
268
270
271
282
283
284
299
390
Job 0: due 35
Job 1: due 47
Job 2: due 49
Job 3: due 50
Job 4: due 50
Job 5: due 54
Job 6: due 57
Job 7: due 70
Job 8: due 78
Job 9: due 80
Job 10: due 93
Job 11: due 93
Job 12: due 94
Job 13: due 96
Job 14: due 117
Job 15: due 119
Job 16: due 119
Job 17: due 120
Job 18: due 124
Job 19: due 126
Job 20: due 133
Job 21: due 140
Job 22: due 142
Job 23: due 143
Job 24: due 147
Job 25: due 147
Job 26: due 154
Job 27: due 170
Job 28: due 186
Job 29: due 200
Job 30: due 212
Job 31: due 212
Job 32: due 216
Job 33: due 219
Job 34: due 236
Job 35: due 240
Job 36: due 245
Job 37: due 249
Job 38: due 254
Job 39: due 256
Job 40: due 259
Job 41: due 265
Job 42: due 268
Job 43: due 270
Job 44: due 271
Job 45: due 282
Job 46: due 283
Job 47: due 284
Job 48: due 299
Job 49: due 390
Ignore all jobs after 50
Lmaxinc before safe moves: 1948
Now using unsafety tolerance 0
New Lmaxincnew: 1088
Difference: 860
Lmaxinc after safe moves: 1.18374e+06
Initial solution:
0 1 2 3 0 5 6 7 1 5 3 11 2 13 14 7 16 5 11 6 20 20 22 23 24 2 13 23 16 29 22 29 32 14 14 22 36 37 38 39 40 41 14 32 44 45 46 38 48 45 
Updating LmaxLB to -28.8667. C=6.13333, d=35same duedate: 3
Updating LmaxLB to -10.3333. C=39.6667, d=50Updating LmaxLB to -0.866669. C=69.1333, d=70Updating LmaxLB to 0.466667. C=78.4667, d=78Updating LmaxLB to 2.06667. C=82.0667, d=80same duedate: 10
Updating LmaxLB to 7.26666. C=100.267, d=93Updating LmaxLB to 11.0667. C=105.067, d=94Updating LmaxLB to 21.0667. C=117.067, d=96Updating LmaxLB to 30.0667. C=147.067, d=117same duedate: 15
Updating LmaxLB to 64.7333. C=183.733, d=119Updating LmaxLB to 68.5333. C=192.533, d=124Updating LmaxLB to 68.9333. C=194.933, d=126Updating LmaxLB to 78.7333. C=211.733, d=133Updating LmaxLB to 90.4. C=230.4, d=140Updating LmaxLB to 117.733. C=259.733, d=142Updating LmaxLB to 128.133. C=271.133, d=143same duedate: 24
Updating LmaxLB to 138.2. C=285.2, d=147Updating LmaxLB to 141.2. C=295.2, d=154Updating LmaxLB to 152.2. C=322.2, d=170same duedate: 30
Updating LmaxLB to 180.533. C=392.533, d=212Updating LmaxLB to 219.733. C=435.733, d=216Updating LmaxLB to 245.133. C=464.133, d=219Updating LmaxLB to 254.467. C=499.467, d=245Updating LmaxLB to 286.467. C=535.467, d=249Updating LmaxLB to 336.667. C=590.667, d=254Updating LmaxLB to 390.667. C=646.667, d=256Updating LmaxLB to 433.533. C=692.533, d=259Updating LmaxLB to 475.533. C=740.533, d=265Updating LmaxLB to 480.667. C=748.667, d=268Updating LmaxLB to 511.067. C=781.067, d=270Updating LmaxLB to 552.733. C=823.733, d=271Updating LmaxLB to 604.4. C=886.4, d=282Updating LmaxLB to 659.4. C=942.4, d=283Updating LmaxLB to 670.133. C=954.133, d=284Updating LmaxLB to 703.133. C=1002.13, d=299Lower bound on Lmax based on areas:0
Max Lksingle:1948
Max reduction:1948
Now adding static psi-2-in-2 dominance rules ...
Added 274 safe move dominance lazy constraints
Added 167 safe move requirement lazy constraints
Tried aggregator 2 times.
MIP Presolve eliminated 2192 rows and 1571 columns.
MIP Presolve modified 2594 coefficients.
Aggregator did 1 substitutions.
Reduced MIP has 1580 rows, 980 columns, and 7105 nonzeros.
Reduced MIP has 929 binaries, 0 generals, 0 SOSs, and 0 indicators.
Probing time =    0.01 sec.
Tried aggregator 1 time.
MIP Presolve modified 1 coefficients.
Reduced MIP has 1580 rows, 980 columns, and 7105 nonzeros.
Reduced MIP has 929 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time =    0.02 sec.
Probing time =    0.01 sec.
Clique table members: 1096.
Problem contains 823 lazy constraints.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: none, using 1 thread.
Root relaxation solution time =    0.11 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer     Best Node    ItCnt     Gap

      0     0      279.5460   290                    279.5460     1175         
      0     0      342.9931   265                   Cuts: 178     1650         
      0     0      386.8802   268                   Cuts: 243     2055         
      0     0      422.2014   266                   Cuts: 262     2435         
      0     0      436.7135   276                   Cuts: 274     2741         
      0     0      446.5012   268                   Cuts: 219     3000         
      0     0      455.7276   249                   Cuts: 207     3159         
      0     0      460.8654   263                   Cuts: 173     3302         
      0     0      466.4049   279                   Cuts: 197     3443         
      0     0      467.4719   274                   Cuts: 122     3542         
      0     0      470.5398   297                   Cuts: 122     3629         
      0     0      471.4121   286                   Cuts: 109     3709         
      0     0      472.6939   273                    Cuts: 80     3803         
      0     0      472.7626   285                    Cuts: 64     3821         
      0     0      472.8182   290                    Cuts: 28     3836         
      0     0      472.8904   276                    Cuts: 26     3863         
